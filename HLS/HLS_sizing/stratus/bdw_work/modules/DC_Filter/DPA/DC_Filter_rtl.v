// Generated by stratus_hls 19.12-s100  (91710.131054)
// Tue May  4 16:32:29 2021
// from ../DC_Filter.cpp

`timescale 1ps / 1ps

      
module DC_Filter(i_clk, i_rst, i_rgb_busy, i_rgb_vld, i_rgb_data, o_result_busy, o_result_vld, o_result_data, i_rgb_inside_busy, i_rgb_inside_vld, i_rgb_inside_data, o_rgb_inside_busy, o_rgb_inside_vld, o_rgb_inside_data);

      input i_clk;
      input i_rst;
      input i_rgb_vld;
      input [23:0] i_rgb_data;
      input o_result_busy;
      input i_rgb_inside_vld;
      input [23:0] i_rgb_inside_data;
      input o_rgb_inside_busy;
      output i_rgb_busy;
      output o_result_vld;
      output [23:0] o_result_data;
      reg [23:0] o_result_data;
      output i_rgb_inside_busy;
      output o_rgb_inside_vld;
      output [23:0] o_rgb_inside_data;
      reg [23:0] o_rgb_inside_data;
      reg o_rgb_inside_m_req_m_prev_trig_req;
      reg o_rgb_inside_m_unacked_req;
      wire DC_Filter_Xor_1Ux1U_1U_1_4_out1;
      wire DC_Filter_Or_1Ux1U_1U_4_5_out1;
      reg DC_Filter_N_Muxb_1_2_33_4_62_out1;
      reg i_rgb_inside_m_unvalidated_req;
      wire DC_Filter_gen_busy_r_4_116_gnew_req_i0;
      wire DC_Filter_gen_busy_r_4_116_gdiv_i1;
      wire DC_Filter_gen_busy_r_4_116_gen_busy_0_i_rgb_m_data_is_invalid_next;
      reg o_result_m_req_m_prev_trig_req;
      reg o_result_m_unacked_req;
      wire DC_Filter_Xor_1Ux1U_1U_1_1_out1;
      wire DC_Filter_Or_1Ux1U_1U_4_2_out1;
      reg DC_Filter_N_Muxb_1_2_33_4_7_out1;
      reg i_rgb_m_unvalidated_req;
      wire DC_Filter_gen_busy_r_4_115_gnew_req_i0;
      wire DC_Filter_gen_busy_r_4_115_gdiv_i1;
      wire DC_Filter_gen_busy_r_4_115_gen_busy_0_i_rgb_m_data_is_invalid_next;
      reg[4:0] global_state1_next;
      wire[11:0] DC_Filter_Add_12Ux12U_12U_4_52_out1;
      wire[11:0] DC_Filter_Mul_8Ux4U_12U_4_51_out1;
      wire DC_Filter_Eqi1u2_4_50_out1;
      reg[11:0] DC_Filter_N_Mux_12_3_40_4_48_out1;
      wire DC_Filter_OrReduction_2U_1U_4_47_out1;
      wire[11:0] DC_Filter_Mul_12U_3_4_45_out1;
      reg[1:0] DC_Filter_Add2u2Mul2i3u2_4_41_in1;
      reg[1:0] gs_ctrl31;
      reg[1:0] DC_Filter_Add2u2Mul2i3u2_4_41_in2;
      reg[1:0] gs_ctrl30;
      wire DC_Filter_OrReduction_2U_1U_4_37_out1;
      wire DC_Filter_Eqi1u2_4_36_out1;
      wire DC_Filter_Eqi2u2_4_35_out1;
      reg[1:0] DC_Filter_Add_2Ux1U_2U_4_34_in2;
      reg gs_ctrl26;
      reg[8:0] DC_Filter_Add2u9Mul2i258Add3i1u1Mul2i3u2_4_13_in1;
      reg DC_Filter_Add2u9Mul2i258Add3i1u1Mul2i3u2_4_13_in2;
      reg[1:0] DC_Filter_Add2u9Mul2i258Add3i1u1Mul2i3u2_4_13_in3;
      reg gs_ctrl23;
      reg[1:0] gs_ctrl22;
      reg[2:0] gs_ctrl21;
      reg[2:0] gs_ctrl20;
      wire[11:0] DC_Filter_Add2u9Mul2i258Add3i1u1Mul2i3u2_4_13_out1;
      wire[11:0] DC_Filter_Add2u9Mul2i258u2_4_18_out1;
      wire[11:0] DC_Filter_Add2u9Mul2i258Add2i3u2_4_21_out1;
      wire[11:0] DC_Filter_Add2u9Mul2i258Add2i6u2_4_22_out1;
      wire[10:0] DC_Filter_gen000002_4_28_out1;
      wire[11:0] DC_Filter_gen000001_4_30_out1;
      wire[11:0] DC_Filter_Add2iLLu9_4_32_out1;
      wire[11:0] DC_Filter_Add_12Ux9U_12U_4_46_out1;
      reg[3:0] gs_ctrl19;
      wire[11:0] DC_Filter_Add2u9Mul2i258Add2u2Mul2i3u2_4_9_out1;
      reg[8:0] DC_Filter_Add2u9Mul2i258Add2u2Mul2i3u2_4_9_in1;
      reg[1:0] DC_Filter_Add2u9Mul2i258Add2u2Mul2i3u2_4_9_in2;
      reg[1:0] gs_ctrl17;
      reg[1:0] DC_Filter_Add2u9Mul2i258Add2u2Mul2i3u2_4_9_in3;
      reg[1:0] gs_ctrl16;
      wire[3:0] DC_Filter_Add2u2Mul2i3u2_4_41_out1;
      reg[3:0] s_reg_69;
      wire[8:0] DC_Filter_Add_8Ux2U_9U_4_42_out1;
      reg[8:0] s_reg_68;
      reg[3:0] s_reg_67;
      reg[1:0] s_reg_66;
      wire DC_Filter_Eqi2u2_4_44_out1;
      reg s_reg_65;
      wire[11:0] DC_Filter_Add2i1u12_4_33_out1;
      reg[1:0] s_reg_62;
      wire[1:0] DC_Filter_Add_2Ux1U_2U_4_34_out1;
      reg[1:0] s_reg_61;
      reg[11:0] DC_Filter_N_Mux_12_2_39_4_40_out1;
      reg[11:0] s_reg_60;
      reg[11:0] DC_Filter_N_Mux_12_2_38_4_39_out1;
      reg[11:0] s_reg_59;
      wire[1:0] DC_Filter_Add_2Ux1U_2U_4_26_out1;
      reg[11:0] DC_Filter_N_Mux_12_2_38_4_38_out1;
      wire DC_Filter_Lti258u12_4_20_out1;
      reg[11:0] s_reg_58;
      wire DC_Filter_And_1Ux1U_1U_4_59_out1;
      wire[2:0] DC_Filter_gen_busy_r_4_115_out1;
      wire DC_Filter_Not_1U_1U_1_6_out1;
      reg o_rgb_inside_m_req_m_trig_req;
      wire[8:0] DC_Filter_Add2i1u8_4_58_out1;
      reg[11:0] s_reg_63;
      wire[1:0] DC_Filter_Add_2Ux1U_2U_4_25_out1;
      reg[8:0] s_reg_64;
      wire[1:0] DC_Filter_Add2i1u1_4_19_out1;
      wire[1:0] DC_Filter_Add_2Ux1U_2U_4_16_out1;
      wire DC_Filter_Lti257u12_4_17_out1;
      wire[8:0] DC_Filter_Add_9Ux1U_9U_4_10_out1;
      wire[1:0] DC_Filter_Add_2Ux1U_2U_4_12_out1;
      wire[1:0] DC_Filter_Add_2Ux1U_2U_4_11_out1;
      reg i_rgb_m_busy_req_0;
      reg[11:0] DC_Filter_N_Mux_12_2_41_4_53_out1;
      reg[11:0] DC_Filter_N_Mux_12_2_41_4_54_out1;
      reg[11:0] DC_Filter_N_Mux_12_2_41_4_55_out1;
      wire[1:0] DC_Filter_Add_2Ux1U_2U_4_49_out1;
      wire[1:0] DC_Filter_Add_2Ux1U_2U_4_57_out1;
      wire[1:0] DC_Filter_Add_2Ux1U_2U_4_56_out1;
      reg[4:0] global_state1;
      reg stall1;
      reg[4:0] global_state_next;
      wire[11:0] DC_Filter_Add_12Ux12U_12U_4_107_out1;
      wire[11:0] DC_Filter_Mul_8Ux4U_12U_4_106_out1;
      wire DC_Filter_Eqi1u2_4_105_out1;
      reg[11:0] DC_Filter_N_Mux_12_3_40_4_103_out1;
      wire DC_Filter_OrReduction_2U_1U_4_102_out1;
      wire[11:0] DC_Filter_Mul_12U_3_4_100_out1;
      reg[1:0] DC_Filter_Add2u2Mul2i3u2_4_96_in1;
      reg[1:0] gs_ctrl15;
      reg[1:0] DC_Filter_Add2u2Mul2i3u2_4_96_in2;
      reg[1:0] gs_ctrl14;
      wire DC_Filter_OrReduction_2U_1U_4_92_out1;
      wire DC_Filter_Eqi1u2_4_91_out1;
      wire DC_Filter_Eqi2u2_4_90_out1;
      reg[1:0] DC_Filter_Add_2Ux1U_2U_4_89_in2;
      reg gs_ctrl10;
      reg[8:0] DC_Filter_Add2u9Mul2i258Add3i1u1Mul2i3u2_4_68_in1;
      reg DC_Filter_Add2u9Mul2i258Add3i1u1Mul2i3u2_4_68_in2;
      reg[1:0] DC_Filter_Add2u9Mul2i258Add3i1u1Mul2i3u2_4_68_in3;
      reg gs_ctrl7;
      reg[1:0] gs_ctrl6;
      reg[2:0] gs_ctrl5;
      reg[2:0] gs_ctrl4;
      wire[11:0] DC_Filter_Add2u9Mul2i258Add3i1u1Mul2i3u2_4_68_out1;
      wire[11:0] DC_Filter_Add2u9Mul2i258u2_4_73_out1;
      wire[11:0] DC_Filter_Add2u9Mul2i258Add2i3u2_4_76_out1;
      wire[11:0] DC_Filter_Add2u9Mul2i258Add2i6u2_4_77_out1;
      wire[10:0] DC_Filter_gen000002_4_83_out1;
      wire[11:0] DC_Filter_gen000001_4_85_out1;
      wire[11:0] DC_Filter_Add2iLLu9_4_87_out1;
      wire[11:0] DC_Filter_Add_12Ux9U_12U_4_101_out1;
      reg[3:0] gs_ctrl3;
      wire[11:0] DC_Filter_Add2u9Mul2i258Add2u2Mul2i3u2_4_64_out1;
      reg[8:0] DC_Filter_Add2u9Mul2i258Add2u2Mul2i3u2_4_64_in1;
      reg[1:0] DC_Filter_Add2u9Mul2i258Add2u2Mul2i3u2_4_64_in2;
      reg[1:0] gs_ctrl1;
      reg[1:0] DC_Filter_Add2u9Mul2i258Add2u2Mul2i3u2_4_64_in3;
      reg[1:0] gs_ctrl0;
      wire[3:0] DC_Filter_Add2u2Mul2i3u2_4_96_out1;
      reg[3:0] s_reg_138;
      wire[8:0] DC_Filter_Add_8Ux2U_9U_4_97_out1;
      reg[8:0] s_reg_137;
      reg[3:0] s_reg_136;
      reg[1:0] s_reg_135;
      wire DC_Filter_Eqi2u2_4_99_out1;
      reg s_reg_134;
      wire[11:0] DC_Filter_Add2i1u12_4_88_out1;
      reg[1:0] s_reg_131;
      wire[1:0] DC_Filter_Add_2Ux1U_2U_4_89_out1;
      reg[1:0] s_reg_130;
      reg[11:0] DC_Filter_N_Mux_12_2_39_4_95_out1;
      reg[11:0] s_reg_129;
      reg[11:0] DC_Filter_N_Mux_12_2_38_4_94_out1;
      reg[11:0] s_reg_128;
      wire[1:0] DC_Filter_Add_2Ux1U_2U_4_81_out1;
      reg[11:0] DC_Filter_N_Mux_12_2_38_4_93_out1;
      wire DC_Filter_Lti258u12_4_75_out1;
      reg[11:0] s_reg_127;
      wire DC_Filter_And_1Ux1U_1U_4_61_out1;
      wire[2:0] DC_Filter_gen_busy_r_4_116_out1;
      wire DC_Filter_Not_1U_1U_1_3_out1;
      reg o_result_m_req_m_trig_req;
      wire[8:0] DC_Filter_Add2i1u8_4_113_out1;
      reg[11:0] s_reg_132;
      wire[1:0] DC_Filter_Add_2Ux1U_2U_4_80_out1;
      reg[8:0] s_reg_133;
      wire[1:0] DC_Filter_Add2i1u1_4_74_out1;
      wire[1:0] DC_Filter_Add_2Ux1U_2U_4_71_out1;
      wire DC_Filter_Lti257u12_4_72_out1;
      wire[8:0] DC_Filter_Add_9Ux1U_9U_4_65_out1;
      wire[1:0] DC_Filter_Add_2Ux1U_2U_4_67_out1;
      wire[1:0] DC_Filter_Add_2Ux1U_2U_4_66_out1;
      reg i_rgb_inside_m_busy_req_0;
      reg[11:0] DC_Filter_N_Mux_12_2_41_4_108_out1;
      reg[11:0] DC_Filter_N_Mux_12_2_41_4_109_out1;
      reg[11:0] DC_Filter_N_Mux_12_2_41_4_110_out1;
      wire[1:0] DC_Filter_Add_2Ux1U_2U_4_104_out1;
      wire[1:0] DC_Filter_Add_2Ux1U_2U_4_112_out1;
      wire[1:0] DC_Filter_Add_2Ux1U_2U_4_111_out1;
      reg[4:0] global_state;
      reg stall0;
      reg[7:0] f1_array_rgb_DIN;
      reg f1_array_rgb_CE;
      reg f1_array_rgb_RW;
      reg[11:0] f1_array_rgb_in1;
      wire[7:0] f1_array_rgb_out1;
      wire[3:0] mask1_in1;
      wire[3:0] mask1_out1;
      reg[7:0] f2_array_rgb_DIN;
      reg f2_array_rgb_CE;
      reg f2_array_rgb_RW;
      reg[11:0] f2_array_rgb_in1;
      wire[7:0] f2_array_rgb_out1;
      wire[3:0] mask2_in1;
      wire[3:0] mask2_out1;

         DC_Filter_ROM_9X4_mask2 mask2(
                                   .in1( mask2_in1 ),
                                   .out1( mask2_out1 ),
                                   .clk( i_clk )
                                 );

         DC_Filter_RAM_2322X8_1 f2_array_rgb(
                                  .DIN( f2_array_rgb_DIN ),
                                  .CE( f2_array_rgb_CE ),
                                  .RW( f2_array_rgb_RW ),
                                  .in1( f2_array_rgb_in1 ),
                                  .out1( f2_array_rgb_out1 ),
                                  .clk( i_clk )
                                );

         DC_Filter_ROM_9X4_mask1 mask1(
                                   .in1( mask1_in1 ),
                                   .out1( mask1_out1 ),
                                   .clk( i_clk )
                                 );

         DC_Filter_RAM_2322X8_1 f1_array_rgb(
                                  .DIN( f1_array_rgb_DIN ),
                                  .CE( f1_array_rgb_CE ),
                                  .RW( f1_array_rgb_RW ),
                                  .in1( f1_array_rgb_in1 ),
                                  .out1( f1_array_rgb_out1 ),
                                  .clk( i_clk )
                                );

         // resource: mux_24bx2i0c
         // resource: regr_en_24
         always @(posedge i_clk)
          begin :drive_o_result_data
            case (stall0) 

               1'b1:                begin
               end
               
               1'b0:                begin
                  case (global_state) 

                     5'd05, 5'd09:                      begin
                        o_result_data <= i_rgb_inside_data;
                     end
                     
                     5'd16:                      begin
                        if (2'd3 == DC_Filter_Add_2Ux1U_2U_4_104_out1 && (2'd3 == DC_Filter_Add_2Ux1U_2U_4_112_out1 && 2'd3 == DC_Filter_Add_2Ux1U_2U_4_111_out1)) begin
                           o_result_data <= {DC_Filter_N_Mux_12_2_41_4_108_out1[11:4], {DC_Filter_N_Mux_12_2_41_4_109_out1[11:4], DC_Filter_N_Mux_12_2_41_4_110_out1[11:4]}};
                        end
                     end
                     
                  endcase

               end
               
            endcase

         end

         // resource: mux_1bx2i2c
         // resource: regr_en_ss_1
         always @(posedge i_clk)
          begin :drive_i_rgb_inside_m_busy_req_0
            if (i_rst == 1'b0) begin
               i_rgb_inside_m_busy_req_0 <= 1'd1;
            end
            else begin
               case (stall0) 

                  1'b1:                   begin
                  end
                  
                  1'b0:                   begin
                     case (global_state) 

                        5'd01:                         begin
                           if (9'd258 == DC_Filter_Add_9Ux1U_9U_4_65_out1 && (2'd3 == DC_Filter_Add_2Ux1U_2U_4_67_out1 && 2'd3 == DC_Filter_Add_2Ux1U_2U_4_66_out1)) begin
                              i_rgb_inside_m_busy_req_0 <= 1'd0;
                           end
                        end
                        
                        5'd03:                         begin
                           if (9'd257 == DC_Filter_Add_9Ux1U_9U_4_65_out1 && (2'd2 == DC_Filter_Add2i1u1_4_74_out1 && (2'd3 == DC_Filter_Add_2Ux1U_2U_4_71_out1 && DC_Filter_Lti257u12_4_72_out1))) begin
                              i_rgb_inside_m_busy_req_0 <= 1'd0;
                           end
                        end
                        
                        5'd05, 5'd09:                         begin
                           i_rgb_inside_m_busy_req_0 <= 1'd1;
                        end
                        
                        5'd08:                         begin
                           if (9'd257 != s_reg_133) begin
                              i_rgb_inside_m_busy_req_0 <= 1'd0;
                           end
                        end
                        
                        5'd12:                         begin
                           case (DC_Filter_Add_9Ux1U_9U_4_65_out1) 

                              9'd257:                               begin
                                 if (2'd3 != DC_Filter_Add_2Ux1U_2U_4_80_out1) begin
                                    i_rgb_inside_m_busy_req_0 <= 1'd0;
                                 end
                              end
                              
                              default:                               begin
                                 i_rgb_inside_m_busy_req_0 <= 1'd0;
                              end
                              
                           endcase

                        end
                        
                        5'd18:                         begin
                           if (9'd256 == DC_Filter_Add2i1u8_4_113_out1 && 12'd0000 == s_reg_132) begin
                              i_rgb_inside_m_busy_req_0 <= 1'd0;
                           end
                        end
                        
                     endcase

                  end
                  
               endcase

            end
         end

         // resource: regr_en_sc_1
         always @(posedge i_clk)
          begin :drive_o_result_m_req_m_trig_req
            if (i_rst == 1'b0) begin
               o_result_m_req_m_trig_req <= 1'd0;
            end
            else begin
               case (stall0) 

                  1'b1:                   begin
                  end
                  
                  1'b0:                   begin
                     case (global_state) 

                        5'd16:                         begin
                           if (2'd3 == DC_Filter_Add_2Ux1U_2U_4_104_out1 && (2'd3 == DC_Filter_Add_2Ux1U_2U_4_112_out1 && 2'd3 == DC_Filter_Add_2Ux1U_2U_4_111_out1)) begin
                              o_result_m_req_m_trig_req <= DC_Filter_Not_1U_1U_1_3_out1;
                           end
                        end
                        
                     endcase

                  end
                  
               endcase

            end
         end

         // resource: mux_1bx3i1c
         always @(DC_Filter_And_1Ux1U_1U_4_61_out1 or DC_Filter_gen_busy_r_4_116_out1[0] or global_state)
          begin :drive_stall0
            case (global_state) 

               5'd05, 5'd09:                begin
                  stall0 = DC_Filter_gen_busy_r_4_116_out1[0];
               end
               
               5'd18:                begin
                  stall0 = DC_Filter_And_1Ux1U_1U_4_61_out1;
               end
               
               default:                begin
                  stall0 = 1'b0;
               end
               
            endcase

         end

         // resource: mux_12bx2i0c
         // resource: regr_en_sc_12
         always @(posedge i_clk)
          begin :drive_s_reg_127
            if (i_rst == 1'b0) begin
               s_reg_127 <= 12'd0000;
            end
            else begin
               case (stall0) 

                  1'b1:                   begin
                  end
                  
                  1'b0:                   begin
                     case (global_state) 

                        5'd03:                         begin
                           if (9'd257 == DC_Filter_Add_9Ux1U_9U_4_65_out1 && (2'd2 == DC_Filter_Add2i1u1_4_74_out1 && (2'd3 == DC_Filter_Add_2Ux1U_2U_4_71_out1 && (!DC_Filter_Lti257u12_4_72_out1 && !DC_Filter_Lti258u12_4_75_out1)))) begin
                              /* state48 */
                              s_reg_127 <= DC_Filter_N_Mux_12_2_38_4_93_out1;
                           end
                        end
                        
                        5'd04:                         begin
                           if (2'd3 == DC_Filter_Add_2Ux1U_2U_4_81_out1 && 9'd257 == DC_Filter_Add_9Ux1U_9U_4_65_out1) begin
                              /* state52 */
                              s_reg_127 <= DC_Filter_N_Mux_12_2_38_4_93_out1;
                           end
                        end
                        
                        5'd08:                         begin
                           if (9'd257 == s_reg_133) begin
                              /* state51 */
                              s_reg_127 <= DC_Filter_N_Mux_12_2_38_4_93_out1;
                           end
                        end
                        
                        5'd12:                         begin
                           if (9'd257 == DC_Filter_Add_9Ux1U_9U_4_65_out1 && 2'd3 == DC_Filter_Add_2Ux1U_2U_4_80_out1) begin
                              /* state49 */
                              s_reg_127 <= DC_Filter_N_Mux_12_2_38_4_93_out1;
                           end
                        end
                        
                        5'd13:                         begin
                           /* state53 */
                           s_reg_127 <= DC_Filter_N_Mux_12_2_38_4_93_out1;
                        end
                        
                        5'd16:                         begin
                           /* state64 */
                           s_reg_127 <= DC_Filter_N_Mux_12_2_41_4_108_out1;
                        end
                        
                        5'd18:                         begin
                           if (9'd256 != DC_Filter_Add2i1u8_4_113_out1) begin
                              /* state50 */
                              s_reg_127 <= DC_Filter_N_Mux_12_2_38_4_93_out1;
                           end
                        end
                        
                     endcase

                  end
                  
               endcase

            end
         end

         // resource: mux_12bx2i0c
         // resource: regr_en_sc_12
         always @(posedge i_clk)
          begin :drive_s_reg_128
            if (i_rst == 1'b0) begin
               s_reg_128 <= 12'd0000;
            end
            else begin
               case (stall0) 

                  1'b1:                   begin
                  end
                  
                  1'b0:                   begin
                     case (global_state) 

                        5'd03:                         begin
                           if (9'd257 == DC_Filter_Add_9Ux1U_9U_4_65_out1 && (2'd2 == DC_Filter_Add2i1u1_4_74_out1 && (2'd3 == DC_Filter_Add_2Ux1U_2U_4_71_out1 && (!DC_Filter_Lti257u12_4_72_out1 && !DC_Filter_Lti258u12_4_75_out1)))) begin
                              s_reg_128 <= DC_Filter_N_Mux_12_2_38_4_94_out1;
                           end
                        end
                        
                        5'd04:                         begin
                           if (2'd3 == DC_Filter_Add_2Ux1U_2U_4_81_out1 && 9'd257 == DC_Filter_Add_9Ux1U_9U_4_65_out1) begin
                              s_reg_128 <= DC_Filter_N_Mux_12_2_38_4_94_out1;
                           end
                        end
                        
                        5'd08:                         begin
                           if (9'd257 == s_reg_133) begin
                              s_reg_128 <= DC_Filter_N_Mux_12_2_38_4_94_out1;
                           end
                        end
                        
                        5'd12:                         begin
                           if (9'd257 == DC_Filter_Add_9Ux1U_9U_4_65_out1 && 2'd3 == DC_Filter_Add_2Ux1U_2U_4_80_out1) begin
                              s_reg_128 <= DC_Filter_N_Mux_12_2_38_4_94_out1;
                           end
                        end
                        
                        5'd13:                         begin
                           s_reg_128 <= DC_Filter_N_Mux_12_2_38_4_94_out1;
                        end
                        
                        5'd16:                         begin
                           s_reg_128 <= DC_Filter_N_Mux_12_2_41_4_109_out1;
                        end
                        
                        5'd18:                         begin
                           if (9'd256 != DC_Filter_Add2i1u8_4_113_out1) begin
                              s_reg_128 <= DC_Filter_N_Mux_12_2_38_4_94_out1;
                           end
                        end
                        
                     endcase

                  end
                  
               endcase

            end
         end

         // resource: mux_12bx2i0c
         // resource: regr_en_sc_12
         always @(posedge i_clk)
          begin :drive_s_reg_129
            if (i_rst == 1'b0) begin
               s_reg_129 <= 12'd0000;
            end
            else begin
               case (stall0) 

                  1'b1:                   begin
                  end
                  
                  1'b0:                   begin
                     case (global_state) 

                        5'd03:                         begin
                           if (9'd257 == DC_Filter_Add_9Ux1U_9U_4_65_out1 && (2'd2 == DC_Filter_Add2i1u1_4_74_out1 && (2'd3 == DC_Filter_Add_2Ux1U_2U_4_71_out1 && (!DC_Filter_Lti257u12_4_72_out1 && !DC_Filter_Lti258u12_4_75_out1)))) begin
                              s_reg_129 <= DC_Filter_N_Mux_12_2_39_4_95_out1;
                           end
                        end
                        
                        5'd04:                         begin
                           if (2'd3 == DC_Filter_Add_2Ux1U_2U_4_81_out1 && 9'd257 == DC_Filter_Add_9Ux1U_9U_4_65_out1) begin
                              s_reg_129 <= DC_Filter_N_Mux_12_2_39_4_95_out1;
                           end
                        end
                        
                        5'd08:                         begin
                           if (9'd257 == s_reg_133) begin
                              s_reg_129 <= DC_Filter_N_Mux_12_2_39_4_95_out1;
                           end
                        end
                        
                        5'd12:                         begin
                           if (9'd257 == DC_Filter_Add_9Ux1U_9U_4_65_out1 && 2'd3 == DC_Filter_Add_2Ux1U_2U_4_80_out1) begin
                              s_reg_129 <= DC_Filter_N_Mux_12_2_39_4_95_out1;
                           end
                        end
                        
                        5'd13:                         begin
                           s_reg_129 <= DC_Filter_N_Mux_12_2_39_4_95_out1;
                        end
                        
                        5'd16:                         begin
                           s_reg_129 <= DC_Filter_N_Mux_12_2_41_4_110_out1;
                        end
                        
                        5'd18:                         begin
                           if (9'd256 != DC_Filter_Add2i1u8_4_113_out1) begin
                              s_reg_129 <= DC_Filter_N_Mux_12_2_39_4_95_out1;
                           end
                        end
                        
                     endcase

                  end
                  
               endcase

            end
         end

         // resource: mux_2bx5i1c
         // resource: regr_en_sc_2
         always @(posedge i_clk)
          begin :drive_s_reg_130
            if (i_rst == 1'b0) begin
               s_reg_130 <= 2'd0;
            end
            else begin
               case (stall0) 

                  1'b1:                   begin
                  end
                  
                  1'b0:                   begin
                     case (global_state) 

                        5'd01:                         begin
                           if (9'd258 == DC_Filter_Add_9Ux1U_9U_4_65_out1 && (2'd3 == DC_Filter_Add_2Ux1U_2U_4_67_out1 && 2'd3 != DC_Filter_Add_2Ux1U_2U_4_66_out1)) begin
                              s_reg_130 <= DC_Filter_Add_2Ux1U_2U_4_66_out1;
                           end
                        end
                        
                        5'd03:                         begin
                           if (9'd257 == DC_Filter_Add_9Ux1U_9U_4_65_out1 && 2'd2 == DC_Filter_Add2i1u1_4_74_out1) begin
                              /* state16 */
                              case (DC_Filter_Add_2Ux1U_2U_4_71_out1) 

                                 2'd3:                                  begin
                                    case (DC_Filter_Add_2Ux1U_2U_4_89_out1) 

                                       2'd3:                                        begin
                                          s_reg_130 <= 2'd0;
                                       end
                                       
                                       default:                                        begin
                                          s_reg_130 <= DC_Filter_Add_2Ux1U_2U_4_89_out1;
                                       end
                                       
                                    endcase

                                 end
                                 
                                 default:                                  begin
                                    s_reg_130 <= DC_Filter_Add_2Ux1U_2U_4_71_out1;
                                 end
                                 
                              endcase

                           end
                        end
                        
                        5'd04, 5'd08, 5'd12, 5'd13:                         begin
                           case (DC_Filter_Add_2Ux1U_2U_4_89_out1) 

                              2'd3:                               begin
                                 s_reg_130 <= 2'd0;
                              end
                              
                              default:                               begin
                                 s_reg_130 <= DC_Filter_Add_2Ux1U_2U_4_89_out1;
                              end
                              
                           endcase

                        end
                        
                        5'd16:                         begin
                           if (2'd3 == DC_Filter_Add_2Ux1U_2U_4_104_out1) begin
                              case (DC_Filter_Add_2Ux1U_2U_4_112_out1) 

                                 2'd3:                                  begin
                                    if (2'd3 != DC_Filter_Add_2Ux1U_2U_4_111_out1) begin
                                       s_reg_130 <= 2'd0;
                                    end
                                 end
                                 
                                 default:                                  begin
                                    s_reg_130 <= DC_Filter_Add_2Ux1U_2U_4_112_out1;
                                 end
                                 
                              endcase

                           end
                        end
                        
                        5'd18:                         begin
                           /* state72 */
                           case (DC_Filter_Add2i1u8_4_113_out1) 

                              9'd256:                               begin
                                 if (12'd0000 != s_reg_132) begin
                                    s_reg_130 <= 2'd0;
                                 end
                              end
                              
                              default:                               begin
                                 case (DC_Filter_Add_2Ux1U_2U_4_89_out1) 

                                    2'd3:                                     begin
                                       s_reg_130 <= 2'd0;
                                    end
                                    
                                    default:                                     begin
                                       s_reg_130 <= DC_Filter_Add_2Ux1U_2U_4_89_out1;
                                    end
                                    
                                 endcase

                              end
                              
                           endcase

                        end
                        
                     endcase

                  end
                  
               endcase

            end
         end

         // resource: mux_2bx4i1c
         // resource: regr_en_sc_2
         always @(posedge i_clk)
          begin :drive_s_reg_131
            if (i_rst == 1'b0) begin
               s_reg_131 <= 2'd0;
            end
            else begin
               case (stall0) 

                  1'b1:                   begin
                  end
                  
                  1'b0:                   begin
                     case (global_state) 

                        5'd01:                         begin
                           if (9'd258 == DC_Filter_Add_9Ux1U_9U_4_65_out1) begin
                              case (DC_Filter_Add_2Ux1U_2U_4_67_out1) 

                                 2'd3:                                  begin
                                    if (2'd3 != DC_Filter_Add_2Ux1U_2U_4_66_out1) begin
                                       s_reg_131 <= 2'd0;
                                    end
                                 end
                                 
                                 default:                                  begin
                                    s_reg_131 <= DC_Filter_Add_2Ux1U_2U_4_67_out1;
                                 end
                                 
                              endcase

                           end
                        end
                        
                        5'd03:                         begin
                           if (9'd257 == DC_Filter_Add_9Ux1U_9U_4_65_out1) begin
                              case (DC_Filter_Add2i1u1_4_74_out1) 

                                 2'd2:                                  begin
                                    if (2'd3 != DC_Filter_Add_2Ux1U_2U_4_71_out1) begin
                                       s_reg_131 <= 2'd0;
                                    end
                                 end
                                 
                                 default:                                  begin
                                    s_reg_131 <= DC_Filter_Add2i1u1_4_74_out1;
                                 end
                                 
                              endcase

                           end
                        end
                        
                        5'd14:                         begin
                           s_reg_131 <= 2'd0;
                        end
                        
                        5'd16:                         begin
                           if (2'd3 != DC_Filter_Add_2Ux1U_2U_4_104_out1) begin
                              s_reg_131 <= DC_Filter_Add_2Ux1U_2U_4_104_out1;
                           end
                        end
                        
                        5'd18:                         begin
                           if (12'd0000 != s_reg_132) begin
                              s_reg_131 <= 2'd0;
                           end
                        end
                        
                     endcase

                  end
                  
               endcase

            end
         end

         // resource: mux_12bx2i1c
         // resource: regr_en_12
         always @(posedge i_clk)
          begin :drive_s_reg_132
            case (stall0) 

               1'b1:                begin
               end
               
               1'b0:                begin
                  case (global_state) 

                     5'd04:                      begin
                        if (2'd3 == DC_Filter_Add_2Ux1U_2U_4_81_out1 && 9'd257 == DC_Filter_Add_9Ux1U_9U_4_65_out1) begin
                           s_reg_132 <= DC_Filter_Add2i1u12_4_88_out1;
                        end
                     end
                     
                     5'd08:                      begin
                        if (9'd257 == s_reg_133) begin
                           s_reg_132 <= DC_Filter_Add2i1u12_4_88_out1;
                        end
                     end
                     
                     5'd12:                      begin
                        s_reg_132 <= 12'd0003;
                     end
                     
                  endcase

               end
               
            endcase

         end

         // resource: mux_9bx5i2c
         // resource: regr_en_sc_9
         always @(posedge i_clk)
          begin :drive_s_reg_133
            if (i_rst == 1'b0) begin
               s_reg_133 <= 9'd000;
            end
            else begin
               case (stall0) 

                  1'b1:                   begin
                  end
                  
                  1'b0:                   begin
                     case (global_state) 

                        5'd01:                         begin
                           case (DC_Filter_Add_9Ux1U_9U_4_65_out1) 

                              9'd258:                               begin
                                 case (DC_Filter_Add_2Ux1U_2U_4_67_out1) 

                                    2'd3:                                     begin
                                       /* state6 */
                                       case (DC_Filter_Add_2Ux1U_2U_4_66_out1) 

                                          2'd3:                                           begin
                                             s_reg_133 <= 9'd001;
                                          end
                                          
                                          default:                                           begin
                                             s_reg_133 <= 9'd000;
                                          end
                                          
                                       endcase

                                    end
                                    
                                    default:                                     begin
                                       s_reg_133 <= 9'd000;
                                    end
                                    
                                 endcase

                              end
                              
                              default:                               begin
                                 s_reg_133 <= DC_Filter_Add_9Ux1U_9U_4_65_out1;
                              end
                              
                           endcase

                        end
                        
                        5'd03:                         begin
                           case (DC_Filter_Add_9Ux1U_9U_4_65_out1) 

                              9'd257:                               begin
                                 case (DC_Filter_Add2i1u1_4_74_out1) 

                                    2'd2:                                     begin
                                       /* state16 */
                                       case (DC_Filter_Add_2Ux1U_2U_4_71_out1) 

                                          2'd3:                                           begin
                                             if (DC_Filter_Lti257u12_4_72_out1) begin
                                                s_reg_133 <= 9'd001;
                                             end
                                             else begin
                                                s_reg_133 <= {8'b00000000, DC_Filter_Lti258u12_4_75_out1};
                                             end
                                          end
                                          
                                          default:                                           begin
                                             s_reg_133 <= 9'd001;
                                          end
                                          
                                       endcase

                                    end
                                    
                                    default:                                     begin
                                       s_reg_133 <= 9'd001;
                                    end
                                    
                                 endcase

                              end
                              
                              default:                               begin
                                 s_reg_133 <= DC_Filter_Add_9Ux1U_9U_4_65_out1;
                              end
                              
                           endcase

                        end
                        
                        5'd04:                         begin
                           if (2'd3 == DC_Filter_Add_2Ux1U_2U_4_81_out1) begin
                              case (DC_Filter_Add_9Ux1U_9U_4_65_out1) 

                                 9'd257:                                  begin
                                    s_reg_133 <= 9'd000;
                                 end
                                 
                                 default:                                  begin
                                    s_reg_133 <= DC_Filter_Add_9Ux1U_9U_4_65_out1;
                                 end
                                 
                              endcase

                           end
                        end
                        
                        5'd07:                         begin
                           s_reg_133 <= DC_Filter_Add_9Ux1U_9U_4_65_out1;
                        end
                        
                        5'd08:                         begin
                           if (9'd257 == s_reg_133) begin
                              s_reg_133 <= 9'd000;
                           end
                        end
                        
                        5'd12:                         begin
                           case (DC_Filter_Add_9Ux1U_9U_4_65_out1) 

                              9'd257:                               begin
                                 case (DC_Filter_Add_2Ux1U_2U_4_80_out1) 

                                    2'd3:                                     begin
                                       s_reg_133 <= 9'd000;
                                    end
                                    
                                    default:                                     begin
                                       s_reg_133 <= 9'd001;
                                    end
                                    
                                 endcase

                              end
                              
                              default:                               begin
                                 s_reg_133 <= DC_Filter_Add_9Ux1U_9U_4_65_out1;
                              end
                              
                           endcase

                        end
                        
                        5'd18:                         begin
                           /* state72 */
                           case (DC_Filter_Add2i1u8_4_113_out1) 

                              9'd256:                               begin
                                 s_reg_133 <= 9'd001;
                              end
                              
                              default:                               begin
                                 s_reg_133 <= DC_Filter_Add2i1u8_4_113_out1;
                              end
                              
                           endcase

                        end
                        
                     endcase

                  end
                  
               endcase

            end
         end

         // resource: regr_en_1
         always @(posedge i_clk)
          begin :drive_s_reg_134
            case (stall0) 

               1'b1:                begin
               end
               
               1'b0:                begin
                  s_reg_134 <= DC_Filter_Eqi2u2_4_99_out1;
               end
               
            endcase

         end

         // resource: mux_2bx5i2c
         // resource: regr_en_2
         always @(posedge i_clk)
          begin :drive_s_reg_135
            case (stall0) 

               1'b1:                begin
               end
               
               1'b0:                begin
                  case (global_state) 

                     5'd01:                      begin
                        s_reg_135 <= 2'd1;
                     end
                     
                     5'd03, 5'd08:                      begin
                        s_reg_135 <= 2'd0;
                     end
                     
                     5'd04:                      begin
                        case (DC_Filter_Add_2Ux1U_2U_4_81_out1) 

                           2'd3:                            begin
                              s_reg_135 <= 2'd0;
                           end
                           
                           default:                            begin
                              s_reg_135 <= DC_Filter_Add_2Ux1U_2U_4_81_out1;
                           end
                           
                        endcase

                     end
                     
                     5'd12:                      begin
                        if (9'd257 == DC_Filter_Add_9Ux1U_9U_4_65_out1) begin
                           case (DC_Filter_Add_2Ux1U_2U_4_80_out1) 

                              2'd3:                               begin
                                 s_reg_135 <= 2'd0;
                              end
                              
                              default:                               begin
                                 s_reg_135 <= DC_Filter_Add_2Ux1U_2U_4_80_out1;
                              end
                              
                           endcase

                        end
                     end
                     
                     5'd16:                      begin
                        if (2'd3 == DC_Filter_Add_2Ux1U_2U_4_104_out1 && (2'd3 == DC_Filter_Add_2Ux1U_2U_4_112_out1 && 2'd3 != DC_Filter_Add_2Ux1U_2U_4_111_out1)) begin
                           s_reg_135 <= DC_Filter_Add_2Ux1U_2U_4_111_out1;
                        end
                     end
                     
                     5'd18:                      begin
                        /* state72 */
                        case (DC_Filter_Add2i1u8_4_113_out1) 

                           9'd256:                            begin
                              s_reg_135 <= 2'd1;
                           end
                           
                           default:                            begin
                              s_reg_135 <= 2'd0;
                           end
                           
                        endcase

                     end
                     
                  endcase

               end
               
            endcase

         end

         // resource: regr_en_4
         always @(posedge i_clk)
          begin :drive_s_reg_136
            case (stall0) 

               1'b1:                begin
               end
               
               1'b0:                begin
                  case (global_state) 

                     5'd14:                      begin
                        s_reg_136 <= mask2_out1;
                     end
                     
                  endcase

               end
               
            endcase

         end

         // resource: regr_en_9
         always @(posedge i_clk)
          begin :drive_s_reg_137
            case (stall0) 

               1'b1:                begin
               end
               
               1'b0:                begin
                  case (global_state) 

                     5'd14, 5'd17:                      begin
                        s_reg_137 <= DC_Filter_Add_8Ux2U_9U_4_97_out1;
                     end
                     
                  endcase

               end
               
            endcase

         end

         // resource: regr_en_4
         always @(posedge i_clk)
          begin :drive_s_reg_138
            case (stall0) 

               1'b1:                begin
               end
               
               1'b0:                begin
                  case (global_state) 

                     5'd14, 5'd17:                      begin
                        s_reg_138 <= DC_Filter_Add2u2Mul2i3u2_4_96_out1;
                     end
                     
                  endcase

               end
               
            endcase

         end

         // resource: mux_2bx3i1c
         always @(s_reg_130 or DC_Filter_Add_2Ux1U_2U_4_81_out1 or gs_ctrl0)
          begin :drive_DC_Filter_Add2u9Mul2i258Add2u2Mul2i3u2_4_64_in3
            case (gs_ctrl0) 

               2'd1:                begin
                  DC_Filter_Add2u9Mul2i258Add2u2Mul2i3u2_4_64_in3 = 2'd0;
               end
               
               2'd2:                begin
                  case (DC_Filter_Add_2Ux1U_2U_4_81_out1) 

                     2'd3:                      begin
                        DC_Filter_Add2u9Mul2i258Add2u2Mul2i3u2_4_64_in3 = 2'd0;
                     end
                     
                     default:                      begin
                        DC_Filter_Add2u9Mul2i258Add2u2Mul2i3u2_4_64_in3 = DC_Filter_Add_2Ux1U_2U_4_81_out1;
                     end
                     
                  endcase

               end
               
               default:                begin
                  DC_Filter_Add2u9Mul2i258Add2u2Mul2i3u2_4_64_in3 = s_reg_130;
               end
               
            endcase

         end

         // resource: mux_2bx3i1c
         always @(s_reg_131 or gs_ctrl1)
          begin :drive_DC_Filter_Add2u9Mul2i258Add2u2Mul2i3u2_4_64_in2
            case (gs_ctrl1) 

               2'd1:                begin
                  DC_Filter_Add2u9Mul2i258Add2u2Mul2i3u2_4_64_in2 = {1'b0, s_reg_131[0]};
               end
               
               2'd2:                begin
                  DC_Filter_Add2u9Mul2i258Add2u2Mul2i3u2_4_64_in2 = 2'd2;
               end
               
               default:                begin
                  DC_Filter_Add2u9Mul2i258Add2u2Mul2i3u2_4_64_in2 = s_reg_131;
               end
               
            endcase

         end

         // resource: mux_9bx3i1c
         always @(s_reg_133 or DC_Filter_Add_9Ux1U_9U_4_65_out1 or DC_Filter_Add_2Ux1U_2U_4_81_out1 or gs_ctrl0)
          begin :drive_DC_Filter_Add2u9Mul2i258Add2u2Mul2i3u2_4_64_in1
            case (gs_ctrl0) 

               2'd1:                begin
                  DC_Filter_Add2u9Mul2i258Add2u2Mul2i3u2_4_64_in1 = 9'd001;
               end
               
               2'd2:                begin
                  case (DC_Filter_Add_2Ux1U_2U_4_81_out1) 

                     2'd3:                      begin
                        DC_Filter_Add2u9Mul2i258Add2u2Mul2i3u2_4_64_in1 = DC_Filter_Add_9Ux1U_9U_4_65_out1;
                     end
                     
                     default:                      begin
                        DC_Filter_Add2u9Mul2i258Add2u2Mul2i3u2_4_64_in1 = s_reg_133;
                     end
                     
                  endcase

               end
               
               default:                begin
                  DC_Filter_Add2u9Mul2i258Add2u2Mul2i3u2_4_64_in1 = s_reg_133;
               end
               
            endcase

         end

         // resource: DC_Filter_Add2u9Mul2i258Add2u2Mul2i3u2_4  instance: DC_Filter_Add2u9Mul2i258Add2u2Mul2i3u2_4_64
         assign DC_Filter_Add2u9Mul2i258Add2u2Mul2i3u2_4_64_out1 = ({10'b0000000000, DC_Filter_Add2u9Mul2i258Add2u2Mul2i3u2_4_64_in3}*12'd0003 + {10'b0000000000, DC_Filter_Add2u9Mul2i258Add2u2Mul2i3u2_4_64_in2})*12'd0258 + {3'b000, DC_Filter_Add2u9Mul2i258Add2u2Mul2i3u2_4_64_in1};

         // resource: DC_Filter_Add_9Ux1U_9U_4  instance: DC_Filter_Add_9Ux1U_9U_4_65
         assign DC_Filter_Add_9Ux1U_9U_4_65_out1 = s_reg_133 + 9'd001;

         // resource: mux_12bx9i0c
         always @(DC_Filter_Add2u9Mul2i258Add2u2Mul2i3u2_4_64_out1 or DC_Filter_Add_9Ux1U_9U_4_65_out1 or DC_Filter_Add2u9Mul2i258Add3i1u1Mul2i3u2_4_68_out1 or DC_Filter_Add_2Ux1U_2U_4_71_out1 or DC_Filter_Add2u9Mul2i258u2_4_73_out1 or DC_Filter_Add2i1u1_4_74_out1 or DC_Filter_Add2u9Mul2i258Add2i3u2_4_76_out1 or DC_Filter_Add2u9Mul2i258Add2i6u2_4_77_out1 or DC_Filter_gen000002_4_83_out1 or DC_Filter_gen000001_4_85_out1 or DC_Filter_Add2iLLu9_4_87_out1 or DC_Filter_Add_12Ux9U_12U_4_101_out1 or 
gs_ctrl3
         )
          begin :drive_f2_array_rgb_in1
            case (gs_ctrl3) 

               4'd01:                begin
                  case (DC_Filter_Add_9Ux1U_9U_4_65_out1) 

                     9'd257:                      begin
                        case (DC_Filter_Add2i1u1_4_74_out1) 

                           2'd2:                            begin
                              /* state16 */
                              case (DC_Filter_Add_2Ux1U_2U_4_71_out1) 

                                 2'd3:                                  begin
                                    f2_array_rgb_in1 = DC_Filter_Add2u9Mul2i258Add2u2Mul2i3u2_4_64_out1;
                                 end
                                 
                                 default:                                  begin
                                    f2_array_rgb_in1 = DC_Filter_Add2u9Mul2i258Add3i1u1Mul2i3u2_4_68_out1;
                                 end
                                 
                              endcase

                           end
                           
                           default:                            begin
                              f2_array_rgb_in1 = DC_Filter_Add2u9Mul2i258Add3i1u1Mul2i3u2_4_68_out1;
                           end
                           
                        endcase

                     end
                     
                     default:                      begin
                        f2_array_rgb_in1 = DC_Filter_Add2u9Mul2i258Add3i1u1Mul2i3u2_4_68_out1;
                     end
                     
                  endcase

               end
               
               4'd02:                begin
                  f2_array_rgb_in1 = {1'b0, DC_Filter_gen000002_4_83_out1};
               end
               
               4'd03:                begin
                  f2_array_rgb_in1 = DC_Filter_gen000001_4_85_out1;
               end
               
               4'd04:                begin
                  f2_array_rgb_in1 = DC_Filter_Add2iLLu9_4_87_out1;
               end
               
               4'd05:                begin
                  f2_array_rgb_in1 = DC_Filter_Add2u9Mul2i258u2_4_73_out1;
               end
               
               4'd06:                begin
                  f2_array_rgb_in1 = DC_Filter_Add2u9Mul2i258Add2i3u2_4_76_out1;
               end
               
               4'd07:                begin
                  f2_array_rgb_in1 = DC_Filter_Add2u9Mul2i258Add2i6u2_4_77_out1;
               end
               
               4'd08:                begin
                  f2_array_rgb_in1 = DC_Filter_Add_12Ux9U_12U_4_101_out1;
               end
               
               4'd09:                begin
                  f2_array_rgb_in1 = DC_Filter_Add2u9Mul2i258Add3i1u1Mul2i3u2_4_68_out1;
               end
               
               default:                begin
                  f2_array_rgb_in1 = DC_Filter_Add2u9Mul2i258Add2u2Mul2i3u2_4_64_out1;
               end
               
            endcase

         end

         // resource: mux_8bx5i1c
         always @(i_rgb_inside_data[7:0] or o_result_data[23:8] or f2_array_rgb_out1 or gs_ctrl4)
          begin :drive_f2_array_rgb_DIN
            case (gs_ctrl4) 

               3'd1:                begin
                  f2_array_rgb_DIN = f2_array_rgb_out1;
               end
               
               3'd2:                begin
                  f2_array_rgb_DIN = i_rgb_inside_data[7:0];
               end
               
               3'd3:                begin
                  f2_array_rgb_DIN = o_result_data[15:8];
               end
               
               3'd4:                begin
                  f2_array_rgb_DIN = o_result_data[23:16];
               end
               
               default:                begin
                  f2_array_rgb_DIN = 8'd000;
               end
               
            endcase

         end

         // resource: mux_1bx2i2c
         always @(stall0 or s_reg_132 or DC_Filter_Add_9Ux1U_9U_4_65_out1 or DC_Filter_Add_2Ux1U_2U_4_71_out1 or DC_Filter_Lti257u12_4_72_out1 or DC_Filter_Add2i1u1_4_74_out1 or DC_Filter_Lti258u12_4_75_out1 or DC_Filter_Add_2Ux1U_2U_4_81_out1 or DC_Filter_Add2i1u8_4_113_out1 or gs_ctrl5)
          begin :drive_f2_array_rgb_CE
            if (stall0) begin
               f2_array_rgb_CE = 1'b0;
            end
            else begin
               case (gs_ctrl5) 

                  3'd1:                   begin
                     f2_array_rgb_CE = 1'b1;
                  end
                  
                  3'd2:                   begin
                     case (DC_Filter_Add_9Ux1U_9U_4_65_out1) 

                        9'd257:                         begin
                           case (DC_Filter_Add2i1u1_4_74_out1) 

                              2'd2:                               begin
                                 /* state16 */
                                 case (DC_Filter_Add_2Ux1U_2U_4_71_out1) 

                                    2'd3:                                     begin
                                       if (!DC_Filter_Lti257u12_4_72_out1 && DC_Filter_Lti258u12_4_75_out1) begin
                                          f2_array_rgb_CE = 1'b1;
                                       end
                                       else begin
                                          f2_array_rgb_CE = 1'b0;
                                       end
                                    end
                                    
                                    default:                                     begin
                                       f2_array_rgb_CE = 1'b1;
                                    end
                                    
                                 endcase

                              end
                              
                              default:                               begin
                                 f2_array_rgb_CE = 1'b1;
                              end
                              
                           endcase

                        end
                        
                        default:                         begin
                           f2_array_rgb_CE = 1'b1;
                        end
                        
                     endcase

                  end
                  
                  3'd3:                   begin
                     case (DC_Filter_Add_2Ux1U_2U_4_81_out1) 

                        2'd3:                         begin
                           if (9'd257 != DC_Filter_Add_9Ux1U_9U_4_65_out1) begin
                              f2_array_rgb_CE = 1'b1;
                           end
                           else begin
                              f2_array_rgb_CE = 1'b0;
                           end
                        end
                        
                        default:                         begin
                           f2_array_rgb_CE = 1'b1;
                        end
                        
                     endcase

                  end
                  
                  3'd4:                   begin
                     if (9'd256 == DC_Filter_Add2i1u8_4_113_out1 && 12'd0000 != s_reg_132) begin
                        f2_array_rgb_CE = 1'b1;
                     end
                     else begin
                        f2_array_rgb_CE = 1'b0;
                     end
                  end
                  
                  default:                   begin
                     f2_array_rgb_CE = 1'b0;
                  end
                  
               endcase

            end
         end

         // resource: mux_1bx2i2c
         always @(stall0 or DC_Filter_Add_9Ux1U_9U_4_65_out1 or DC_Filter_Add_2Ux1U_2U_4_71_out1 or DC_Filter_Lti257u12_4_72_out1 or DC_Filter_Add2i1u1_4_74_out1 or DC_Filter_Lti258u12_4_75_out1 or DC_Filter_Add_2Ux1U_2U_4_81_out1 or gs_ctrl6)
          begin :drive_f2_array_rgb_RW
            if (stall0) begin
               f2_array_rgb_RW = 1'b0;
            end
            else begin
               case (gs_ctrl6) 

                  2'd1:                   begin
                     f2_array_rgb_RW = 1'b1;
                  end
                  
                  2'd2:                   begin
                     case (DC_Filter_Add_9Ux1U_9U_4_65_out1) 

                        9'd257:                         begin
                           case (DC_Filter_Add2i1u1_4_74_out1) 

                              2'd2:                               begin
                                 /* state16 */
                                 case (DC_Filter_Add_2Ux1U_2U_4_71_out1) 

                                    2'd3:                                     begin
                                       if (!DC_Filter_Lti257u12_4_72_out1 && DC_Filter_Lti258u12_4_75_out1) begin
                                          f2_array_rgb_RW = 1'b1;
                                       end
                                       else begin
                                          f2_array_rgb_RW = 1'b0;
                                       end
                                    end
                                    
                                    default:                                     begin
                                       f2_array_rgb_RW = 1'b0;
                                    end
                                    
                                 endcase

                              end
                              
                              default:                               begin
                                 f2_array_rgb_RW = 1'b0;
                              end
                              
                           endcase

                        end
                        
                        default:                         begin
                           f2_array_rgb_RW = 1'b0;
                        end
                        
                     endcase

                  end
                  
                  2'd3:                   begin
                     case (DC_Filter_Add_2Ux1U_2U_4_81_out1) 

                        2'd3:                         begin
                           if (9'd257 != DC_Filter_Add_9Ux1U_9U_4_65_out1) begin
                              f2_array_rgb_RW = 1'b1;
                           end
                           else begin
                              f2_array_rgb_RW = 1'b0;
                           end
                        end
                        
                        default:                         begin
                           f2_array_rgb_RW = 1'b1;
                        end
                        
                     endcase

                  end
                  
                  default:                   begin
                     f2_array_rgb_RW = 1'b0;
                  end
                  
               endcase

            end
         end

         // resource: DC_Filter_Add_2Ux1U_2U_4  instance: DC_Filter_Add_2Ux1U_2U_4_66
         assign DC_Filter_Add_2Ux1U_2U_4_66_out1 = s_reg_130 + 2'd1;

         // resource: DC_Filter_Add_2Ux1U_2U_4  instance: DC_Filter_Add_2Ux1U_2U_4_67
         assign DC_Filter_Add_2Ux1U_2U_4_67_out1 = s_reg_131 + 2'd1;

         // resource: mux_2bx3i1c
         always @(s_reg_130 or DC_Filter_Add_9Ux1U_9U_4_65_out1 or DC_Filter_Add_2Ux1U_2U_4_71_out1 or DC_Filter_Add2i1u1_4_74_out1 or gs_ctrl7)
          begin :drive_DC_Filter_Add2u9Mul2i258Add3i1u1Mul2i3u2_4_68_in3
            if (gs_ctrl7) begin
               DC_Filter_Add2u9Mul2i258Add3i1u1Mul2i3u2_4_68_in3 = 2'd0;
            end
            else begin
               case (DC_Filter_Add_9Ux1U_9U_4_65_out1) 

                  9'd257:                   begin
                     case (DC_Filter_Add2i1u1_4_74_out1) 

                        2'd2:                         begin
                           DC_Filter_Add2u9Mul2i258Add3i1u1Mul2i3u2_4_68_in3 = DC_Filter_Add_2Ux1U_2U_4_71_out1;
                        end
                        
                        default:                         begin
                           DC_Filter_Add2u9Mul2i258Add3i1u1Mul2i3u2_4_68_in3 = s_reg_130;
                        end
                        
                     endcase

                  end
                  
                  default:                   begin
                     DC_Filter_Add2u9Mul2i258Add3i1u1Mul2i3u2_4_68_in3 = s_reg_130;
                  end
                  
               endcase

            end
         end

         // resource: mux_1bx3i1c
         always @(s_reg_131[0] or DC_Filter_Add_9Ux1U_9U_4_65_out1 or DC_Filter_Add2i1u1_4_74_out1 or gs_ctrl7)
          begin :drive_DC_Filter_Add2u9Mul2i258Add3i1u1Mul2i3u2_4_68_in2
            if (gs_ctrl7) begin
               DC_Filter_Add2u9Mul2i258Add3i1u1Mul2i3u2_4_68_in2 = 1'b0;
            end
            else begin
               case (DC_Filter_Add_9Ux1U_9U_4_65_out1) 

                  9'd257:                   begin
                     case (DC_Filter_Add2i1u1_4_74_out1) 

                        2'd2:                         begin
                           DC_Filter_Add2u9Mul2i258Add3i1u1Mul2i3u2_4_68_in2 = 1'b0;
                        end
                        
                        default:                         begin
                           DC_Filter_Add2u9Mul2i258Add3i1u1Mul2i3u2_4_68_in2 = DC_Filter_Add2i1u1_4_74_out1[0];
                        end
                        
                     endcase

                  end
                  
                  default:                   begin
                     DC_Filter_Add2u9Mul2i258Add3i1u1Mul2i3u2_4_68_in2 = s_reg_131[0];
                  end
                  
               endcase

            end
         end

         // resource: mux_9bx2i1c
         always @(DC_Filter_Add_9Ux1U_9U_4_65_out1 or gs_ctrl7)
          begin :drive_DC_Filter_Add2u9Mul2i258Add3i1u1Mul2i3u2_4_68_in1
            if (gs_ctrl7) begin
               DC_Filter_Add2u9Mul2i258Add3i1u1Mul2i3u2_4_68_in1 = 9'd001;
            end
            else begin
               case (DC_Filter_Add_9Ux1U_9U_4_65_out1) 

                  9'd257:                   begin
                     DC_Filter_Add2u9Mul2i258Add3i1u1Mul2i3u2_4_68_in1 = 9'd001;
                  end
                  
                  default:                   begin
                     DC_Filter_Add2u9Mul2i258Add3i1u1Mul2i3u2_4_68_in1 = DC_Filter_Add_9Ux1U_9U_4_65_out1;
                  end
                  
               endcase

            end
         end

         // resource: DC_Filter_Add2u9Mul2i258Add3i1u1Mul2i3u2_4  instance: DC_Filter_Add2u9Mul2i258Add3i1u1Mul2i3u2_4_68
         assign DC_Filter_Add2u9Mul2i258Add3i1u1Mul2i3u2_4_68_out1 = ({10'b0000000000, DC_Filter_Add2u9Mul2i258Add3i1u1Mul2i3u2_4_68_in3}*12'd0003 + ({11'b00000000000, DC_Filter_Add2u9Mul2i258Add3i1u1Mul2i3u2_4_68_in2} + 12'd0001))*12'd0258 + {3'b000, DC_Filter_Add2u9Mul2i258Add3i1u1Mul2i3u2_4_68_in1};

         // resource: DC_Filter_Add_2Ux1U_2U_4  instance: DC_Filter_Add_2Ux1U_2U_4_71
         assign DC_Filter_Add_2Ux1U_2U_4_71_out1 = s_reg_130 + 2'd1;

         // resource: DC_Filter_Lti257u12_4  instance: DC_Filter_Lti257u12_4_72
         assign DC_Filter_Lti257u12_4_72_out1 = s_reg_132 < 12'd0257;

         // resource: DC_Filter_Add2u9Mul2i258u2_4  instance: DC_Filter_Add2u9Mul2i258u2_4_73
         assign DC_Filter_Add2u9Mul2i258u2_4_73_out1 = {10'b0000000000, s_reg_135}*12'd0258 + {3'b000, s_reg_133};

         // resource: DC_Filter_Add2i1u1_4  instance: DC_Filter_Add2i1u1_4_74
         assign DC_Filter_Add2i1u1_4_74_out1 = {1'b0, s_reg_131[0]} + 2'd1;

         // resource: DC_Filter_Lti258u12_4  instance: DC_Filter_Lti258u12_4_75
         assign DC_Filter_Lti258u12_4_75_out1 = s_reg_132 < 12'd0258;

         // resource: DC_Filter_Add2u9Mul2i258Add2i3u2_4  instance: DC_Filter_Add2u9Mul2i258Add2i3u2_4_76
         assign DC_Filter_Add2u9Mul2i258Add2i3u2_4_76_out1 = ({10'b0000000000, s_reg_135} + 12'd0003)*12'd0258 + {3'b000, s_reg_133};

         // resource: DC_Filter_Add2u9Mul2i258Add2i6u2_4  instance: DC_Filter_Add2u9Mul2i258Add2i6u2_4_77
         assign DC_Filter_Add2u9Mul2i258Add2i6u2_4_77_out1 = ({10'b0000000000, s_reg_135} + 12'd0006)*12'd0258 + {3'b000, s_reg_133};

         // resource: DC_Filter_Add_2Ux1U_2U_4  instance: DC_Filter_Add_2Ux1U_2U_4_80
         assign DC_Filter_Add_2Ux1U_2U_4_80_out1 = s_reg_135 + 2'd1;

         // resource: DC_Filter_Add_2Ux1U_2U_4  instance: DC_Filter_Add_2Ux1U_2U_4_81
         assign DC_Filter_Add_2Ux1U_2U_4_81_out1 = s_reg_135 + 2'd1;

         // resource: DC_Filter_Add2i1u12_4  instance: DC_Filter_Add2i1u12_4_88
         assign DC_Filter_Add2i1u12_4_88_out1 = s_reg_132 + 12'd0001;

         // resource: DC_Filter_gen000002_4  instance: DC_Filter_gen000002_4_83
         assign DC_Filter_gen000002_4_83_out1 = {2'b00, s_reg_133} + 11'd0516;

         // resource: DC_Filter_gen000001_4  instance: DC_Filter_gen000001_4_85
         assign DC_Filter_gen000001_4_85_out1 = {3'b000, s_reg_133} + 12'd1290;

         // resource: DC_Filter_Add2iLLu9_4  instance: DC_Filter_Add2iLLu9_4_87
         assign DC_Filter_Add2iLLu9_4_87_out1 = {3'b000, s_reg_133} + 12'd2064;

         // resource: mux_2bx2i1c
         always @(s_reg_130 or gs_ctrl10)
          begin :drive_DC_Filter_Add_2Ux1U_2U_4_89_in2
            if (gs_ctrl10) begin
               DC_Filter_Add_2Ux1U_2U_4_89_in2 = s_reg_130;
            end
            else begin
               DC_Filter_Add_2Ux1U_2U_4_89_in2 = 2'd0;
            end
         end

         // resource: DC_Filter_Add_2Ux1U_2U_4  instance: DC_Filter_Add_2Ux1U_2U_4_89
         assign DC_Filter_Add_2Ux1U_2U_4_89_out1 = DC_Filter_Add_2Ux1U_2U_4_89_in2 + 2'd1;

         // resource: DC_Filter_Eqi2u2_4  instance: DC_Filter_Eqi2u2_4_90
         assign DC_Filter_Eqi2u2_4_90_out1 = DC_Filter_Add_2Ux1U_2U_4_89_in2 == 2'd2;

         // resource: DC_Filter_Eqi1u2_4  instance: DC_Filter_Eqi1u2_4_91
         assign DC_Filter_Eqi1u2_4_91_out1 = DC_Filter_Add_2Ux1U_2U_4_89_in2 == 2'd1;

         // resource: DC_Filter_OrReduction_2U_1U_4  instance: DC_Filter_OrReduction_2U_1U_4_92
         assign DC_Filter_OrReduction_2U_1U_4_92_out1 = (|DC_Filter_Add_2Ux1U_2U_4_89_in2);

         // resource: DC_Filter_N_Mux_12_2_38_4
         always @(s_reg_127 or DC_Filter_Eqi2u2_4_90_out1)
          begin :DC_Filter_N_Mux_12_2_38_4_93
            if (DC_Filter_Eqi2u2_4_90_out1) begin
               DC_Filter_N_Mux_12_2_38_4_93_out1 = 12'd0000;
            end
            else begin
               DC_Filter_N_Mux_12_2_38_4_93_out1 = s_reg_127;
            end
         end

         // resource: DC_Filter_N_Mux_12_2_38_4
         always @(s_reg_128 or DC_Filter_Eqi1u2_4_91_out1)
          begin :DC_Filter_N_Mux_12_2_38_4_94
            if (DC_Filter_Eqi1u2_4_91_out1) begin
               DC_Filter_N_Mux_12_2_38_4_94_out1 = 12'd0000;
            end
            else begin
               DC_Filter_N_Mux_12_2_38_4_94_out1 = s_reg_128;
            end
         end

         // resource: DC_Filter_N_Mux_12_2_39_4
         always @(s_reg_129 or DC_Filter_OrReduction_2U_1U_4_92_out1)
          begin :DC_Filter_N_Mux_12_2_39_4_95
            if (DC_Filter_OrReduction_2U_1U_4_92_out1) begin
               DC_Filter_N_Mux_12_2_39_4_95_out1 = s_reg_129;
            end
            else begin
               DC_Filter_N_Mux_12_2_39_4_95_out1 = 12'd0000;
            end
         end

         // resource: mux_2bx3i1c
         always @(s_reg_131 or DC_Filter_Add_2Ux1U_2U_4_112_out1 or gs_ctrl14)
          begin :drive_DC_Filter_Add2u2Mul2i3u2_4_96_in2
            case (gs_ctrl14) 

               2'd1:                begin
                  case (DC_Filter_Add_2Ux1U_2U_4_112_out1) 

                     2'd3:                      begin
                        DC_Filter_Add2u2Mul2i3u2_4_96_in2 = 2'd0;
                     end
                     
                     default:                      begin
                        DC_Filter_Add2u2Mul2i3u2_4_96_in2 = DC_Filter_Add_2Ux1U_2U_4_112_out1;
                     end
                     
                  endcase

               end
               
               2'd2:                begin
                  DC_Filter_Add2u2Mul2i3u2_4_96_in2 = s_reg_131;
               end
               
               default:                begin
                  DC_Filter_Add2u2Mul2i3u2_4_96_in2 = 2'd0;
               end
               
            endcase

         end

         // resource: mux_2bx4i1c
         always @(s_reg_130 or s_reg_135 or DC_Filter_Add_2Ux1U_2U_4_111_out1 or DC_Filter_Add_2Ux1U_2U_4_112_out1 or gs_ctrl15)
          begin :drive_DC_Filter_Add2u2Mul2i3u2_4_96_in1
            case (gs_ctrl15) 

               2'd1:                begin
                  DC_Filter_Add2u2Mul2i3u2_4_96_in1 = s_reg_135;
               end
               
               2'd2:                begin
                  DC_Filter_Add2u2Mul2i3u2_4_96_in1 = s_reg_130;
               end
               
               2'd3:                begin
                  case (DC_Filter_Add_2Ux1U_2U_4_112_out1) 

                     2'd3:                      begin
                        DC_Filter_Add2u2Mul2i3u2_4_96_in1 = DC_Filter_Add_2Ux1U_2U_4_111_out1;
                     end
                     
                     default:                      begin
                        DC_Filter_Add2u2Mul2i3u2_4_96_in1 = s_reg_135;
                     end
                     
                  endcase

               end
               
               default:                begin
                  DC_Filter_Add2u2Mul2i3u2_4_96_in1 = 2'd0;
               end
               
            endcase

         end

         // resource: DC_Filter_Add2u2Mul2i3u2_4  instance: DC_Filter_Add2u2Mul2i3u2_4_96
         assign DC_Filter_Add2u2Mul2i3u2_4_96_out1 = {2'b00, DC_Filter_Add2u2Mul2i3u2_4_96_in2}*4'd03 + {2'b00, DC_Filter_Add2u2Mul2i3u2_4_96_in1};

         // instance: drive_mask2_in1
         assign mask2_in1 = DC_Filter_Add2u2Mul2i3u2_4_96_out1;

         // resource: DC_Filter_Add_8Ux2U_9U_4  instance: DC_Filter_Add_8Ux2U_9U_4_97
         assign DC_Filter_Add_8Ux2U_9U_4_97_out1 = {1'b0, s_reg_133[7:0]} + {7'b0000000, s_reg_135};

         // resource: DC_Filter_Eqi2u2_4  instance: DC_Filter_Eqi2u2_4_99
         assign DC_Filter_Eqi2u2_4_99_out1 = s_reg_131 == 2'd2;

         // resource: DC_Filter_Mul_12U_3_4  instance: DC_Filter_Mul_12U_3_4_100
         assign DC_Filter_Mul_12U_3_4_100_out1 = {8'b00000000, s_reg_138}*12'd0258;

         // resource: DC_Filter_Add_12Ux9U_12U_4  instance: DC_Filter_Add_12Ux9U_12U_4_101
         assign DC_Filter_Add_12Ux9U_12U_4_101_out1 = DC_Filter_Mul_12U_3_4_100_out1 + {3'b000, s_reg_137};

         // resource: DC_Filter_OrReduction_2U_1U_4  instance: DC_Filter_OrReduction_2U_1U_4_102
         assign DC_Filter_OrReduction_2U_1U_4_102_out1 = (|s_reg_131);

         // resource: DC_Filter_N_Mux_12_3_40_4
         always @(s_reg_127 or s_reg_128 or s_reg_129 or s_reg_131)
          begin :DC_Filter_N_Mux_12_3_40_4_103
            case (s_reg_131) 

               2'd0:                begin
                  DC_Filter_N_Mux_12_3_40_4_103_out1 = s_reg_129;
               end
               
               2'd1:                begin
                  DC_Filter_N_Mux_12_3_40_4_103_out1 = s_reg_128;
               end
               
               default:                begin
                  DC_Filter_N_Mux_12_3_40_4_103_out1 = s_reg_127;
               end
               
            endcase

         end

         // resource: DC_Filter_Add_2Ux1U_2U_4  instance: DC_Filter_Add_2Ux1U_2U_4_104
         assign DC_Filter_Add_2Ux1U_2U_4_104_out1 = s_reg_131 + 2'd1;

         // resource: DC_Filter_Eqi1u2_4  instance: DC_Filter_Eqi1u2_4_105
         assign DC_Filter_Eqi1u2_4_105_out1 = s_reg_131 == 2'd1;

         // resource: DC_Filter_Mul_8Ux4U_12U_4  instance: DC_Filter_Mul_8Ux4U_12U_4_106
         assign DC_Filter_Mul_8Ux4U_12U_4_106_out1 = {4'b0000, f2_array_rgb_out1}*{8'b00000000, s_reg_136};

         // resource: DC_Filter_Add_12Ux12U_12U_4  instance: DC_Filter_Add_12Ux12U_12U_4_107
         assign DC_Filter_Add_12Ux12U_12U_4_107_out1 = DC_Filter_N_Mux_12_3_40_4_103_out1 + DC_Filter_Mul_8Ux4U_12U_4_106_out1;

         // resource: DC_Filter_N_Mux_12_2_41_4
         always @(s_reg_127 or s_reg_134 or DC_Filter_Add_12Ux12U_12U_4_107_out1)
          begin :DC_Filter_N_Mux_12_2_41_4_108
            if (s_reg_134) begin
               DC_Filter_N_Mux_12_2_41_4_108_out1 = DC_Filter_Add_12Ux12U_12U_4_107_out1;
            end
            else begin
               DC_Filter_N_Mux_12_2_41_4_108_out1 = s_reg_127;
            end
         end

         // resource: DC_Filter_N_Mux_12_2_41_4
         always @(s_reg_128 or DC_Filter_Eqi1u2_4_105_out1 or DC_Filter_Add_12Ux12U_12U_4_107_out1)
          begin :DC_Filter_N_Mux_12_2_41_4_109
            if (DC_Filter_Eqi1u2_4_105_out1) begin
               DC_Filter_N_Mux_12_2_41_4_109_out1 = DC_Filter_Add_12Ux12U_12U_4_107_out1;
            end
            else begin
               DC_Filter_N_Mux_12_2_41_4_109_out1 = s_reg_128;
            end
         end

         // resource: DC_Filter_N_Mux_12_2_41_4
         always @(s_reg_129 or DC_Filter_OrReduction_2U_1U_4_102_out1 or DC_Filter_Add_12Ux12U_12U_4_107_out1)
          begin :DC_Filter_N_Mux_12_2_41_4_110
            if (DC_Filter_OrReduction_2U_1U_4_102_out1) begin
               DC_Filter_N_Mux_12_2_41_4_110_out1 = s_reg_129;
            end
            else begin
               DC_Filter_N_Mux_12_2_41_4_110_out1 = DC_Filter_Add_12Ux12U_12U_4_107_out1;
            end
         end

         // resource: DC_Filter_Add_2Ux1U_2U_4  instance: DC_Filter_Add_2Ux1U_2U_4_111
         assign DC_Filter_Add_2Ux1U_2U_4_111_out1 = s_reg_135 + 2'd1;

         // resource: DC_Filter_Add_2Ux1U_2U_4  instance: DC_Filter_Add_2Ux1U_2U_4_112
         assign DC_Filter_Add_2Ux1U_2U_4_112_out1 = s_reg_130 + 2'd1;

         // resource: DC_Filter_Add2i1u8_4  instance: DC_Filter_Add2i1u8_4_113
         assign DC_Filter_Add2i1u8_4_113_out1 = {1'b0, s_reg_133[7:0]} + 9'd001;

         // resource: regr_en_sc_5
         always @(posedge i_clk)
          begin :drive_global_state
            if (i_rst == 1'b0) begin
               global_state <= 5'd00;
            end
            else begin
               case (stall0) 

                  1'b1:                   begin
                  end
                  
                  1'b0:                   begin
                     global_state <= global_state_next;
                  end
                  
               endcase

            end
         end

         // resource: mux_5bx10i9c
         always @(s_reg_132 or s_reg_133 or DC_Filter_Add_9Ux1U_9U_4_65_out1 or DC_Filter_Add_2Ux1U_2U_4_66_out1 or DC_Filter_Add_2Ux1U_2U_4_67_out1 or DC_Filter_Add_2Ux1U_2U_4_71_out1 or DC_Filter_Lti257u12_4_72_out1 or DC_Filter_Add2i1u1_4_74_out1 or DC_Filter_Lti258u12_4_75_out1 or DC_Filter_Add_2Ux1U_2U_4_80_out1 or DC_Filter_Add_2Ux1U_2U_4_81_out1 or DC_Filter_Add_2Ux1U_2U_4_89_out1 or DC_Filter_Add_2Ux1U_2U_4_104_out1 or DC_Filter_Add_2Ux1U_2U_4_111_out1 or 
DC_Filter_Add_2Ux1U_2U_4_112_out1
          or DC_Filter_Add2i1u8_4_113_out1 or global_state)
          begin :drive_global_state_next
            case (global_state) 

               5'd01:                begin
                  case (DC_Filter_Add_9Ux1U_9U_4_65_out1) 

                     9'd258:                      begin
                        case (DC_Filter_Add_2Ux1U_2U_4_67_out1) 

                           2'd3:                            begin
                              /* state6 */
                              case (DC_Filter_Add_2Ux1U_2U_4_66_out1) 

                                 2'd3:                                  begin
                                    global_state_next = 5'd09;
                                 end
                                 
                                 default:                                  begin
                                    global_state_next = 5'd00;
                                 end
                                 
                              endcase

                           end
                           
                           default:                            begin
                              global_state_next = 5'd00;
                           end
                           
                        endcase

                     end
                     
                     default:                      begin
                        global_state_next = 5'd00;
                     end
                     
                  endcase

               end
               
               5'd03:                begin
                  case (DC_Filter_Add_9Ux1U_9U_4_65_out1) 

                     9'd257:                      begin
                        case (DC_Filter_Add2i1u1_4_74_out1) 

                           2'd2:                            begin
                              /* state16 */
                              case (DC_Filter_Add_2Ux1U_2U_4_71_out1) 

                                 2'd3:                                  begin
                                    if (DC_Filter_Lti257u12_4_72_out1) begin
                                       global_state_next = 5'd05;
                                    end
                                    else begin
                                       if (DC_Filter_Lti258u12_4_75_out1) begin
                                          global_state_next = global_state + 5'd01;
                                       end
                                       else begin
                                          case (DC_Filter_Add_2Ux1U_2U_4_89_out1) 

                                             2'd3:                                              begin
                                                global_state_next = 5'd14;
                                             end
                                             
                                             default:                                              begin
                                                global_state_next = 5'd13;
                                             end
                                             
                                          endcase

                                       end
                                    end
                                 end
                                 
                                 default:                                  begin
                                    global_state_next = 5'd02;
                                 end
                                 
                              endcase

                           end
                           
                           default:                            begin
                              global_state_next = 5'd02;
                           end
                           
                        endcase

                     end
                     
                     default:                      begin
                        global_state_next = 5'd02;
                     end
                     
                  endcase

               end
               
               5'd04:                begin
                  case (DC_Filter_Add_2Ux1U_2U_4_81_out1) 

                     2'd3:                      begin
                        case (DC_Filter_Add_9Ux1U_9U_4_65_out1) 

                           9'd257:                            begin
                              case (DC_Filter_Add_2Ux1U_2U_4_89_out1) 

                                 2'd3:                                  begin
                                    global_state_next = 5'd14;
                                 end
                                 
                                 default:                                  begin
                                    global_state_next = 5'd13;
                                 end
                                 
                              endcase

                           end
                           
                           default:                            begin
                              global_state_next = 5'd04;
                           end
                           
                        endcase

                     end
                     
                     default:                      begin
                        global_state_next = 5'd04;
                     end
                     
                  endcase

               end
               
               5'd08:                begin
                  case (s_reg_133) 

                     9'd257:                      begin
                        case (DC_Filter_Add_2Ux1U_2U_4_89_out1) 

                           2'd3:                            begin
                              global_state_next = 5'd14;
                           end
                           
                           default:                            begin
                              global_state_next = 5'd13;
                           end
                           
                        endcase

                     end
                     
                     default:                      begin
                        global_state_next = 5'd05;
                     end
                     
                  endcase

               end
               
               5'd12:                begin
                  case (DC_Filter_Add_9Ux1U_9U_4_65_out1) 

                     9'd257:                      begin
                        case (DC_Filter_Add_2Ux1U_2U_4_80_out1) 

                           2'd3:                            begin
                              case (DC_Filter_Add_2Ux1U_2U_4_89_out1) 

                                 2'd3:                                  begin
                                    global_state_next = 5'd14;
                                 end
                                 
                                 default:                                  begin
                                    global_state_next = global_state + 5'd01;
                                 end
                                 
                              endcase

                           end
                           
                           default:                            begin
                              global_state_next = 5'd09;
                           end
                           
                        endcase

                     end
                     
                     default:                      begin
                        global_state_next = 5'd09;
                     end
                     
                  endcase

               end
               
               5'd13:                begin
                  case (DC_Filter_Add_2Ux1U_2U_4_89_out1) 

                     2'd3:                      begin
                        global_state_next = global_state + 5'd01;
                     end
                     
                     default:                      begin
                        global_state_next = 5'd13;
                     end
                     
                  endcase

               end
               
               5'd14, 5'd17:                begin
                  global_state_next = 5'd15;
               end
               
               5'd16:                begin
                  case (DC_Filter_Add_2Ux1U_2U_4_104_out1) 

                     2'd3:                      begin
                        case (DC_Filter_Add_2Ux1U_2U_4_112_out1) 

                           2'd3:                            begin
                              /* state68 */
                              case (DC_Filter_Add_2Ux1U_2U_4_111_out1) 

                                 2'd3:                                  begin
                                    global_state_next = 5'd18;
                                 end
                                 
                                 default:                                  begin
                                    global_state_next = 5'd14;
                                 end
                                 
                              endcase

                           end
                           
                           default:                            begin
                              global_state_next = 5'd14;
                           end
                           
                        endcase

                     end
                     
                     default:                      begin
                        global_state_next = global_state + 5'd01;
                     end
                     
                  endcase

               end
               
               5'd18:                begin
                  /* state72 */
                  case (DC_Filter_Add2i1u8_4_113_out1) 

                     9'd256:                      begin
                        case (s_reg_132) 

                           12'd0000:                            begin
                              global_state_next = 5'd09;
                           end
                           
                           default:                            begin
                              global_state_next = 5'd02;
                           end
                           
                        endcase

                     end
                     
                     default:                      begin
                        case (DC_Filter_Add_2Ux1U_2U_4_89_out1) 

                           2'd3:                            begin
                              global_state_next = 5'd14;
                           end
                           
                           default:                            begin
                              global_state_next = 5'd13;
                           end
                           
                        endcase

                     end
                     
                  endcase

               end
               
               default:                begin
                  global_state_next = global_state + 5'd01;
               end
               
            endcase

         end

         // resource: mux_2bx3i3c
         // resource: regr_en_sc_2
         always @(posedge i_clk)
          begin :drive_gs_ctrl0
            if (i_rst == 1'b0) begin
               gs_ctrl0 <= 2'd0;
            end
            else begin
               case (stall0) 

                  1'b1:                   begin
                  end
                  
                  1'b0:                   begin
                     case (global_state_next) 

                        5'd03:                         begin
                           gs_ctrl0 <= 2'd1;
                        end
                        
                        5'd04:                         begin
                           gs_ctrl0 <= 2'd2;
                        end
                        
                        default:                         begin
                           gs_ctrl0 <= 2'd0;
                        end
                        
                     endcase

                  end
                  
               endcase

            end
         end

         // resource: mux_2bx3i3c
         // resource: regr_en_sc_2
         always @(posedge i_clk)
          begin :drive_gs_ctrl1
            if (i_rst == 1'b0) begin
               gs_ctrl1 <= 2'd0;
            end
            else begin
               case (stall0) 

                  1'b1:                   begin
                  end
                  
                  1'b0:                   begin
                     case (global_state_next) 

                        5'd02:                         begin
                           gs_ctrl1 <= 2'd1;
                        end
                        
                        5'd03, 5'd04:                         begin
                           gs_ctrl1 <= 2'd2;
                        end
                        
                        default:                         begin
                           gs_ctrl1 <= 2'd0;
                        end
                        
                     endcase

                  end
                  
               endcase

            end
         end

         // resource: mux_4bx10i10c
         // resource: regr_en_sc_4
         always @(posedge i_clk)
          begin :drive_gs_ctrl3
            if (i_rst == 1'b0) begin
               gs_ctrl3 <= 4'd00;
            end
            else begin
               case (stall0) 

                  1'b1:                   begin
                  end
                  
                  1'b0:                   begin
                     case (global_state_next) 

                        5'd03:                         begin
                           gs_ctrl3 <= 4'd01;
                        end
                        
                        5'd05:                         begin
                           gs_ctrl3 <= 4'd02;
                        end
                        
                        5'd06:                         begin
                           gs_ctrl3 <= 4'd03;
                        end
                        
                        5'd07:                         begin
                           gs_ctrl3 <= 4'd04;
                        end
                        
                        5'd09:                         begin
                           gs_ctrl3 <= 4'd05;
                        end
                        
                        5'd10:                         begin
                           gs_ctrl3 <= 4'd06;
                        end
                        
                        5'd11:                         begin
                           gs_ctrl3 <= 4'd07;
                        end
                        
                        5'd15:                         begin
                           gs_ctrl3 <= 4'd08;
                        end
                        
                        5'd18:                         begin
                           gs_ctrl3 <= 4'd09;
                        end
                        
                        default:                         begin
                           gs_ctrl3 <= 4'd00;
                        end
                        
                     endcase

                  end
                  
               endcase

            end
         end

         // resource: mux_3bx5i5c
         // resource: regr_en_sc_3
         always @(posedge i_clk)
          begin :drive_gs_ctrl4
            if (i_rst == 1'b0) begin
               gs_ctrl4 <= 3'd0;
            end
            else begin
               case (stall0) 

                  1'b1:                   begin
                  end
                  
                  1'b0:                   begin
                     case (global_state_next) 

                        5'd02:                         begin
                           gs_ctrl4 <= 3'd1;
                        end
                        
                        5'd05, 5'd09:                         begin
                           gs_ctrl4 <= 3'd2;
                        end
                        
                        5'd06, 5'd10:                         begin
                           gs_ctrl4 <= 3'd3;
                        end
                        
                        5'd07, 5'd11:                         begin
                           gs_ctrl4 <= 3'd4;
                        end
                        
                        default:                         begin
                           gs_ctrl4 <= 3'd0;
                        end
                        
                     endcase

                  end
                  
               endcase

            end
         end

         // resource: mux_3bx5i5c
         // resource: regr_en_ss_sc_3
         always @(posedge i_clk)
          begin :drive_gs_ctrl5
            if (i_rst == 1'b0) begin
               gs_ctrl5 <= 3'd1;
            end
            else begin
               case (stall0) 

                  1'b1:                   begin
                  end
                  
                  1'b0:                   begin
                     case (global_state_next) 

                        5'd00, 5'd02, 5'd05, 5'd06, 5'd07, 5'd09, 5'd10, 5'd11, 5'd15:                         begin
                           gs_ctrl5 <= 3'd1;
                        end
                        
                        5'd03:                         begin
                           gs_ctrl5 <= 3'd2;
                        end
                        
                        5'd04:                         begin
                           gs_ctrl5 <= 3'd3;
                        end
                        
                        5'd18:                         begin
                           gs_ctrl5 <= 3'd4;
                        end
                        
                        default:                         begin
                           gs_ctrl5 <= 3'd0;
                        end
                        
                     endcase

                  end
                  
               endcase

            end
         end

         // resource: mux_2bx4i4c
         // resource: regr_en_ss_sc_2
         always @(posedge i_clk)
          begin :drive_gs_ctrl6
            if (i_rst == 1'b0) begin
               gs_ctrl6 <= 2'd1;
            end
            else begin
               case (stall0) 

                  1'b1:                   begin
                  end
                  
                  1'b0:                   begin
                     case (global_state_next) 

                        5'd00, 5'd02, 5'd05, 5'd06, 5'd07, 5'd09, 5'd10, 5'd11:                         begin
                           gs_ctrl6 <= 2'd1;
                        end
                        
                        5'd03:                         begin
                           gs_ctrl6 <= 2'd2;
                        end
                        
                        5'd04:                         begin
                           gs_ctrl6 <= 2'd3;
                        end
                        
                        default:                         begin
                           gs_ctrl6 <= 2'd0;
                        end
                        
                     endcase

                  end
                  
               endcase

            end
         end

         // resource: mux_1bx2i2c
         // resource: regr_en_sc_1
         always @(posedge i_clk)
          begin :drive_gs_ctrl7
            if (i_rst == 1'b0) begin
               gs_ctrl7 <= 1'b0;
            end
            else begin
               case (stall0) 

                  1'b1:                   begin
                  end
                  
                  1'b0:                   begin
                     case (global_state_next) 

                        5'd18:                         begin
                           gs_ctrl7 <= 1'b1;
                        end
                        
                        default:                         begin
                           gs_ctrl7 <= 1'b0;
                        end
                        
                     endcase

                  end
                  
               endcase

            end
         end

         // resource: mux_1bx2i2c
         // resource: regr_en_sc_1
         always @(posedge i_clk)
          begin :drive_gs_ctrl10
            if (i_rst == 1'b0) begin
               gs_ctrl10 <= 1'b0;
            end
            else begin
               case (stall0) 

                  1'b1:                   begin
                  end
                  
                  1'b0:                   begin
                     case (global_state_next) 

                        5'd13:                         begin
                           gs_ctrl10 <= 1'b1;
                        end
                        
                        default:                         begin
                           gs_ctrl10 <= 1'b0;
                        end
                        
                     endcase

                  end
                  
               endcase

            end
         end

         // resource: mux_2bx3i3c
         // resource: regr_en_sc_2
         always @(posedge i_clk)
          begin :drive_gs_ctrl14
            if (i_rst == 1'b0) begin
               gs_ctrl14 <= 2'd0;
            end
            else begin
               case (stall0) 

                  1'b1:                   begin
                  end
                  
                  1'b0:                   begin
                     case (global_state_next) 

                        5'd16:                         begin
                           gs_ctrl14 <= 2'd1;
                        end
                        
                        5'd17:                         begin
                           gs_ctrl14 <= 2'd2;
                        end
                        
                        default:                         begin
                           gs_ctrl14 <= 2'd0;
                        end
                        
                     endcase

                  end
                  
               endcase

            end
         end

         // resource: mux_2bx4i4c
         // resource: regr_en_sc_2
         always @(posedge i_clk)
          begin :drive_gs_ctrl15
            if (i_rst == 1'b0) begin
               gs_ctrl15 <= 2'd0;
            end
            else begin
               case (stall0) 

                  1'b1:                   begin
                  end
                  
                  1'b0:                   begin
                     case (global_state_next) 

                        5'd13:                         begin
                           gs_ctrl15 <= 2'd1;
                        end
                        
                        5'd14, 5'd17:                         begin
                           gs_ctrl15 <= 2'd2;
                        end
                        
                        5'd16:                         begin
                           gs_ctrl15 <= 2'd3;
                        end
                        
                        default:                         begin
                           gs_ctrl15 <= 2'd0;
                        end
                        
                     endcase

                  end
                  
               endcase

            end
         end

         // resource: mux_24bx2i0c
         // resource: regr_en_24
         always @(posedge i_clk)
          begin :drive_o_rgb_inside_data
            case (stall1) 

               1'b1:                begin
               end
               
               1'b0:                begin
                  case (global_state1) 

                     5'd05, 5'd09:                      begin
                        o_rgb_inside_data <= i_rgb_data;
                     end
                     
                     5'd16:                      begin
                        if (2'd3 == DC_Filter_Add_2Ux1U_2U_4_49_out1 && (2'd3 == DC_Filter_Add_2Ux1U_2U_4_57_out1 && 2'd3 == DC_Filter_Add_2Ux1U_2U_4_56_out1)) begin
                           o_rgb_inside_data <= {DC_Filter_N_Mux_12_2_41_4_53_out1[11:4], {DC_Filter_N_Mux_12_2_41_4_54_out1[11:4], DC_Filter_N_Mux_12_2_41_4_55_out1[11:4]}};
                        end
                     end
                     
                  endcase

               end
               
            endcase

         end

         // resource: mux_1bx2i2c
         // resource: regr_en_ss_1
         always @(posedge i_clk)
          begin :drive_i_rgb_m_busy_req_0
            if (i_rst == 1'b0) begin
               i_rgb_m_busy_req_0 <= 1'd1;
            end
            else begin
               case (stall1) 

                  1'b1:                   begin
                  end
                  
                  1'b0:                   begin
                     case (global_state1) 

                        5'd01:                         begin
                           if (9'd258 == DC_Filter_Add_9Ux1U_9U_4_10_out1 && (2'd3 == DC_Filter_Add_2Ux1U_2U_4_12_out1 && 2'd3 == DC_Filter_Add_2Ux1U_2U_4_11_out1)) begin
                              i_rgb_m_busy_req_0 <= 1'd0;
                           end
                        end
                        
                        5'd03:                         begin
                           if (9'd257 == DC_Filter_Add_9Ux1U_9U_4_10_out1 && (2'd2 == DC_Filter_Add2i1u1_4_19_out1 && (2'd3 == DC_Filter_Add_2Ux1U_2U_4_16_out1 && DC_Filter_Lti257u12_4_17_out1))) begin
                              i_rgb_m_busy_req_0 <= 1'd0;
                           end
                        end
                        
                        5'd05, 5'd09:                         begin
                           i_rgb_m_busy_req_0 <= 1'd1;
                        end
                        
                        5'd08:                         begin
                           if (9'd257 != s_reg_64) begin
                              i_rgb_m_busy_req_0 <= 1'd0;
                           end
                        end
                        
                        5'd12:                         begin
                           case (DC_Filter_Add_9Ux1U_9U_4_10_out1) 

                              9'd257:                               begin
                                 if (2'd3 != DC_Filter_Add_2Ux1U_2U_4_25_out1) begin
                                    i_rgb_m_busy_req_0 <= 1'd0;
                                 end
                              end
                              
                              default:                               begin
                                 i_rgb_m_busy_req_0 <= 1'd0;
                              end
                              
                           endcase

                        end
                        
                        5'd18:                         begin
                           if (9'd256 == DC_Filter_Add2i1u8_4_58_out1 && 12'd0000 == s_reg_63) begin
                              i_rgb_m_busy_req_0 <= 1'd0;
                           end
                        end
                        
                     endcase

                  end
                  
               endcase

            end
         end

         // resource: regr_en_sc_1
         always @(posedge i_clk)
          begin :drive_o_rgb_inside_m_req_m_trig_req
            if (i_rst == 1'b0) begin
               o_rgb_inside_m_req_m_trig_req <= 1'd0;
            end
            else begin
               case (stall1) 

                  1'b1:                   begin
                  end
                  
                  1'b0:                   begin
                     case (global_state1) 

                        5'd16:                         begin
                           if (2'd3 == DC_Filter_Add_2Ux1U_2U_4_49_out1 && (2'd3 == DC_Filter_Add_2Ux1U_2U_4_57_out1 && 2'd3 == DC_Filter_Add_2Ux1U_2U_4_56_out1)) begin
                              o_rgb_inside_m_req_m_trig_req <= DC_Filter_Not_1U_1U_1_6_out1;
                           end
                        end
                        
                     endcase

                  end
                  
               endcase

            end
         end

         // resource: mux_1bx3i1c
         always @(DC_Filter_And_1Ux1U_1U_4_59_out1 or DC_Filter_gen_busy_r_4_115_out1[0] or global_state1)
          begin :drive_stall1
            case (global_state1) 

               5'd05, 5'd09:                begin
                  stall1 = DC_Filter_gen_busy_r_4_115_out1[0];
               end
               
               5'd18:                begin
                  stall1 = DC_Filter_And_1Ux1U_1U_4_59_out1;
               end
               
               default:                begin
                  stall1 = 1'b0;
               end
               
            endcase

         end

         // resource: mux_12bx2i0c
         // resource: regr_en_sc_12
         always @(posedge i_clk)
          begin :drive_s_reg_58
            if (i_rst == 1'b0) begin
               s_reg_58 <= 12'd0000;
            end
            else begin
               case (stall1) 

                  1'b1:                   begin
                  end
                  
                  1'b0:                   begin
                     case (global_state1) 

                        5'd03:                         begin
                           if (9'd257 == DC_Filter_Add_9Ux1U_9U_4_10_out1 && (2'd2 == DC_Filter_Add2i1u1_4_19_out1 && (2'd3 == DC_Filter_Add_2Ux1U_2U_4_16_out1 && (!DC_Filter_Lti257u12_4_17_out1 && !DC_Filter_Lti258u12_4_20_out1)))) begin
                              /* state48 */
                              s_reg_58 <= DC_Filter_N_Mux_12_2_38_4_38_out1;
                           end
                        end
                        
                        5'd04:                         begin
                           if (2'd3 == DC_Filter_Add_2Ux1U_2U_4_26_out1 && 9'd257 == DC_Filter_Add_9Ux1U_9U_4_10_out1) begin
                              /* state52 */
                              s_reg_58 <= DC_Filter_N_Mux_12_2_38_4_38_out1;
                           end
                        end
                        
                        5'd08:                         begin
                           if (9'd257 == s_reg_64) begin
                              /* state51 */
                              s_reg_58 <= DC_Filter_N_Mux_12_2_38_4_38_out1;
                           end
                        end
                        
                        5'd12:                         begin
                           if (9'd257 == DC_Filter_Add_9Ux1U_9U_4_10_out1 && 2'd3 == DC_Filter_Add_2Ux1U_2U_4_25_out1) begin
                              /* state49 */
                              s_reg_58 <= DC_Filter_N_Mux_12_2_38_4_38_out1;
                           end
                        end
                        
                        5'd13:                         begin
                           /* state53 */
                           s_reg_58 <= DC_Filter_N_Mux_12_2_38_4_38_out1;
                        end
                        
                        5'd16:                         begin
                           /* state64 */
                           s_reg_58 <= DC_Filter_N_Mux_12_2_41_4_53_out1;
                        end
                        
                        5'd18:                         begin
                           if (9'd256 != DC_Filter_Add2i1u8_4_58_out1) begin
                              /* state50 */
                              s_reg_58 <= DC_Filter_N_Mux_12_2_38_4_38_out1;
                           end
                        end
                        
                     endcase

                  end
                  
               endcase

            end
         end

         // resource: mux_12bx2i0c
         // resource: regr_en_sc_12
         always @(posedge i_clk)
          begin :drive_s_reg_59
            if (i_rst == 1'b0) begin
               s_reg_59 <= 12'd0000;
            end
            else begin
               case (stall1) 

                  1'b1:                   begin
                  end
                  
                  1'b0:                   begin
                     case (global_state1) 

                        5'd03:                         begin
                           if (9'd257 == DC_Filter_Add_9Ux1U_9U_4_10_out1 && (2'd2 == DC_Filter_Add2i1u1_4_19_out1 && (2'd3 == DC_Filter_Add_2Ux1U_2U_4_16_out1 && (!DC_Filter_Lti257u12_4_17_out1 && !DC_Filter_Lti258u12_4_20_out1)))) begin
                              s_reg_59 <= DC_Filter_N_Mux_12_2_38_4_39_out1;
                           end
                        end
                        
                        5'd04:                         begin
                           if (2'd3 == DC_Filter_Add_2Ux1U_2U_4_26_out1 && 9'd257 == DC_Filter_Add_9Ux1U_9U_4_10_out1) begin
                              s_reg_59 <= DC_Filter_N_Mux_12_2_38_4_39_out1;
                           end
                        end
                        
                        5'd08:                         begin
                           if (9'd257 == s_reg_64) begin
                              s_reg_59 <= DC_Filter_N_Mux_12_2_38_4_39_out1;
                           end
                        end
                        
                        5'd12:                         begin
                           if (9'd257 == DC_Filter_Add_9Ux1U_9U_4_10_out1 && 2'd3 == DC_Filter_Add_2Ux1U_2U_4_25_out1) begin
                              s_reg_59 <= DC_Filter_N_Mux_12_2_38_4_39_out1;
                           end
                        end
                        
                        5'd13:                         begin
                           s_reg_59 <= DC_Filter_N_Mux_12_2_38_4_39_out1;
                        end
                        
                        5'd16:                         begin
                           s_reg_59 <= DC_Filter_N_Mux_12_2_41_4_54_out1;
                        end
                        
                        5'd18:                         begin
                           if (9'd256 != DC_Filter_Add2i1u8_4_58_out1) begin
                              s_reg_59 <= DC_Filter_N_Mux_12_2_38_4_39_out1;
                           end
                        end
                        
                     endcase

                  end
                  
               endcase

            end
         end

         // resource: mux_12bx2i0c
         // resource: regr_en_sc_12
         always @(posedge i_clk)
          begin :drive_s_reg_60
            if (i_rst == 1'b0) begin
               s_reg_60 <= 12'd0000;
            end
            else begin
               case (stall1) 

                  1'b1:                   begin
                  end
                  
                  1'b0:                   begin
                     case (global_state1) 

                        5'd03:                         begin
                           if (9'd257 == DC_Filter_Add_9Ux1U_9U_4_10_out1 && (2'd2 == DC_Filter_Add2i1u1_4_19_out1 && (2'd3 == DC_Filter_Add_2Ux1U_2U_4_16_out1 && (!DC_Filter_Lti257u12_4_17_out1 && !DC_Filter_Lti258u12_4_20_out1)))) begin
                              s_reg_60 <= DC_Filter_N_Mux_12_2_39_4_40_out1;
                           end
                        end
                        
                        5'd04:                         begin
                           if (2'd3 == DC_Filter_Add_2Ux1U_2U_4_26_out1 && 9'd257 == DC_Filter_Add_9Ux1U_9U_4_10_out1) begin
                              s_reg_60 <= DC_Filter_N_Mux_12_2_39_4_40_out1;
                           end
                        end
                        
                        5'd08:                         begin
                           if (9'd257 == s_reg_64) begin
                              s_reg_60 <= DC_Filter_N_Mux_12_2_39_4_40_out1;
                           end
                        end
                        
                        5'd12:                         begin
                           if (9'd257 == DC_Filter_Add_9Ux1U_9U_4_10_out1 && 2'd3 == DC_Filter_Add_2Ux1U_2U_4_25_out1) begin
                              s_reg_60 <= DC_Filter_N_Mux_12_2_39_4_40_out1;
                           end
                        end
                        
                        5'd13:                         begin
                           s_reg_60 <= DC_Filter_N_Mux_12_2_39_4_40_out1;
                        end
                        
                        5'd16:                         begin
                           s_reg_60 <= DC_Filter_N_Mux_12_2_41_4_55_out1;
                        end
                        
                        5'd18:                         begin
                           if (9'd256 != DC_Filter_Add2i1u8_4_58_out1) begin
                              s_reg_60 <= DC_Filter_N_Mux_12_2_39_4_40_out1;
                           end
                        end
                        
                     endcase

                  end
                  
               endcase

            end
         end

         // resource: mux_2bx5i1c
         // resource: regr_en_sc_2
         always @(posedge i_clk)
          begin :drive_s_reg_61
            if (i_rst == 1'b0) begin
               s_reg_61 <= 2'd0;
            end
            else begin
               case (stall1) 

                  1'b1:                   begin
                  end
                  
                  1'b0:                   begin
                     case (global_state1) 

                        5'd01:                         begin
                           if (9'd258 == DC_Filter_Add_9Ux1U_9U_4_10_out1 && (2'd3 == DC_Filter_Add_2Ux1U_2U_4_12_out1 && 2'd3 != DC_Filter_Add_2Ux1U_2U_4_11_out1)) begin
                              s_reg_61 <= DC_Filter_Add_2Ux1U_2U_4_11_out1;
                           end
                        end
                        
                        5'd03:                         begin
                           if (9'd257 == DC_Filter_Add_9Ux1U_9U_4_10_out1 && 2'd2 == DC_Filter_Add2i1u1_4_19_out1) begin
                              /* state16 */
                              case (DC_Filter_Add_2Ux1U_2U_4_16_out1) 

                                 2'd3:                                  begin
                                    case (DC_Filter_Add_2Ux1U_2U_4_34_out1) 

                                       2'd3:                                        begin
                                          s_reg_61 <= 2'd0;
                                       end
                                       
                                       default:                                        begin
                                          s_reg_61 <= DC_Filter_Add_2Ux1U_2U_4_34_out1;
                                       end
                                       
                                    endcase

                                 end
                                 
                                 default:                                  begin
                                    s_reg_61 <= DC_Filter_Add_2Ux1U_2U_4_16_out1;
                                 end
                                 
                              endcase

                           end
                        end
                        
                        5'd04, 5'd08, 5'd12, 5'd13:                         begin
                           case (DC_Filter_Add_2Ux1U_2U_4_34_out1) 

                              2'd3:                               begin
                                 s_reg_61 <= 2'd0;
                              end
                              
                              default:                               begin
                                 s_reg_61 <= DC_Filter_Add_2Ux1U_2U_4_34_out1;
                              end
                              
                           endcase

                        end
                        
                        5'd16:                         begin
                           if (2'd3 == DC_Filter_Add_2Ux1U_2U_4_49_out1) begin
                              case (DC_Filter_Add_2Ux1U_2U_4_57_out1) 

                                 2'd3:                                  begin
                                    if (2'd3 != DC_Filter_Add_2Ux1U_2U_4_56_out1) begin
                                       s_reg_61 <= 2'd0;
                                    end
                                 end
                                 
                                 default:                                  begin
                                    s_reg_61 <= DC_Filter_Add_2Ux1U_2U_4_57_out1;
                                 end
                                 
                              endcase

                           end
                        end
                        
                        5'd18:                         begin
                           /* state72 */
                           case (DC_Filter_Add2i1u8_4_58_out1) 

                              9'd256:                               begin
                                 if (12'd0000 != s_reg_63) begin
                                    s_reg_61 <= 2'd0;
                                 end
                              end
                              
                              default:                               begin
                                 case (DC_Filter_Add_2Ux1U_2U_4_34_out1) 

                                    2'd3:                                     begin
                                       s_reg_61 <= 2'd0;
                                    end
                                    
                                    default:                                     begin
                                       s_reg_61 <= DC_Filter_Add_2Ux1U_2U_4_34_out1;
                                    end
                                    
                                 endcase

                              end
                              
                           endcase

                        end
                        
                     endcase

                  end
                  
               endcase

            end
         end

         // resource: mux_2bx4i1c
         // resource: regr_en_sc_2
         always @(posedge i_clk)
          begin :drive_s_reg_62
            if (i_rst == 1'b0) begin
               s_reg_62 <= 2'd0;
            end
            else begin
               case (stall1) 

                  1'b1:                   begin
                  end
                  
                  1'b0:                   begin
                     case (global_state1) 

                        5'd01:                         begin
                           if (9'd258 == DC_Filter_Add_9Ux1U_9U_4_10_out1) begin
                              case (DC_Filter_Add_2Ux1U_2U_4_12_out1) 

                                 2'd3:                                  begin
                                    if (2'd3 != DC_Filter_Add_2Ux1U_2U_4_11_out1) begin
                                       s_reg_62 <= 2'd0;
                                    end
                                 end
                                 
                                 default:                                  begin
                                    s_reg_62 <= DC_Filter_Add_2Ux1U_2U_4_12_out1;
                                 end
                                 
                              endcase

                           end
                        end
                        
                        5'd03:                         begin
                           if (9'd257 == DC_Filter_Add_9Ux1U_9U_4_10_out1) begin
                              case (DC_Filter_Add2i1u1_4_19_out1) 

                                 2'd2:                                  begin
                                    if (2'd3 != DC_Filter_Add_2Ux1U_2U_4_16_out1) begin
                                       s_reg_62 <= 2'd0;
                                    end
                                 end
                                 
                                 default:                                  begin
                                    s_reg_62 <= DC_Filter_Add2i1u1_4_19_out1;
                                 end
                                 
                              endcase

                           end
                        end
                        
                        5'd14:                         begin
                           s_reg_62 <= 2'd0;
                        end
                        
                        5'd16:                         begin
                           if (2'd3 != DC_Filter_Add_2Ux1U_2U_4_49_out1) begin
                              s_reg_62 <= DC_Filter_Add_2Ux1U_2U_4_49_out1;
                           end
                        end
                        
                        5'd18:                         begin
                           if (12'd0000 != s_reg_63) begin
                              s_reg_62 <= 2'd0;
                           end
                        end
                        
                     endcase

                  end
                  
               endcase

            end
         end

         // resource: mux_12bx2i1c
         // resource: regr_en_12
         always @(posedge i_clk)
          begin :drive_s_reg_63
            case (stall1) 

               1'b1:                begin
               end
               
               1'b0:                begin
                  case (global_state1) 

                     5'd04:                      begin
                        if (2'd3 == DC_Filter_Add_2Ux1U_2U_4_26_out1 && 9'd257 == DC_Filter_Add_9Ux1U_9U_4_10_out1) begin
                           s_reg_63 <= DC_Filter_Add2i1u12_4_33_out1;
                        end
                     end
                     
                     5'd08:                      begin
                        if (9'd257 == s_reg_64) begin
                           s_reg_63 <= DC_Filter_Add2i1u12_4_33_out1;
                        end
                     end
                     
                     5'd12:                      begin
                        s_reg_63 <= 12'd0003;
                     end
                     
                  endcase

               end
               
            endcase

         end

         // resource: mux_9bx5i2c
         // resource: regr_en_sc_9
         always @(posedge i_clk)
          begin :drive_s_reg_64
            if (i_rst == 1'b0) begin
               s_reg_64 <= 9'd000;
            end
            else begin
               case (stall1) 

                  1'b1:                   begin
                  end
                  
                  1'b0:                   begin
                     case (global_state1) 

                        5'd01:                         begin
                           case (DC_Filter_Add_9Ux1U_9U_4_10_out1) 

                              9'd258:                               begin
                                 case (DC_Filter_Add_2Ux1U_2U_4_12_out1) 

                                    2'd3:                                     begin
                                       /* state6 */
                                       case (DC_Filter_Add_2Ux1U_2U_4_11_out1) 

                                          2'd3:                                           begin
                                             s_reg_64 <= 9'd001;
                                          end
                                          
                                          default:                                           begin
                                             s_reg_64 <= 9'd000;
                                          end
                                          
                                       endcase

                                    end
                                    
                                    default:                                     begin
                                       s_reg_64 <= 9'd000;
                                    end
                                    
                                 endcase

                              end
                              
                              default:                               begin
                                 s_reg_64 <= DC_Filter_Add_9Ux1U_9U_4_10_out1;
                              end
                              
                           endcase

                        end
                        
                        5'd03:                         begin
                           case (DC_Filter_Add_9Ux1U_9U_4_10_out1) 

                              9'd257:                               begin
                                 case (DC_Filter_Add2i1u1_4_19_out1) 

                                    2'd2:                                     begin
                                       /* state16 */
                                       case (DC_Filter_Add_2Ux1U_2U_4_16_out1) 

                                          2'd3:                                           begin
                                             if (DC_Filter_Lti257u12_4_17_out1) begin
                                                s_reg_64 <= 9'd001;
                                             end
                                             else begin
                                                s_reg_64 <= {8'b00000000, DC_Filter_Lti258u12_4_20_out1};
                                             end
                                          end
                                          
                                          default:                                           begin
                                             s_reg_64 <= 9'd001;
                                          end
                                          
                                       endcase

                                    end
                                    
                                    default:                                     begin
                                       s_reg_64 <= 9'd001;
                                    end
                                    
                                 endcase

                              end
                              
                              default:                               begin
                                 s_reg_64 <= DC_Filter_Add_9Ux1U_9U_4_10_out1;
                              end
                              
                           endcase

                        end
                        
                        5'd04:                         begin
                           if (2'd3 == DC_Filter_Add_2Ux1U_2U_4_26_out1) begin
                              case (DC_Filter_Add_9Ux1U_9U_4_10_out1) 

                                 9'd257:                                  begin
                                    s_reg_64 <= 9'd000;
                                 end
                                 
                                 default:                                  begin
                                    s_reg_64 <= DC_Filter_Add_9Ux1U_9U_4_10_out1;
                                 end
                                 
                              endcase

                           end
                        end
                        
                        5'd07:                         begin
                           s_reg_64 <= DC_Filter_Add_9Ux1U_9U_4_10_out1;
                        end
                        
                        5'd08:                         begin
                           if (9'd257 == s_reg_64) begin
                              s_reg_64 <= 9'd000;
                           end
                        end
                        
                        5'd12:                         begin
                           case (DC_Filter_Add_9Ux1U_9U_4_10_out1) 

                              9'd257:                               begin
                                 case (DC_Filter_Add_2Ux1U_2U_4_25_out1) 

                                    2'd3:                                     begin
                                       s_reg_64 <= 9'd000;
                                    end
                                    
                                    default:                                     begin
                                       s_reg_64 <= 9'd001;
                                    end
                                    
                                 endcase

                              end
                              
                              default:                               begin
                                 s_reg_64 <= DC_Filter_Add_9Ux1U_9U_4_10_out1;
                              end
                              
                           endcase

                        end
                        
                        5'd18:                         begin
                           /* state72 */
                           case (DC_Filter_Add2i1u8_4_58_out1) 

                              9'd256:                               begin
                                 s_reg_64 <= 9'd001;
                              end
                              
                              default:                               begin
                                 s_reg_64 <= DC_Filter_Add2i1u8_4_58_out1;
                              end
                              
                           endcase

                        end
                        
                     endcase

                  end
                  
               endcase

            end
         end

         // resource: regr_en_1
         always @(posedge i_clk)
          begin :drive_s_reg_65
            case (stall1) 

               1'b1:                begin
               end
               
               1'b0:                begin
                  s_reg_65 <= DC_Filter_Eqi2u2_4_44_out1;
               end
               
            endcase

         end

         // resource: mux_2bx5i2c
         // resource: regr_en_2
         always @(posedge i_clk)
          begin :drive_s_reg_66
            case (stall1) 

               1'b1:                begin
               end
               
               1'b0:                begin
                  case (global_state1) 

                     5'd01:                      begin
                        s_reg_66 <= 2'd1;
                     end
                     
                     5'd03, 5'd08:                      begin
                        s_reg_66 <= 2'd0;
                     end
                     
                     5'd04:                      begin
                        case (DC_Filter_Add_2Ux1U_2U_4_26_out1) 

                           2'd3:                            begin
                              s_reg_66 <= 2'd0;
                           end
                           
                           default:                            begin
                              s_reg_66 <= DC_Filter_Add_2Ux1U_2U_4_26_out1;
                           end
                           
                        endcase

                     end
                     
                     5'd12:                      begin
                        if (9'd257 == DC_Filter_Add_9Ux1U_9U_4_10_out1) begin
                           case (DC_Filter_Add_2Ux1U_2U_4_25_out1) 

                              2'd3:                               begin
                                 s_reg_66 <= 2'd0;
                              end
                              
                              default:                               begin
                                 s_reg_66 <= DC_Filter_Add_2Ux1U_2U_4_25_out1;
                              end
                              
                           endcase

                        end
                     end
                     
                     5'd16:                      begin
                        if (2'd3 == DC_Filter_Add_2Ux1U_2U_4_49_out1 && (2'd3 == DC_Filter_Add_2Ux1U_2U_4_57_out1 && 2'd3 != DC_Filter_Add_2Ux1U_2U_4_56_out1)) begin
                           s_reg_66 <= DC_Filter_Add_2Ux1U_2U_4_56_out1;
                        end
                     end
                     
                     5'd18:                      begin
                        /* state72 */
                        case (DC_Filter_Add2i1u8_4_58_out1) 

                           9'd256:                            begin
                              s_reg_66 <= 2'd1;
                           end
                           
                           default:                            begin
                              s_reg_66 <= 2'd0;
                           end
                           
                        endcase

                     end
                     
                  endcase

               end
               
            endcase

         end

         // resource: regr_en_4
         always @(posedge i_clk)
          begin :drive_s_reg_67
            case (stall1) 

               1'b1:                begin
               end
               
               1'b0:                begin
                  case (global_state1) 

                     5'd14:                      begin
                        s_reg_67 <= mask1_out1;
                     end
                     
                  endcase

               end
               
            endcase

         end

         // resource: regr_en_9
         always @(posedge i_clk)
          begin :drive_s_reg_68
            case (stall1) 

               1'b1:                begin
               end
               
               1'b0:                begin
                  case (global_state1) 

                     5'd14, 5'd17:                      begin
                        s_reg_68 <= DC_Filter_Add_8Ux2U_9U_4_42_out1;
                     end
                     
                  endcase

               end
               
            endcase

         end

         // resource: regr_en_4
         always @(posedge i_clk)
          begin :drive_s_reg_69
            case (stall1) 

               1'b1:                begin
               end
               
               1'b0:                begin
                  case (global_state1) 

                     5'd14, 5'd17:                      begin
                        s_reg_69 <= DC_Filter_Add2u2Mul2i3u2_4_41_out1;
                     end
                     
                  endcase

               end
               
            endcase

         end

         // resource: mux_2bx3i1c
         always @(s_reg_61 or DC_Filter_Add_2Ux1U_2U_4_26_out1 or gs_ctrl16)
          begin :drive_DC_Filter_Add2u9Mul2i258Add2u2Mul2i3u2_4_9_in3
            case (gs_ctrl16) 

               2'd1:                begin
                  DC_Filter_Add2u9Mul2i258Add2u2Mul2i3u2_4_9_in3 = 2'd0;
               end
               
               2'd2:                begin
                  case (DC_Filter_Add_2Ux1U_2U_4_26_out1) 

                     2'd3:                      begin
                        DC_Filter_Add2u9Mul2i258Add2u2Mul2i3u2_4_9_in3 = 2'd0;
                     end
                     
                     default:                      begin
                        DC_Filter_Add2u9Mul2i258Add2u2Mul2i3u2_4_9_in3 = DC_Filter_Add_2Ux1U_2U_4_26_out1;
                     end
                     
                  endcase

               end
               
               default:                begin
                  DC_Filter_Add2u9Mul2i258Add2u2Mul2i3u2_4_9_in3 = s_reg_61;
               end
               
            endcase

         end

         // resource: mux_2bx3i1c
         always @(s_reg_62 or gs_ctrl17)
          begin :drive_DC_Filter_Add2u9Mul2i258Add2u2Mul2i3u2_4_9_in2
            case (gs_ctrl17) 

               2'd1:                begin
                  DC_Filter_Add2u9Mul2i258Add2u2Mul2i3u2_4_9_in2 = {1'b0, s_reg_62[0]};
               end
               
               2'd2:                begin
                  DC_Filter_Add2u9Mul2i258Add2u2Mul2i3u2_4_9_in2 = 2'd2;
               end
               
               default:                begin
                  DC_Filter_Add2u9Mul2i258Add2u2Mul2i3u2_4_9_in2 = s_reg_62;
               end
               
            endcase

         end

         // resource: mux_9bx3i1c
         always @(s_reg_64 or DC_Filter_Add_9Ux1U_9U_4_10_out1 or DC_Filter_Add_2Ux1U_2U_4_26_out1 or gs_ctrl16)
          begin :drive_DC_Filter_Add2u9Mul2i258Add2u2Mul2i3u2_4_9_in1
            case (gs_ctrl16) 

               2'd1:                begin
                  DC_Filter_Add2u9Mul2i258Add2u2Mul2i3u2_4_9_in1 = 9'd001;
               end
               
               2'd2:                begin
                  case (DC_Filter_Add_2Ux1U_2U_4_26_out1) 

                     2'd3:                      begin
                        DC_Filter_Add2u9Mul2i258Add2u2Mul2i3u2_4_9_in1 = DC_Filter_Add_9Ux1U_9U_4_10_out1;
                     end
                     
                     default:                      begin
                        DC_Filter_Add2u9Mul2i258Add2u2Mul2i3u2_4_9_in1 = s_reg_64;
                     end
                     
                  endcase

               end
               
               default:                begin
                  DC_Filter_Add2u9Mul2i258Add2u2Mul2i3u2_4_9_in1 = s_reg_64;
               end
               
            endcase

         end

         // resource: DC_Filter_Add2u9Mul2i258Add2u2Mul2i3u2_4  instance: DC_Filter_Add2u9Mul2i258Add2u2Mul2i3u2_4_9
         assign DC_Filter_Add2u9Mul2i258Add2u2Mul2i3u2_4_9_out1 = ({10'b0000000000, DC_Filter_Add2u9Mul2i258Add2u2Mul2i3u2_4_9_in3}*12'd0003 + {10'b0000000000, DC_Filter_Add2u9Mul2i258Add2u2Mul2i3u2_4_9_in2})*12'd0258 + {3'b000, DC_Filter_Add2u9Mul2i258Add2u2Mul2i3u2_4_9_in1};

         // resource: DC_Filter_Add_9Ux1U_9U_4  instance: DC_Filter_Add_9Ux1U_9U_4_10
         assign DC_Filter_Add_9Ux1U_9U_4_10_out1 = s_reg_64 + 9'd001;

         // resource: mux_12bx9i0c
         always @(DC_Filter_Add2u9Mul2i258Add2u2Mul2i3u2_4_9_out1 or DC_Filter_Add_9Ux1U_9U_4_10_out1 or DC_Filter_Add2u9Mul2i258Add3i1u1Mul2i3u2_4_13_out1 or DC_Filter_Add_2Ux1U_2U_4_16_out1 or DC_Filter_Add2u9Mul2i258u2_4_18_out1 or DC_Filter_Add2i1u1_4_19_out1 or DC_Filter_Add2u9Mul2i258Add2i3u2_4_21_out1 or DC_Filter_Add2u9Mul2i258Add2i6u2_4_22_out1 or DC_Filter_gen000002_4_28_out1 or DC_Filter_gen000001_4_30_out1 or DC_Filter_Add2iLLu9_4_32_out1 or DC_Filter_Add_12Ux9U_12U_4_46_out1 or 
gs_ctrl19
         )
          begin :drive_f1_array_rgb_in1
            case (gs_ctrl19) 

               4'd01:                begin
                  case (DC_Filter_Add_9Ux1U_9U_4_10_out1) 

                     9'd257:                      begin
                        case (DC_Filter_Add2i1u1_4_19_out1) 

                           2'd2:                            begin
                              /* state16 */
                              case (DC_Filter_Add_2Ux1U_2U_4_16_out1) 

                                 2'd3:                                  begin
                                    f1_array_rgb_in1 = DC_Filter_Add2u9Mul2i258Add2u2Mul2i3u2_4_9_out1;
                                 end
                                 
                                 default:                                  begin
                                    f1_array_rgb_in1 = DC_Filter_Add2u9Mul2i258Add3i1u1Mul2i3u2_4_13_out1;
                                 end
                                 
                              endcase

                           end
                           
                           default:                            begin
                              f1_array_rgb_in1 = DC_Filter_Add2u9Mul2i258Add3i1u1Mul2i3u2_4_13_out1;
                           end
                           
                        endcase

                     end
                     
                     default:                      begin
                        f1_array_rgb_in1 = DC_Filter_Add2u9Mul2i258Add3i1u1Mul2i3u2_4_13_out1;
                     end
                     
                  endcase

               end
               
               4'd02:                begin
                  f1_array_rgb_in1 = {1'b0, DC_Filter_gen000002_4_28_out1};
               end
               
               4'd03:                begin
                  f1_array_rgb_in1 = DC_Filter_gen000001_4_30_out1;
               end
               
               4'd04:                begin
                  f1_array_rgb_in1 = DC_Filter_Add2iLLu9_4_32_out1;
               end
               
               4'd05:                begin
                  f1_array_rgb_in1 = DC_Filter_Add2u9Mul2i258u2_4_18_out1;
               end
               
               4'd06:                begin
                  f1_array_rgb_in1 = DC_Filter_Add2u9Mul2i258Add2i3u2_4_21_out1;
               end
               
               4'd07:                begin
                  f1_array_rgb_in1 = DC_Filter_Add2u9Mul2i258Add2i6u2_4_22_out1;
               end
               
               4'd08:                begin
                  f1_array_rgb_in1 = DC_Filter_Add_12Ux9U_12U_4_46_out1;
               end
               
               4'd09:                begin
                  f1_array_rgb_in1 = DC_Filter_Add2u9Mul2i258Add3i1u1Mul2i3u2_4_13_out1;
               end
               
               default:                begin
                  f1_array_rgb_in1 = DC_Filter_Add2u9Mul2i258Add2u2Mul2i3u2_4_9_out1;
               end
               
            endcase

         end

         // resource: mux_8bx5i1c
         always @(o_rgb_inside_data[23:8] or i_rgb_data[7:0] or f1_array_rgb_out1 or gs_ctrl20)
          begin :drive_f1_array_rgb_DIN
            case (gs_ctrl20) 

               3'd1:                begin
                  f1_array_rgb_DIN = f1_array_rgb_out1;
               end
               
               3'd2:                begin
                  f1_array_rgb_DIN = i_rgb_data[7:0];
               end
               
               3'd3:                begin
                  f1_array_rgb_DIN = o_rgb_inside_data[15:8];
               end
               
               3'd4:                begin
                  f1_array_rgb_DIN = o_rgb_inside_data[23:16];
               end
               
               default:                begin
                  f1_array_rgb_DIN = 8'd000;
               end
               
            endcase

         end

         // resource: mux_1bx2i2c
         always @(stall1 or s_reg_63 or DC_Filter_Add_9Ux1U_9U_4_10_out1 or DC_Filter_Add_2Ux1U_2U_4_16_out1 or DC_Filter_Lti257u12_4_17_out1 or DC_Filter_Add2i1u1_4_19_out1 or DC_Filter_Lti258u12_4_20_out1 or DC_Filter_Add_2Ux1U_2U_4_26_out1 or DC_Filter_Add2i1u8_4_58_out1 or gs_ctrl21)
          begin :drive_f1_array_rgb_CE
            if (stall1) begin
               f1_array_rgb_CE = 1'b0;
            end
            else begin
               case (gs_ctrl21) 

                  3'd1:                   begin
                     f1_array_rgb_CE = 1'b1;
                  end
                  
                  3'd2:                   begin
                     case (DC_Filter_Add_9Ux1U_9U_4_10_out1) 

                        9'd257:                         begin
                           case (DC_Filter_Add2i1u1_4_19_out1) 

                              2'd2:                               begin
                                 /* state16 */
                                 case (DC_Filter_Add_2Ux1U_2U_4_16_out1) 

                                    2'd3:                                     begin
                                       if (!DC_Filter_Lti257u12_4_17_out1 && DC_Filter_Lti258u12_4_20_out1) begin
                                          f1_array_rgb_CE = 1'b1;
                                       end
                                       else begin
                                          f1_array_rgb_CE = 1'b0;
                                       end
                                    end
                                    
                                    default:                                     begin
                                       f1_array_rgb_CE = 1'b1;
                                    end
                                    
                                 endcase

                              end
                              
                              default:                               begin
                                 f1_array_rgb_CE = 1'b1;
                              end
                              
                           endcase

                        end
                        
                        default:                         begin
                           f1_array_rgb_CE = 1'b1;
                        end
                        
                     endcase

                  end
                  
                  3'd3:                   begin
                     case (DC_Filter_Add_2Ux1U_2U_4_26_out1) 

                        2'd3:                         begin
                           if (9'd257 != DC_Filter_Add_9Ux1U_9U_4_10_out1) begin
                              f1_array_rgb_CE = 1'b1;
                           end
                           else begin
                              f1_array_rgb_CE = 1'b0;
                           end
                        end
                        
                        default:                         begin
                           f1_array_rgb_CE = 1'b1;
                        end
                        
                     endcase

                  end
                  
                  3'd4:                   begin
                     if (9'd256 == DC_Filter_Add2i1u8_4_58_out1 && 12'd0000 != s_reg_63) begin
                        f1_array_rgb_CE = 1'b1;
                     end
                     else begin
                        f1_array_rgb_CE = 1'b0;
                     end
                  end
                  
                  default:                   begin
                     f1_array_rgb_CE = 1'b0;
                  end
                  
               endcase

            end
         end

         // resource: mux_1bx2i2c
         always @(stall1 or DC_Filter_Add_9Ux1U_9U_4_10_out1 or DC_Filter_Add_2Ux1U_2U_4_16_out1 or DC_Filter_Lti257u12_4_17_out1 or DC_Filter_Add2i1u1_4_19_out1 or DC_Filter_Lti258u12_4_20_out1 or DC_Filter_Add_2Ux1U_2U_4_26_out1 or gs_ctrl22)
          begin :drive_f1_array_rgb_RW
            if (stall1) begin
               f1_array_rgb_RW = 1'b0;
            end
            else begin
               case (gs_ctrl22) 

                  2'd1:                   begin
                     f1_array_rgb_RW = 1'b1;
                  end
                  
                  2'd2:                   begin
                     case (DC_Filter_Add_9Ux1U_9U_4_10_out1) 

                        9'd257:                         begin
                           case (DC_Filter_Add2i1u1_4_19_out1) 

                              2'd2:                               begin
                                 /* state16 */
                                 case (DC_Filter_Add_2Ux1U_2U_4_16_out1) 

                                    2'd3:                                     begin
                                       if (!DC_Filter_Lti257u12_4_17_out1 && DC_Filter_Lti258u12_4_20_out1) begin
                                          f1_array_rgb_RW = 1'b1;
                                       end
                                       else begin
                                          f1_array_rgb_RW = 1'b0;
                                       end
                                    end
                                    
                                    default:                                     begin
                                       f1_array_rgb_RW = 1'b0;
                                    end
                                    
                                 endcase

                              end
                              
                              default:                               begin
                                 f1_array_rgb_RW = 1'b0;
                              end
                              
                           endcase

                        end
                        
                        default:                         begin
                           f1_array_rgb_RW = 1'b0;
                        end
                        
                     endcase

                  end
                  
                  2'd3:                   begin
                     case (DC_Filter_Add_2Ux1U_2U_4_26_out1) 

                        2'd3:                         begin
                           if (9'd257 != DC_Filter_Add_9Ux1U_9U_4_10_out1) begin
                              f1_array_rgb_RW = 1'b1;
                           end
                           else begin
                              f1_array_rgb_RW = 1'b0;
                           end
                        end
                        
                        default:                         begin
                           f1_array_rgb_RW = 1'b1;
                        end
                        
                     endcase

                  end
                  
                  default:                   begin
                     f1_array_rgb_RW = 1'b0;
                  end
                  
               endcase

            end
         end

         // resource: DC_Filter_Add_2Ux1U_2U_4  instance: DC_Filter_Add_2Ux1U_2U_4_11
         assign DC_Filter_Add_2Ux1U_2U_4_11_out1 = s_reg_61 + 2'd1;

         // resource: DC_Filter_Add_2Ux1U_2U_4  instance: DC_Filter_Add_2Ux1U_2U_4_12
         assign DC_Filter_Add_2Ux1U_2U_4_12_out1 = s_reg_62 + 2'd1;

         // resource: mux_2bx3i1c
         always @(s_reg_61 or DC_Filter_Add_9Ux1U_9U_4_10_out1 or DC_Filter_Add_2Ux1U_2U_4_16_out1 or DC_Filter_Add2i1u1_4_19_out1 or gs_ctrl23)
          begin :drive_DC_Filter_Add2u9Mul2i258Add3i1u1Mul2i3u2_4_13_in3
            if (gs_ctrl23) begin
               DC_Filter_Add2u9Mul2i258Add3i1u1Mul2i3u2_4_13_in3 = 2'd0;
            end
            else begin
               case (DC_Filter_Add_9Ux1U_9U_4_10_out1) 

                  9'd257:                   begin
                     case (DC_Filter_Add2i1u1_4_19_out1) 

                        2'd2:                         begin
                           DC_Filter_Add2u9Mul2i258Add3i1u1Mul2i3u2_4_13_in3 = DC_Filter_Add_2Ux1U_2U_4_16_out1;
                        end
                        
                        default:                         begin
                           DC_Filter_Add2u9Mul2i258Add3i1u1Mul2i3u2_4_13_in3 = s_reg_61;
                        end
                        
                     endcase

                  end
                  
                  default:                   begin
                     DC_Filter_Add2u9Mul2i258Add3i1u1Mul2i3u2_4_13_in3 = s_reg_61;
                  end
                  
               endcase

            end
         end

         // resource: mux_1bx3i1c
         always @(s_reg_62[0] or DC_Filter_Add_9Ux1U_9U_4_10_out1 or DC_Filter_Add2i1u1_4_19_out1 or gs_ctrl23)
          begin :drive_DC_Filter_Add2u9Mul2i258Add3i1u1Mul2i3u2_4_13_in2
            if (gs_ctrl23) begin
               DC_Filter_Add2u9Mul2i258Add3i1u1Mul2i3u2_4_13_in2 = 1'b0;
            end
            else begin
               case (DC_Filter_Add_9Ux1U_9U_4_10_out1) 

                  9'd257:                   begin
                     case (DC_Filter_Add2i1u1_4_19_out1) 

                        2'd2:                         begin
                           DC_Filter_Add2u9Mul2i258Add3i1u1Mul2i3u2_4_13_in2 = 1'b0;
                        end
                        
                        default:                         begin
                           DC_Filter_Add2u9Mul2i258Add3i1u1Mul2i3u2_4_13_in2 = DC_Filter_Add2i1u1_4_19_out1[0];
                        end
                        
                     endcase

                  end
                  
                  default:                   begin
                     DC_Filter_Add2u9Mul2i258Add3i1u1Mul2i3u2_4_13_in2 = s_reg_62[0];
                  end
                  
               endcase

            end
         end

         // resource: mux_9bx2i1c
         always @(DC_Filter_Add_9Ux1U_9U_4_10_out1 or gs_ctrl23)
          begin :drive_DC_Filter_Add2u9Mul2i258Add3i1u1Mul2i3u2_4_13_in1
            if (gs_ctrl23) begin
               DC_Filter_Add2u9Mul2i258Add3i1u1Mul2i3u2_4_13_in1 = 9'd001;
            end
            else begin
               case (DC_Filter_Add_9Ux1U_9U_4_10_out1) 

                  9'd257:                   begin
                     DC_Filter_Add2u9Mul2i258Add3i1u1Mul2i3u2_4_13_in1 = 9'd001;
                  end
                  
                  default:                   begin
                     DC_Filter_Add2u9Mul2i258Add3i1u1Mul2i3u2_4_13_in1 = DC_Filter_Add_9Ux1U_9U_4_10_out1;
                  end
                  
               endcase

            end
         end

         // resource: DC_Filter_Add2u9Mul2i258Add3i1u1Mul2i3u2_4  instance: DC_Filter_Add2u9Mul2i258Add3i1u1Mul2i3u2_4_13
         assign DC_Filter_Add2u9Mul2i258Add3i1u1Mul2i3u2_4_13_out1 = ({10'b0000000000, DC_Filter_Add2u9Mul2i258Add3i1u1Mul2i3u2_4_13_in3}*12'd0003 + ({11'b00000000000, DC_Filter_Add2u9Mul2i258Add3i1u1Mul2i3u2_4_13_in2} + 12'd0001))*12'd0258 + {3'b000, DC_Filter_Add2u9Mul2i258Add3i1u1Mul2i3u2_4_13_in1};

         // resource: DC_Filter_Add_2Ux1U_2U_4  instance: DC_Filter_Add_2Ux1U_2U_4_16
         assign DC_Filter_Add_2Ux1U_2U_4_16_out1 = s_reg_61 + 2'd1;

         // resource: DC_Filter_Lti257u12_4  instance: DC_Filter_Lti257u12_4_17
         assign DC_Filter_Lti257u12_4_17_out1 = s_reg_63 < 12'd0257;

         // resource: DC_Filter_Add2u9Mul2i258u2_4  instance: DC_Filter_Add2u9Mul2i258u2_4_18
         assign DC_Filter_Add2u9Mul2i258u2_4_18_out1 = {10'b0000000000, s_reg_66}*12'd0258 + {3'b000, s_reg_64};

         // resource: DC_Filter_Add2i1u1_4  instance: DC_Filter_Add2i1u1_4_19
         assign DC_Filter_Add2i1u1_4_19_out1 = {1'b0, s_reg_62[0]} + 2'd1;

         // resource: DC_Filter_Lti258u12_4  instance: DC_Filter_Lti258u12_4_20
         assign DC_Filter_Lti258u12_4_20_out1 = s_reg_63 < 12'd0258;

         // resource: DC_Filter_Add2u9Mul2i258Add2i3u2_4  instance: DC_Filter_Add2u9Mul2i258Add2i3u2_4_21
         assign DC_Filter_Add2u9Mul2i258Add2i3u2_4_21_out1 = ({10'b0000000000, s_reg_66} + 12'd0003)*12'd0258 + {3'b000, s_reg_64};

         // resource: DC_Filter_Add2u9Mul2i258Add2i6u2_4  instance: DC_Filter_Add2u9Mul2i258Add2i6u2_4_22
         assign DC_Filter_Add2u9Mul2i258Add2i6u2_4_22_out1 = ({10'b0000000000, s_reg_66} + 12'd0006)*12'd0258 + {3'b000, s_reg_64};

         // resource: DC_Filter_Add_2Ux1U_2U_4  instance: DC_Filter_Add_2Ux1U_2U_4_25
         assign DC_Filter_Add_2Ux1U_2U_4_25_out1 = s_reg_66 + 2'd1;

         // resource: DC_Filter_Add_2Ux1U_2U_4  instance: DC_Filter_Add_2Ux1U_2U_4_26
         assign DC_Filter_Add_2Ux1U_2U_4_26_out1 = s_reg_66 + 2'd1;

         // resource: DC_Filter_Add2i1u12_4  instance: DC_Filter_Add2i1u12_4_33
         assign DC_Filter_Add2i1u12_4_33_out1 = s_reg_63 + 12'd0001;

         // resource: DC_Filter_gen000002_4  instance: DC_Filter_gen000002_4_28
         assign DC_Filter_gen000002_4_28_out1 = {2'b00, s_reg_64} + 11'd0516;

         // resource: DC_Filter_gen000001_4  instance: DC_Filter_gen000001_4_30
         assign DC_Filter_gen000001_4_30_out1 = {3'b000, s_reg_64} + 12'd1290;

         // resource: DC_Filter_Add2iLLu9_4  instance: DC_Filter_Add2iLLu9_4_32
         assign DC_Filter_Add2iLLu9_4_32_out1 = {3'b000, s_reg_64} + 12'd2064;

         // resource: mux_2bx2i1c
         always @(s_reg_61 or gs_ctrl26)
          begin :drive_DC_Filter_Add_2Ux1U_2U_4_34_in2
            if (gs_ctrl26) begin
               DC_Filter_Add_2Ux1U_2U_4_34_in2 = s_reg_61;
            end
            else begin
               DC_Filter_Add_2Ux1U_2U_4_34_in2 = 2'd0;
            end
         end

         // resource: DC_Filter_Add_2Ux1U_2U_4  instance: DC_Filter_Add_2Ux1U_2U_4_34
         assign DC_Filter_Add_2Ux1U_2U_4_34_out1 = DC_Filter_Add_2Ux1U_2U_4_34_in2 + 2'd1;

         // resource: DC_Filter_Eqi2u2_4  instance: DC_Filter_Eqi2u2_4_35
         assign DC_Filter_Eqi2u2_4_35_out1 = DC_Filter_Add_2Ux1U_2U_4_34_in2 == 2'd2;

         // resource: DC_Filter_Eqi1u2_4  instance: DC_Filter_Eqi1u2_4_36
         assign DC_Filter_Eqi1u2_4_36_out1 = DC_Filter_Add_2Ux1U_2U_4_34_in2 == 2'd1;

         // resource: DC_Filter_OrReduction_2U_1U_4  instance: DC_Filter_OrReduction_2U_1U_4_37
         assign DC_Filter_OrReduction_2U_1U_4_37_out1 = (|DC_Filter_Add_2Ux1U_2U_4_34_in2);

         // resource: DC_Filter_N_Mux_12_2_38_4
         always @(s_reg_58 or DC_Filter_Eqi2u2_4_35_out1)
          begin :DC_Filter_N_Mux_12_2_38_4_38
            if (DC_Filter_Eqi2u2_4_35_out1) begin
               DC_Filter_N_Mux_12_2_38_4_38_out1 = 12'd0000;
            end
            else begin
               DC_Filter_N_Mux_12_2_38_4_38_out1 = s_reg_58;
            end
         end

         // resource: DC_Filter_N_Mux_12_2_38_4
         always @(s_reg_59 or DC_Filter_Eqi1u2_4_36_out1)
          begin :DC_Filter_N_Mux_12_2_38_4_39
            if (DC_Filter_Eqi1u2_4_36_out1) begin
               DC_Filter_N_Mux_12_2_38_4_39_out1 = 12'd0000;
            end
            else begin
               DC_Filter_N_Mux_12_2_38_4_39_out1 = s_reg_59;
            end
         end

         // resource: DC_Filter_N_Mux_12_2_39_4
         always @(s_reg_60 or DC_Filter_OrReduction_2U_1U_4_37_out1)
          begin :DC_Filter_N_Mux_12_2_39_4_40
            if (DC_Filter_OrReduction_2U_1U_4_37_out1) begin
               DC_Filter_N_Mux_12_2_39_4_40_out1 = s_reg_60;
            end
            else begin
               DC_Filter_N_Mux_12_2_39_4_40_out1 = 12'd0000;
            end
         end

         // resource: mux_2bx3i1c
         always @(s_reg_62 or DC_Filter_Add_2Ux1U_2U_4_57_out1 or gs_ctrl30)
          begin :drive_DC_Filter_Add2u2Mul2i3u2_4_41_in2
            case (gs_ctrl30) 

               2'd1:                begin
                  case (DC_Filter_Add_2Ux1U_2U_4_57_out1) 

                     2'd3:                      begin
                        DC_Filter_Add2u2Mul2i3u2_4_41_in2 = 2'd0;
                     end
                     
                     default:                      begin
                        DC_Filter_Add2u2Mul2i3u2_4_41_in2 = DC_Filter_Add_2Ux1U_2U_4_57_out1;
                     end
                     
                  endcase

               end
               
               2'd2:                begin
                  DC_Filter_Add2u2Mul2i3u2_4_41_in2 = s_reg_62;
               end
               
               default:                begin
                  DC_Filter_Add2u2Mul2i3u2_4_41_in2 = 2'd0;
               end
               
            endcase

         end

         // resource: mux_2bx4i1c
         always @(s_reg_61 or s_reg_66 or DC_Filter_Add_2Ux1U_2U_4_56_out1 or DC_Filter_Add_2Ux1U_2U_4_57_out1 or gs_ctrl31)
          begin :drive_DC_Filter_Add2u2Mul2i3u2_4_41_in1
            case (gs_ctrl31) 

               2'd1:                begin
                  DC_Filter_Add2u2Mul2i3u2_4_41_in1 = s_reg_66;
               end
               
               2'd2:                begin
                  DC_Filter_Add2u2Mul2i3u2_4_41_in1 = s_reg_61;
               end
               
               2'd3:                begin
                  case (DC_Filter_Add_2Ux1U_2U_4_57_out1) 

                     2'd3:                      begin
                        DC_Filter_Add2u2Mul2i3u2_4_41_in1 = DC_Filter_Add_2Ux1U_2U_4_56_out1;
                     end
                     
                     default:                      begin
                        DC_Filter_Add2u2Mul2i3u2_4_41_in1 = s_reg_66;
                     end
                     
                  endcase

               end
               
               default:                begin
                  DC_Filter_Add2u2Mul2i3u2_4_41_in1 = 2'd0;
               end
               
            endcase

         end

         // resource: DC_Filter_Add2u2Mul2i3u2_4  instance: DC_Filter_Add2u2Mul2i3u2_4_41
         assign DC_Filter_Add2u2Mul2i3u2_4_41_out1 = {2'b00, DC_Filter_Add2u2Mul2i3u2_4_41_in2}*4'd03 + {2'b00, DC_Filter_Add2u2Mul2i3u2_4_41_in1};

         // instance: drive_mask1_in1
         assign mask1_in1 = DC_Filter_Add2u2Mul2i3u2_4_41_out1;

         // resource: DC_Filter_Add_8Ux2U_9U_4  instance: DC_Filter_Add_8Ux2U_9U_4_42
         assign DC_Filter_Add_8Ux2U_9U_4_42_out1 = {1'b0, s_reg_64[7:0]} + {7'b0000000, s_reg_66};

         // resource: DC_Filter_Eqi2u2_4  instance: DC_Filter_Eqi2u2_4_44
         assign DC_Filter_Eqi2u2_4_44_out1 = s_reg_62 == 2'd2;

         // resource: DC_Filter_Mul_12U_3_4  instance: DC_Filter_Mul_12U_3_4_45
         assign DC_Filter_Mul_12U_3_4_45_out1 = {8'b00000000, s_reg_69}*12'd0258;

         // resource: DC_Filter_Add_12Ux9U_12U_4  instance: DC_Filter_Add_12Ux9U_12U_4_46
         assign DC_Filter_Add_12Ux9U_12U_4_46_out1 = DC_Filter_Mul_12U_3_4_45_out1 + {3'b000, s_reg_68};

         // resource: DC_Filter_OrReduction_2U_1U_4  instance: DC_Filter_OrReduction_2U_1U_4_47
         assign DC_Filter_OrReduction_2U_1U_4_47_out1 = (|s_reg_62);

         // resource: DC_Filter_N_Mux_12_3_40_4
         always @(s_reg_58 or s_reg_59 or s_reg_60 or s_reg_62)
          begin :DC_Filter_N_Mux_12_3_40_4_48
            case (s_reg_62) 

               2'd0:                begin
                  DC_Filter_N_Mux_12_3_40_4_48_out1 = s_reg_60;
               end
               
               2'd1:                begin
                  DC_Filter_N_Mux_12_3_40_4_48_out1 = s_reg_59;
               end
               
               default:                begin
                  DC_Filter_N_Mux_12_3_40_4_48_out1 = s_reg_58;
               end
               
            endcase

         end

         // resource: DC_Filter_Add_2Ux1U_2U_4  instance: DC_Filter_Add_2Ux1U_2U_4_49
         assign DC_Filter_Add_2Ux1U_2U_4_49_out1 = s_reg_62 + 2'd1;

         // resource: DC_Filter_Eqi1u2_4  instance: DC_Filter_Eqi1u2_4_50
         assign DC_Filter_Eqi1u2_4_50_out1 = s_reg_62 == 2'd1;

         // resource: DC_Filter_Mul_8Ux4U_12U_4  instance: DC_Filter_Mul_8Ux4U_12U_4_51
         assign DC_Filter_Mul_8Ux4U_12U_4_51_out1 = {4'b0000, f1_array_rgb_out1}*{8'b00000000, s_reg_67};

         // resource: DC_Filter_Add_12Ux12U_12U_4  instance: DC_Filter_Add_12Ux12U_12U_4_52
         assign DC_Filter_Add_12Ux12U_12U_4_52_out1 = DC_Filter_N_Mux_12_3_40_4_48_out1 + DC_Filter_Mul_8Ux4U_12U_4_51_out1;

         // resource: DC_Filter_N_Mux_12_2_41_4
         always @(s_reg_58 or s_reg_65 or DC_Filter_Add_12Ux12U_12U_4_52_out1)
          begin :DC_Filter_N_Mux_12_2_41_4_53
            if (s_reg_65) begin
               DC_Filter_N_Mux_12_2_41_4_53_out1 = DC_Filter_Add_12Ux12U_12U_4_52_out1;
            end
            else begin
               DC_Filter_N_Mux_12_2_41_4_53_out1 = s_reg_58;
            end
         end

         // resource: DC_Filter_N_Mux_12_2_41_4
         always @(s_reg_59 or DC_Filter_Eqi1u2_4_50_out1 or DC_Filter_Add_12Ux12U_12U_4_52_out1)
          begin :DC_Filter_N_Mux_12_2_41_4_54
            if (DC_Filter_Eqi1u2_4_50_out1) begin
               DC_Filter_N_Mux_12_2_41_4_54_out1 = DC_Filter_Add_12Ux12U_12U_4_52_out1;
            end
            else begin
               DC_Filter_N_Mux_12_2_41_4_54_out1 = s_reg_59;
            end
         end

         // resource: DC_Filter_N_Mux_12_2_41_4
         always @(s_reg_60 or DC_Filter_OrReduction_2U_1U_4_47_out1 or DC_Filter_Add_12Ux12U_12U_4_52_out1)
          begin :DC_Filter_N_Mux_12_2_41_4_55
            if (DC_Filter_OrReduction_2U_1U_4_47_out1) begin
               DC_Filter_N_Mux_12_2_41_4_55_out1 = s_reg_60;
            end
            else begin
               DC_Filter_N_Mux_12_2_41_4_55_out1 = DC_Filter_Add_12Ux12U_12U_4_52_out1;
            end
         end

         // resource: DC_Filter_Add_2Ux1U_2U_4  instance: DC_Filter_Add_2Ux1U_2U_4_56
         assign DC_Filter_Add_2Ux1U_2U_4_56_out1 = s_reg_66 + 2'd1;

         // resource: DC_Filter_Add_2Ux1U_2U_4  instance: DC_Filter_Add_2Ux1U_2U_4_57
         assign DC_Filter_Add_2Ux1U_2U_4_57_out1 = s_reg_61 + 2'd1;

         // resource: DC_Filter_Add2i1u8_4  instance: DC_Filter_Add2i1u8_4_58
         assign DC_Filter_Add2i1u8_4_58_out1 = {1'b0, s_reg_64[7:0]} + 9'd001;

         // resource: regr_en_sc_5
         always @(posedge i_clk)
          begin :drive_global_state1
            if (i_rst == 1'b0) begin
               global_state1 <= 5'd00;
            end
            else begin
               case (stall1) 

                  1'b1:                   begin
                  end
                  
                  1'b0:                   begin
                     global_state1 <= global_state1_next;
                  end
                  
               endcase

            end
         end

         // resource: mux_5bx10i9c
         always @(s_reg_63 or s_reg_64 or DC_Filter_Add_9Ux1U_9U_4_10_out1 or DC_Filter_Add_2Ux1U_2U_4_11_out1 or DC_Filter_Add_2Ux1U_2U_4_12_out1 or DC_Filter_Add_2Ux1U_2U_4_16_out1 or DC_Filter_Lti257u12_4_17_out1 or DC_Filter_Add2i1u1_4_19_out1 or DC_Filter_Lti258u12_4_20_out1 or DC_Filter_Add_2Ux1U_2U_4_25_out1 or DC_Filter_Add_2Ux1U_2U_4_26_out1 or DC_Filter_Add_2Ux1U_2U_4_34_out1 or DC_Filter_Add_2Ux1U_2U_4_49_out1 or DC_Filter_Add_2Ux1U_2U_4_56_out1 or DC_Filter_Add_2Ux1U_2U_4_57_out1 or 
DC_Filter_Add2i1u8_4_58_out1
          or global_state1)
          begin :drive_global_state1_next
            case (global_state1) 

               5'd01:                begin
                  case (DC_Filter_Add_9Ux1U_9U_4_10_out1) 

                     9'd258:                      begin
                        case (DC_Filter_Add_2Ux1U_2U_4_12_out1) 

                           2'd3:                            begin
                              /* state6 */
                              case (DC_Filter_Add_2Ux1U_2U_4_11_out1) 

                                 2'd3:                                  begin
                                    global_state1_next = 5'd09;
                                 end
                                 
                                 default:                                  begin
                                    global_state1_next = 5'd00;
                                 end
                                 
                              endcase

                           end
                           
                           default:                            begin
                              global_state1_next = 5'd00;
                           end
                           
                        endcase

                     end
                     
                     default:                      begin
                        global_state1_next = 5'd00;
                     end
                     
                  endcase

               end
               
               5'd03:                begin
                  case (DC_Filter_Add_9Ux1U_9U_4_10_out1) 

                     9'd257:                      begin
                        case (DC_Filter_Add2i1u1_4_19_out1) 

                           2'd2:                            begin
                              /* state16 */
                              case (DC_Filter_Add_2Ux1U_2U_4_16_out1) 

                                 2'd3:                                  begin
                                    if (DC_Filter_Lti257u12_4_17_out1) begin
                                       global_state1_next = 5'd05;
                                    end
                                    else begin
                                       if (DC_Filter_Lti258u12_4_20_out1) begin
                                          global_state1_next = global_state1 + 5'd01;
                                       end
                                       else begin
                                          case (DC_Filter_Add_2Ux1U_2U_4_34_out1) 

                                             2'd3:                                              begin
                                                global_state1_next = 5'd14;
                                             end
                                             
                                             default:                                              begin
                                                global_state1_next = 5'd13;
                                             end
                                             
                                          endcase

                                       end
                                    end
                                 end
                                 
                                 default:                                  begin
                                    global_state1_next = 5'd02;
                                 end
                                 
                              endcase

                           end
                           
                           default:                            begin
                              global_state1_next = 5'd02;
                           end
                           
                        endcase

                     end
                     
                     default:                      begin
                        global_state1_next = 5'd02;
                     end
                     
                  endcase

               end
               
               5'd04:                begin
                  case (DC_Filter_Add_2Ux1U_2U_4_26_out1) 

                     2'd3:                      begin
                        case (DC_Filter_Add_9Ux1U_9U_4_10_out1) 

                           9'd257:                            begin
                              case (DC_Filter_Add_2Ux1U_2U_4_34_out1) 

                                 2'd3:                                  begin
                                    global_state1_next = 5'd14;
                                 end
                                 
                                 default:                                  begin
                                    global_state1_next = 5'd13;
                                 end
                                 
                              endcase

                           end
                           
                           default:                            begin
                              global_state1_next = 5'd04;
                           end
                           
                        endcase

                     end
                     
                     default:                      begin
                        global_state1_next = 5'd04;
                     end
                     
                  endcase

               end
               
               5'd08:                begin
                  case (s_reg_64) 

                     9'd257:                      begin
                        case (DC_Filter_Add_2Ux1U_2U_4_34_out1) 

                           2'd3:                            begin
                              global_state1_next = 5'd14;
                           end
                           
                           default:                            begin
                              global_state1_next = 5'd13;
                           end
                           
                        endcase

                     end
                     
                     default:                      begin
                        global_state1_next = 5'd05;
                     end
                     
                  endcase

               end
               
               5'd12:                begin
                  case (DC_Filter_Add_9Ux1U_9U_4_10_out1) 

                     9'd257:                      begin
                        case (DC_Filter_Add_2Ux1U_2U_4_25_out1) 

                           2'd3:                            begin
                              case (DC_Filter_Add_2Ux1U_2U_4_34_out1) 

                                 2'd3:                                  begin
                                    global_state1_next = 5'd14;
                                 end
                                 
                                 default:                                  begin
                                    global_state1_next = global_state1 + 5'd01;
                                 end
                                 
                              endcase

                           end
                           
                           default:                            begin
                              global_state1_next = 5'd09;
                           end
                           
                        endcase

                     end
                     
                     default:                      begin
                        global_state1_next = 5'd09;
                     end
                     
                  endcase

               end
               
               5'd13:                begin
                  case (DC_Filter_Add_2Ux1U_2U_4_34_out1) 

                     2'd3:                      begin
                        global_state1_next = global_state1 + 5'd01;
                     end
                     
                     default:                      begin
                        global_state1_next = 5'd13;
                     end
                     
                  endcase

               end
               
               5'd14, 5'd17:                begin
                  global_state1_next = 5'd15;
               end
               
               5'd16:                begin
                  case (DC_Filter_Add_2Ux1U_2U_4_49_out1) 

                     2'd3:                      begin
                        case (DC_Filter_Add_2Ux1U_2U_4_57_out1) 

                           2'd3:                            begin
                              /* state68 */
                              case (DC_Filter_Add_2Ux1U_2U_4_56_out1) 

                                 2'd3:                                  begin
                                    global_state1_next = 5'd18;
                                 end
                                 
                                 default:                                  begin
                                    global_state1_next = 5'd14;
                                 end
                                 
                              endcase

                           end
                           
                           default:                            begin
                              global_state1_next = 5'd14;
                           end
                           
                        endcase

                     end
                     
                     default:                      begin
                        global_state1_next = global_state1 + 5'd01;
                     end
                     
                  endcase

               end
               
               5'd18:                begin
                  /* state72 */
                  case (DC_Filter_Add2i1u8_4_58_out1) 

                     9'd256:                      begin
                        case (s_reg_63) 

                           12'd0000:                            begin
                              global_state1_next = 5'd09;
                           end
                           
                           default:                            begin
                              global_state1_next = 5'd02;
                           end
                           
                        endcase

                     end
                     
                     default:                      begin
                        case (DC_Filter_Add_2Ux1U_2U_4_34_out1) 

                           2'd3:                            begin
                              global_state1_next = 5'd14;
                           end
                           
                           default:                            begin
                              global_state1_next = 5'd13;
                           end
                           
                        endcase

                     end
                     
                  endcase

               end
               
               default:                begin
                  global_state1_next = global_state1 + 5'd01;
               end
               
            endcase

         end

         // resource: mux_2bx3i3c
         // resource: regr_en_sc_2
         always @(posedge i_clk)
          begin :drive_gs_ctrl16
            if (i_rst == 1'b0) begin
               gs_ctrl16 <= 2'd0;
            end
            else begin
               case (stall1) 

                  1'b1:                   begin
                  end
                  
                  1'b0:                   begin
                     case (global_state1_next) 

                        5'd03:                         begin
                           gs_ctrl16 <= 2'd1;
                        end
                        
                        5'd04:                         begin
                           gs_ctrl16 <= 2'd2;
                        end
                        
                        default:                         begin
                           gs_ctrl16 <= 2'd0;
                        end
                        
                     endcase

                  end
                  
               endcase

            end
         end

         // resource: mux_2bx3i3c
         // resource: regr_en_sc_2
         always @(posedge i_clk)
          begin :drive_gs_ctrl17
            if (i_rst == 1'b0) begin
               gs_ctrl17 <= 2'd0;
            end
            else begin
               case (stall1) 

                  1'b1:                   begin
                  end
                  
                  1'b0:                   begin
                     case (global_state1_next) 

                        5'd02:                         begin
                           gs_ctrl17 <= 2'd1;
                        end
                        
                        5'd03, 5'd04:                         begin
                           gs_ctrl17 <= 2'd2;
                        end
                        
                        default:                         begin
                           gs_ctrl17 <= 2'd0;
                        end
                        
                     endcase

                  end
                  
               endcase

            end
         end

         // resource: mux_4bx10i10c
         // resource: regr_en_sc_4
         always @(posedge i_clk)
          begin :drive_gs_ctrl19
            if (i_rst == 1'b0) begin
               gs_ctrl19 <= 4'd00;
            end
            else begin
               case (stall1) 

                  1'b1:                   begin
                  end
                  
                  1'b0:                   begin
                     case (global_state1_next) 

                        5'd03:                         begin
                           gs_ctrl19 <= 4'd01;
                        end
                        
                        5'd05:                         begin
                           gs_ctrl19 <= 4'd02;
                        end
                        
                        5'd06:                         begin
                           gs_ctrl19 <= 4'd03;
                        end
                        
                        5'd07:                         begin
                           gs_ctrl19 <= 4'd04;
                        end
                        
                        5'd09:                         begin
                           gs_ctrl19 <= 4'd05;
                        end
                        
                        5'd10:                         begin
                           gs_ctrl19 <= 4'd06;
                        end
                        
                        5'd11:                         begin
                           gs_ctrl19 <= 4'd07;
                        end
                        
                        5'd15:                         begin
                           gs_ctrl19 <= 4'd08;
                        end
                        
                        5'd18:                         begin
                           gs_ctrl19 <= 4'd09;
                        end
                        
                        default:                         begin
                           gs_ctrl19 <= 4'd00;
                        end
                        
                     endcase

                  end
                  
               endcase

            end
         end

         // resource: mux_3bx5i5c
         // resource: regr_en_sc_3
         always @(posedge i_clk)
          begin :drive_gs_ctrl20
            if (i_rst == 1'b0) begin
               gs_ctrl20 <= 3'd0;
            end
            else begin
               case (stall1) 

                  1'b1:                   begin
                  end
                  
                  1'b0:                   begin
                     case (global_state1_next) 

                        5'd02:                         begin
                           gs_ctrl20 <= 3'd1;
                        end
                        
                        5'd05, 5'd09:                         begin
                           gs_ctrl20 <= 3'd2;
                        end
                        
                        5'd06, 5'd10:                         begin
                           gs_ctrl20 <= 3'd3;
                        end
                        
                        5'd07, 5'd11:                         begin
                           gs_ctrl20 <= 3'd4;
                        end
                        
                        default:                         begin
                           gs_ctrl20 <= 3'd0;
                        end
                        
                     endcase

                  end
                  
               endcase

            end
         end

         // resource: mux_3bx5i5c
         // resource: regr_en_ss_sc_3
         always @(posedge i_clk)
          begin :drive_gs_ctrl21
            if (i_rst == 1'b0) begin
               gs_ctrl21 <= 3'd1;
            end
            else begin
               case (stall1) 

                  1'b1:                   begin
                  end
                  
                  1'b0:                   begin
                     case (global_state1_next) 

                        5'd00, 5'd02, 5'd05, 5'd06, 5'd07, 5'd09, 5'd10, 5'd11, 5'd15:                         begin
                           gs_ctrl21 <= 3'd1;
                        end
                        
                        5'd03:                         begin
                           gs_ctrl21 <= 3'd2;
                        end
                        
                        5'd04:                         begin
                           gs_ctrl21 <= 3'd3;
                        end
                        
                        5'd18:                         begin
                           gs_ctrl21 <= 3'd4;
                        end
                        
                        default:                         begin
                           gs_ctrl21 <= 3'd0;
                        end
                        
                     endcase

                  end
                  
               endcase

            end
         end

         // resource: mux_2bx4i4c
         // resource: regr_en_ss_sc_2
         always @(posedge i_clk)
          begin :drive_gs_ctrl22
            if (i_rst == 1'b0) begin
               gs_ctrl22 <= 2'd1;
            end
            else begin
               case (stall1) 

                  1'b1:                   begin
                  end
                  
                  1'b0:                   begin
                     case (global_state1_next) 

                        5'd00, 5'd02, 5'd05, 5'd06, 5'd07, 5'd09, 5'd10, 5'd11:                         begin
                           gs_ctrl22 <= 2'd1;
                        end
                        
                        5'd03:                         begin
                           gs_ctrl22 <= 2'd2;
                        end
                        
                        5'd04:                         begin
                           gs_ctrl22 <= 2'd3;
                        end
                        
                        default:                         begin
                           gs_ctrl22 <= 2'd0;
                        end
                        
                     endcase

                  end
                  
               endcase

            end
         end

         // resource: mux_1bx2i2c
         // resource: regr_en_sc_1
         always @(posedge i_clk)
          begin :drive_gs_ctrl23
            if (i_rst == 1'b0) begin
               gs_ctrl23 <= 1'b0;
            end
            else begin
               case (stall1) 

                  1'b1:                   begin
                  end
                  
                  1'b0:                   begin
                     case (global_state1_next) 

                        5'd18:                         begin
                           gs_ctrl23 <= 1'b1;
                        end
                        
                        default:                         begin
                           gs_ctrl23 <= 1'b0;
                        end
                        
                     endcase

                  end
                  
               endcase

            end
         end

         // resource: mux_1bx2i2c
         // resource: regr_en_sc_1
         always @(posedge i_clk)
          begin :drive_gs_ctrl26
            if (i_rst == 1'b0) begin
               gs_ctrl26 <= 1'b0;
            end
            else begin
               case (stall1) 

                  1'b1:                   begin
                  end
                  
                  1'b0:                   begin
                     case (global_state1_next) 

                        5'd13:                         begin
                           gs_ctrl26 <= 1'b1;
                        end
                        
                        default:                         begin
                           gs_ctrl26 <= 1'b0;
                        end
                        
                     endcase

                  end
                  
               endcase

            end
         end

         // resource: mux_2bx3i3c
         // resource: regr_en_sc_2
         always @(posedge i_clk)
          begin :drive_gs_ctrl30
            if (i_rst == 1'b0) begin
               gs_ctrl30 <= 2'd0;
            end
            else begin
               case (stall1) 

                  1'b1:                   begin
                  end
                  
                  1'b0:                   begin
                     case (global_state1_next) 

                        5'd16:                         begin
                           gs_ctrl30 <= 2'd1;
                        end
                        
                        5'd17:                         begin
                           gs_ctrl30 <= 2'd2;
                        end
                        
                        default:                         begin
                           gs_ctrl30 <= 2'd0;
                        end
                        
                     endcase

                  end
                  
               endcase

            end
         end

         // resource: mux_2bx4i4c
         // resource: regr_en_sc_2
         always @(posedge i_clk)
          begin :drive_gs_ctrl31
            if (i_rst == 1'b0) begin
               gs_ctrl31 <= 2'd0;
            end
            else begin
               case (stall1) 

                  1'b1:                   begin
                  end
                  
                  1'b0:                   begin
                     case (global_state1_next) 

                        5'd13:                         begin
                           gs_ctrl31 <= 2'd1;
                        end
                        
                        5'd14, 5'd17:                         begin
                           gs_ctrl31 <= 2'd2;
                        end
                        
                        5'd16:                         begin
                           gs_ctrl31 <= 2'd3;
                        end
                        
                        default:                         begin
                           gs_ctrl31 <= 2'd0;
                        end
                        
                     endcase

                  end
                  
               endcase

            end
         end

         // instance: drive_i_rgb_busy
         assign i_rgb_busy = DC_Filter_gen_busy_r_4_115_out1[2];

         // resource: DC_Filter_gen_busy_r_4  instance: DC_Filter_gen_busy_r_4_115
         assign DC_Filter_gen_busy_r_4_115_out1 = {DC_Filter_gen_busy_r_4_115_gnew_req_i0, {DC_Filter_gen_busy_r_4_115_gdiv_i1, DC_Filter_gen_busy_r_4_115_gen_busy_0_i_rgb_m_data_is_invalid_next}};

         // resource: DC_Filter_gen_busy_r_4  instance: DC_Filter_gen_busy_r_4_115
         assign DC_Filter_gen_busy_r_4_115_gen_busy_0_i_rgb_m_data_is_invalid_next = ~DC_Filter_gen_busy_r_4_115_gdiv_i1;

         // resource: DC_Filter_gen_busy_r_4  instance: DC_Filter_gen_busy_r_4_115
         assign DC_Filter_gen_busy_r_4_115_gdiv_i1 = i_rgb_vld & !DC_Filter_gen_busy_r_4_115_gnew_req_i0;

         // resource: DC_Filter_gen_busy_r_4  instance: DC_Filter_gen_busy_r_4_115
         assign DC_Filter_gen_busy_r_4_115_gnew_req_i0 = i_rgb_m_busy_req_0 & (i_rgb_m_unvalidated_req | i_rgb_vld);

         // resource: regr_ss_1
         always @(posedge i_clk)
          begin :drive_i_rgb_m_unvalidated_req
            if (i_rst == 1'b0) begin
               i_rgb_m_unvalidated_req <= 1'd1;
            end
            else begin
               i_rgb_m_unvalidated_req <= DC_Filter_N_Muxb_1_2_33_4_7_out1;
            end
         end

         // resource: DC_Filter_N_Muxb_1_2_33_4
         always @(i_rgb_vld or i_rgb_m_busy_req_0 or i_rgb_m_unvalidated_req)
          begin :DC_Filter_N_Muxb_1_2_33_4_7
            if (i_rgb_m_busy_req_0) begin
               DC_Filter_N_Muxb_1_2_33_4_7_out1 = i_rgb_m_unvalidated_req;
            end
            else begin
               DC_Filter_N_Muxb_1_2_33_4_7_out1 = i_rgb_vld;
            end
         end

         // instance: drive_o_result_vld
         assign o_result_vld = DC_Filter_Or_1Ux1U_1U_4_2_out1;

         // resource: DC_Filter_Or_1Ux1U_1U_4  instance: DC_Filter_Or_1Ux1U_1U_4_2
         assign DC_Filter_Or_1Ux1U_1U_4_2_out1 = o_result_m_unacked_req | DC_Filter_Xor_1Ux1U_1U_1_1_out1;

         // resource: regr_sc_1
         always @(posedge i_clk)
          begin :drive_o_result_m_unacked_req
            if (i_rst == 1'b0) begin
               o_result_m_unacked_req <= 1'd0;
            end
            else begin
               o_result_m_unacked_req <= DC_Filter_And_1Ux1U_1U_4_61_out1;
            end
         end

         // resource: DC_Filter_And_1Ux1U_1U_4  instance: DC_Filter_And_1Ux1U_1U_4_61
         assign DC_Filter_And_1Ux1U_1U_4_61_out1 = o_result_busy & o_result_vld;

         // resource: DC_Filter_Xor_1Ux1U_1U_1  instance: DC_Filter_Xor_1Ux1U_1U_1_1
         assign DC_Filter_Xor_1Ux1U_1U_1_1_out1 = o_result_m_req_m_trig_req ^ o_result_m_req_m_prev_trig_req;

         // resource: regr_sc_1
         always @(posedge i_clk)
          begin :drive_o_result_m_req_m_prev_trig_req
            if (i_rst == 1'b0) begin
               o_result_m_req_m_prev_trig_req <= 1'd0;
            end
            else begin
               o_result_m_req_m_prev_trig_req <= o_result_m_req_m_trig_req;
            end
         end

         // resource: DC_Filter_Not_1U_1U_1  instance: DC_Filter_Not_1U_1U_1_3
         assign DC_Filter_Not_1U_1U_1_3_out1 = !o_result_m_req_m_trig_req;

         // instance: drive_i_rgb_inside_busy
         assign i_rgb_inside_busy = DC_Filter_gen_busy_r_4_116_out1[2];

         // resource: DC_Filter_gen_busy_r_4  instance: DC_Filter_gen_busy_r_4_116
         assign DC_Filter_gen_busy_r_4_116_out1 = {DC_Filter_gen_busy_r_4_116_gnew_req_i0, {DC_Filter_gen_busy_r_4_116_gdiv_i1, DC_Filter_gen_busy_r_4_116_gen_busy_0_i_rgb_m_data_is_invalid_next}};

         // resource: DC_Filter_gen_busy_r_4  instance: DC_Filter_gen_busy_r_4_116
         assign DC_Filter_gen_busy_r_4_116_gen_busy_0_i_rgb_m_data_is_invalid_next = ~DC_Filter_gen_busy_r_4_116_gdiv_i1;

         // resource: DC_Filter_gen_busy_r_4  instance: DC_Filter_gen_busy_r_4_116
         assign DC_Filter_gen_busy_r_4_116_gdiv_i1 = i_rgb_inside_vld & !DC_Filter_gen_busy_r_4_116_gnew_req_i0;

         // resource: DC_Filter_gen_busy_r_4  instance: DC_Filter_gen_busy_r_4_116
         assign DC_Filter_gen_busy_r_4_116_gnew_req_i0 = i_rgb_inside_m_busy_req_0 & (i_rgb_inside_m_unvalidated_req | i_rgb_inside_vld);

         // resource: regr_ss_1
         always @(posedge i_clk)
          begin :drive_i_rgb_inside_m_unvalidated_req
            if (i_rst == 1'b0) begin
               i_rgb_inside_m_unvalidated_req <= 1'd1;
            end
            else begin
               i_rgb_inside_m_unvalidated_req <= DC_Filter_N_Muxb_1_2_33_4_62_out1;
            end
         end

         // resource: DC_Filter_N_Muxb_1_2_33_4
         always @(i_rgb_inside_vld or i_rgb_inside_m_busy_req_0 or i_rgb_inside_m_unvalidated_req)
          begin :DC_Filter_N_Muxb_1_2_33_4_62
            if (i_rgb_inside_m_busy_req_0) begin
               DC_Filter_N_Muxb_1_2_33_4_62_out1 = i_rgb_inside_m_unvalidated_req;
            end
            else begin
               DC_Filter_N_Muxb_1_2_33_4_62_out1 = i_rgb_inside_vld;
            end
         end

         // instance: drive_o_rgb_inside_vld
         assign o_rgb_inside_vld = DC_Filter_Or_1Ux1U_1U_4_5_out1;

         // resource: DC_Filter_Or_1Ux1U_1U_4  instance: DC_Filter_Or_1Ux1U_1U_4_5
         assign DC_Filter_Or_1Ux1U_1U_4_5_out1 = o_rgb_inside_m_unacked_req | DC_Filter_Xor_1Ux1U_1U_1_4_out1;

         // resource: regr_sc_1
         always @(posedge i_clk)
          begin :drive_o_rgb_inside_m_unacked_req
            if (i_rst == 1'b0) begin
               o_rgb_inside_m_unacked_req <= 1'd0;
            end
            else begin
               o_rgb_inside_m_unacked_req <= DC_Filter_And_1Ux1U_1U_4_59_out1;
            end
         end

         // resource: DC_Filter_And_1Ux1U_1U_4  instance: DC_Filter_And_1Ux1U_1U_4_59
         assign DC_Filter_And_1Ux1U_1U_4_59_out1 = o_rgb_inside_busy & o_rgb_inside_vld;

         // resource: DC_Filter_Xor_1Ux1U_1U_1  instance: DC_Filter_Xor_1Ux1U_1U_1_4
         assign DC_Filter_Xor_1Ux1U_1U_1_4_out1 = o_rgb_inside_m_req_m_trig_req ^ o_rgb_inside_m_req_m_prev_trig_req;

         // resource: regr_sc_1
         always @(posedge i_clk)
          begin :drive_o_rgb_inside_m_req_m_prev_trig_req
            if (i_rst == 1'b0) begin
               o_rgb_inside_m_req_m_prev_trig_req <= 1'd0;
            end
            else begin
               o_rgb_inside_m_req_m_prev_trig_req <= o_rgb_inside_m_req_m_trig_req;
            end
         end

         // resource: DC_Filter_Not_1U_1U_1  instance: DC_Filter_Not_1U_1U_1_6
         assign DC_Filter_Not_1U_1U_1_6_out1 = !o_rgb_inside_m_req_m_trig_req;


endmodule

