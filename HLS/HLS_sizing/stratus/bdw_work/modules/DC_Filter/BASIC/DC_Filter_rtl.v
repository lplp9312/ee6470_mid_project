// Generated by stratus_hls 19.12-s100  (91710.131054)
// Tue May  4 16:17:31 2021
// from ../DC_Filter.cpp

`timescale 1ps / 1ps

      
module DC_Filter(i_clk, i_rst, i_rgb_busy, i_rgb_vld, i_rgb_data, o_result_busy, o_result_vld, o_result_data, i_rgb_inside_busy, i_rgb_inside_vld, i_rgb_inside_data, o_rgb_inside_busy, o_rgb_inside_vld, o_rgb_inside_data);

      input i_clk;
      input i_rst;
      input i_rgb_vld;
      input [23:0] i_rgb_data;
      input o_result_busy;
      input i_rgb_inside_vld;
      input [23:0] i_rgb_inside_data;
      input o_rgb_inside_busy;
      output i_rgb_busy;
      output o_result_vld;
      output [23:0] o_result_data;
      reg [23:0] o_result_data;
      output i_rgb_inside_busy;
      output o_rgb_inside_vld;
      output [23:0] o_rgb_inside_data;
      reg [23:0] o_rgb_inside_data;
      reg o_rgb_inside_m_req_m_prev_trig_req;
      reg o_rgb_inside_m_unacked_req;
      wire DC_Filter_Xor_1Ux1U_1U_1_4_out1;
      wire DC_Filter_Or_1Ux1U_1U_4_5_out1;
      reg DC_Filter_N_Muxb_1_2_4_4_82_out1;
      reg i_rgb_inside_m_unvalidated_req;
      wire DC_Filter_gen_busy_r_4_156_gnew_req_i0;
      wire DC_Filter_gen_busy_r_4_156_gdiv_i1;
      wire DC_Filter_gen_busy_r_4_156_gen_busy_0_i_rgb_m_data_is_invalid_next;
      reg o_result_m_req_m_prev_trig_req;
      reg o_result_m_unacked_req;
      wire DC_Filter_Xor_1Ux1U_1U_1_1_out1;
      wire DC_Filter_Or_1Ux1U_1U_4_2_out1;
      reg DC_Filter_N_Muxb_1_2_4_4_7_out1;
      reg i_rgb_m_unvalidated_req;
      wire DC_Filter_gen_busy_r_4_155_gnew_req_i0;
      wire DC_Filter_gen_busy_r_4_155_gdiv_i1;
      wire DC_Filter_gen_busy_r_4_155_gen_busy_0_i_rgb_m_data_is_invalid_next;
      reg[4:0] global_state1_next;
      wire DC_Filter_Equal_2Ux1U_1U_4_70_out1;
      wire DC_Filter_OrReduction_2U_1U_4_67_out1;
      wire[3:0] DC_Filter_Mul_2Ux2U_4U_4_62_out1;
      wire[3:0] DC_Filter_Add_4Ux2U_4U_4_60_out1;
      wire[3:0] DC_Filter_Mul_2Ux2U_4U_4_59_out1;
      wire DC_Filter_OrReduction_2U_1U_4_55_out1;
      wire DC_Filter_Equal_2Ux1U_1U_4_54_out1;
      reg[1:0] DC_Filter_Equal_2Ux2U_1U_4_53_in2;
      reg gs_ctrl23;
      reg[1:0] DC_Filter_Add_2Ux1U_2U_4_52_in2;
      reg gs_ctrl22;
      wire[3:0] DC_Filter_Mul_2Ux2U_4U_4_42_out1;
      wire[3:0] DC_Filter_Mul_2Ux2U_4U_4_19_out1;
      reg gs_ctrl21;
      reg gs_ctrl20;
      reg[2:0] gs_ctrl19;
      reg gs_ctrl18;
      reg[11:0] DC_Filter_Add_12Ux1U_12U_4_13_in2;
      reg[1:0] gs_ctrl17;
      reg[11:0] DC_Filter_Add_12Ux12U_12U_4_12_in1;
      reg[2:0] gs_ctrl16;
      reg[11:0] DC_Filter_Add_12Ux12U_12U_4_12_in2;
      reg[11:0] DC_Filter_N_Mux_12_3_2_4_68_out1;
      reg[2:0] gs_ctrl15;
      wire[11:0] DC_Filter_Mul_9Ux4U_12U_4_11_out1;
      reg[3:0] DC_Filter_Mul_9Ux4U_12U_4_11_in1;
      reg[1:0] gs_ctrl14;
      reg[8:0] DC_Filter_Mul_9Ux4U_12U_4_11_in2;
      reg gs_ctrl13;
      wire[3:0] DC_Filter_Mul_2Ux2U_4U_4_9_out1;
      wire[1:0] DC_Filter_Add_2Ux1U_2U_4_52_out1;
      reg[1:0] s_reg_87;
      wire[8:0] DC_Filter_Add_8Ux2U_9U_4_61_out1;
      wire[11:0] DC_Filter_Add_12Ux12U_12U_4_12_out1;
      wire DC_Filter_Equal_2Ux2U_1U_4_53_out1;
      reg s_reg_85;
      wire[3:0] DC_Filter_Add_4Ux2U_4U_4_63_out1;
      wire[3:0] DC_Filter_Add_3Ux2U_4U_4_34_out1;
      wire[2:0] DC_Filter_Add_2Ux2U_3U_4_30_out1;
      wire[3:0] DC_Filter_Add_4Ux1U_4U_4_20_out1;
      reg[3:0] s_reg_84;
      reg[1:0] s_reg_83;
      wire[3:0] DC_Filter_Add_4Ux2U_4U_4_43_out1;
      wire[3:0] DC_Filter_Add_4Ux2U_4U_4_18_out1;
      wire[3:0] DC_Filter_Add_4Ux2U_4U_4_10_out1;
      reg[3:0] s_reg_81;
      reg[1:0] s_reg_79;
      reg[11:0] DC_Filter_N_Mux_12_2_1_4_58_out1;
      reg[11:0] s_reg_78;
      reg[11:0] DC_Filter_N_Mux_12_2_0_4_57_out1;
      reg[11:0] s_reg_77;
      wire[1:0] DC_Filter_Add_2Ux1U_2U_4_46_out1;
      reg[11:0] DC_Filter_N_Mux_12_2_0_4_56_out1;
      wire DC_Filter_LessThan_12Ux9U_1U_4_37_out1;
      reg[11:0] s_reg_76;
      wire DC_Filter_And_1Ux1U_1U_4_79_out1;
      wire[2:0] DC_Filter_gen_busy_r_4_155_out1;
      wire DC_Filter_Not_1U_1U_1_6_out1;
      reg o_rgb_inside_m_req_m_trig_req;
      reg[11:0] s_reg_82;
      wire[1:0] DC_Filter_Add_2Ux1U_2U_4_41_out1;
      reg[11:0] s_reg_86;
      reg[8:0] s_reg_80;
      wire[1:0] DC_Filter_Add_1Ux1U_2U_4_17_out1;
      wire[1:0] DC_Filter_Add_2Ux1U_2U_4_28_out1;
      wire DC_Filter_LessThan_12Ux9U_1U_4_29_out1;
      wire[11:0] DC_Filter_Add_12Ux1U_12U_4_13_out1;
      wire[1:0] DC_Filter_Add_2Ux1U_2U_4_15_out1;
      wire[1:0] DC_Filter_Add_2Ux1U_2U_4_14_out1;
      reg i_rgb_m_busy_req_0;
      reg[11:0] DC_Filter_N_Mux_12_2_3_4_73_out1;
      reg[11:0] DC_Filter_N_Mux_12_2_3_4_74_out1;
      reg[11:0] DC_Filter_N_Mux_12_2_3_4_75_out1;
      wire[1:0] DC_Filter_Add_2Ux1U_2U_4_69_out1;
      wire[1:0] DC_Filter_Add_2Ux1U_2U_4_77_out1;
      wire[1:0] DC_Filter_Add_2Ux1U_2U_4_76_out1;
      reg[4:0] global_state1;
      reg stall1;
      reg[4:0] global_state_next;
      wire DC_Filter_Equal_2Ux1U_1U_4_145_out1;
      wire DC_Filter_OrReduction_2U_1U_4_142_out1;
      wire[3:0] DC_Filter_Mul_2Ux2U_4U_4_137_out1;
      wire[3:0] DC_Filter_Add_4Ux2U_4U_4_135_out1;
      wire[3:0] DC_Filter_Mul_2Ux2U_4U_4_134_out1;
      wire DC_Filter_OrReduction_2U_1U_4_130_out1;
      wire DC_Filter_Equal_2Ux1U_1U_4_129_out1;
      reg[1:0] DC_Filter_Equal_2Ux2U_1U_4_128_in2;
      reg gs_ctrl10;
      reg[1:0] DC_Filter_Add_2Ux1U_2U_4_127_in2;
      reg gs_ctrl9;
      wire[3:0] DC_Filter_Mul_2Ux2U_4U_4_117_out1;
      wire[3:0] DC_Filter_Mul_2Ux2U_4U_4_92_out1;
      reg gs_ctrl8;
      reg gs_ctrl7;
      reg[2:0] gs_ctrl6;
      reg gs_ctrl5;
      reg[11:0] DC_Filter_Add_12Ux1U_12U_4_88_in2;
      reg[1:0] gs_ctrl4;
      reg[11:0] DC_Filter_Add_12Ux12U_12U_4_87_in1;
      reg[2:0] gs_ctrl3;
      reg[11:0] DC_Filter_Add_12Ux12U_12U_4_87_in2;
      reg[11:0] DC_Filter_N_Mux_12_3_2_4_143_out1;
      reg[2:0] gs_ctrl2;
      wire[11:0] DC_Filter_Mul_9Ux4U_12U_4_86_out1;
      reg[3:0] DC_Filter_Mul_9Ux4U_12U_4_86_in1;
      reg[1:0] gs_ctrl1;
      reg[8:0] DC_Filter_Mul_9Ux4U_12U_4_86_in2;
      reg gs_ctrl0;
      wire[3:0] DC_Filter_Mul_2Ux2U_4U_4_84_out1;
      wire[1:0] DC_Filter_Add_2Ux1U_2U_4_127_out1;
      reg[1:0] s_reg_178;
      wire[8:0] DC_Filter_Add_8Ux2U_9U_4_136_out1;
      wire[11:0] DC_Filter_Add_12Ux12U_12U_4_87_out1;
      wire[3:0] DC_Filter_Add_4Ux2U_4U_4_118_out1;
      reg[3:0] s_reg_176;
      wire DC_Filter_Equal_2Ux2U_1U_4_128_out1;
      reg s_reg_175;
      reg[1:0] s_reg_174;
      wire[3:0] DC_Filter_Add_4Ux2U_4U_4_138_out1;
      wire[3:0] DC_Filter_Add_3Ux2U_4U_4_109_out1;
      wire[2:0] DC_Filter_Add_2Ux2U_3U_4_103_out1;
      wire[3:0] DC_Filter_Add_4Ux1U_4U_4_98_out1;
      wire[3:0] DC_Filter_Add_4Ux2U_4U_4_93_out1;
      wire[3:0] DC_Filter_Add_4Ux2U_4U_4_85_out1;
      reg[3:0] s_reg_172;
      reg[1:0] s_reg_170;
      reg[11:0] DC_Filter_N_Mux_12_2_1_4_133_out1;
      reg[11:0] s_reg_169;
      reg[11:0] DC_Filter_N_Mux_12_2_0_4_132_out1;
      reg[11:0] s_reg_168;
      wire[1:0] DC_Filter_Add_2Ux1U_2U_4_121_out1;
      reg[11:0] DC_Filter_N_Mux_12_2_0_4_131_out1;
      wire DC_Filter_LessThan_12Ux9U_1U_4_113_out1;
      reg[11:0] s_reg_167;
      wire DC_Filter_And_1Ux1U_1U_4_81_out1;
      wire[2:0] DC_Filter_gen_busy_r_4_156_out1;
      wire DC_Filter_Not_1U_1U_1_3_out1;
      reg o_result_m_req_m_trig_req;
      reg[11:0] s_reg_173;
      wire[1:0] DC_Filter_Add_2Ux1U_2U_4_114_out1;
      reg[11:0] s_reg_177;
      reg[8:0] s_reg_171;
      wire[1:0] DC_Filter_Add_1Ux1U_2U_4_108_out1;
      wire[1:0] DC_Filter_Add_2Ux1U_2U_4_104_out1;
      wire DC_Filter_LessThan_12Ux9U_1U_4_105_out1;
      wire[11:0] DC_Filter_Add_12Ux1U_12U_4_88_out1;
      wire[1:0] DC_Filter_Add_2Ux1U_2U_4_90_out1;
      wire[1:0] DC_Filter_Add_2Ux1U_2U_4_89_out1;
      reg i_rgb_inside_m_busy_req_0;
      reg[11:0] DC_Filter_N_Mux_12_2_3_4_148_out1;
      reg[11:0] DC_Filter_N_Mux_12_2_3_4_149_out1;
      reg[11:0] DC_Filter_N_Mux_12_2_3_4_150_out1;
      wire[1:0] DC_Filter_Add_2Ux1U_2U_4_144_out1;
      wire[1:0] DC_Filter_Add_2Ux1U_2U_4_152_out1;
      wire[1:0] DC_Filter_Add_2Ux1U_2U_4_151_out1;
      reg[4:0] global_state;
      reg stall0;
      reg[7:0] f1_array_rgb_DIN;
      reg f1_array_rgb_CE;
      reg f1_array_rgb_RW;
      reg[11:0] f1_array_rgb_in1;
      wire[7:0] f1_array_rgb_out1;
      wire[3:0] mask1_in1;
      wire[3:0] mask1_out1;
      reg[7:0] f2_array_rgb_DIN;
      reg f2_array_rgb_CE;
      reg f2_array_rgb_RW;
      reg[11:0] f2_array_rgb_in1;
      wire[7:0] f2_array_rgb_out1;
      wire[3:0] mask2_in1;
      wire[3:0] mask2_out1;

         DC_Filter_ROM_9X4_mask2 mask2(
                                   .in1( mask2_in1 ),
                                   .out1( mask2_out1 ),
                                   .clk( i_clk )
                                 );

         DC_Filter_RAM_2322X8_1 f2_array_rgb(
                                  .DIN( f2_array_rgb_DIN ),
                                  .CE( f2_array_rgb_CE ),
                                  .RW( f2_array_rgb_RW ),
                                  .in1( f2_array_rgb_in1 ),
                                  .out1( f2_array_rgb_out1 ),
                                  .clk( i_clk )
                                );

         DC_Filter_ROM_9X4_mask1 mask1(
                                   .in1( mask1_in1 ),
                                   .out1( mask1_out1 ),
                                   .clk( i_clk )
                                 );

         DC_Filter_RAM_2322X8_1 f1_array_rgb(
                                  .DIN( f1_array_rgb_DIN ),
                                  .CE( f1_array_rgb_CE ),
                                  .RW( f1_array_rgb_RW ),
                                  .in1( f1_array_rgb_in1 ),
                                  .out1( f1_array_rgb_out1 ),
                                  .clk( i_clk )
                                );

         // resource: mux_24bx2i0c
         // resource: regr_en_24
         always @(posedge i_clk)
          begin :drive_o_result_data
            case (stall0) 

               1'b1:                begin
               end
               
               1'b0:                begin
                  case (global_state) 

                     5'd14, 5'd18:                      begin
                        o_result_data <= i_rgb_inside_data;
                     end
                     
                     5'd29:                      begin
                        if (2'd3 == DC_Filter_Add_2Ux1U_2U_4_144_out1 && (2'd3 == DC_Filter_Add_2Ux1U_2U_4_152_out1 && 2'd3 == DC_Filter_Add_2Ux1U_2U_4_151_out1)) begin
                           o_result_data <= {DC_Filter_N_Mux_12_2_3_4_148_out1[11:4], {DC_Filter_N_Mux_12_2_3_4_149_out1[11:4], DC_Filter_N_Mux_12_2_3_4_150_out1[11:4]}};
                        end
                     end
                     
                  endcase

               end
               
            endcase

         end

         // resource: mux_1bx2i2c
         // resource: regr_en_ss_1
         always @(posedge i_clk)
          begin :drive_i_rgb_inside_m_busy_req_0
            if (i_rst == 1'b0) begin
               i_rgb_inside_m_busy_req_0 <= 1'd1;
            end
            else begin
               case (stall0) 

                  1'b1:                   begin
                  end
                  
                  1'b0:                   begin
                     case (global_state) 

                        5'd03:                         begin
                           if (9'd258 == DC_Filter_Add_12Ux1U_12U_4_88_out1[8:0] && (2'd3 == DC_Filter_Add_2Ux1U_2U_4_90_out1 && 2'd3 == DC_Filter_Add_2Ux1U_2U_4_89_out1)) begin
                              i_rgb_inside_m_busy_req_0 <= 1'd0;
                           end
                        end
                        
                        5'd10:                         begin
                           if (9'd257 == s_reg_171 && (2'd2 == DC_Filter_Add_1Ux1U_2U_4_108_out1 && (2'd3 == DC_Filter_Add_2Ux1U_2U_4_104_out1 && DC_Filter_LessThan_12Ux9U_1U_4_105_out1))) begin
                              i_rgb_inside_m_busy_req_0 <= 1'd0;
                           end
                        end
                        
                        5'd14, 5'd18:                         begin
                           i_rgb_inside_m_busy_req_0 <= 1'd1;
                        end
                        
                        5'd17:                         begin
                           if (9'd257 != s_reg_177[8:0]) begin
                              i_rgb_inside_m_busy_req_0 <= 1'd0;
                           end
                        end
                        
                        5'd23:                         begin
                           case (DC_Filter_Add_12Ux1U_12U_4_88_out1[8:0]) 

                              9'd257:                               begin
                                 if (2'd3 != DC_Filter_Add_2Ux1U_2U_4_114_out1) begin
                                    i_rgb_inside_m_busy_req_0 <= 1'd0;
                                 end
                              end
                              
                              default:                               begin
                                 i_rgb_inside_m_busy_req_0 <= 1'd0;
                              end
                              
                           endcase

                        end
                        
                        5'd31:                         begin
                           if (9'd256 == DC_Filter_Add_12Ux1U_12U_4_88_out1[8:0] && 12'd0000 == s_reg_173) begin
                              i_rgb_inside_m_busy_req_0 <= 1'd0;
                           end
                        end
                        
                     endcase

                  end
                  
               endcase

            end
         end

         // resource: regr_en_sc_1
         always @(posedge i_clk)
          begin :drive_o_result_m_req_m_trig_req
            if (i_rst == 1'b0) begin
               o_result_m_req_m_trig_req <= 1'd0;
            end
            else begin
               case (stall0) 

                  1'b1:                   begin
                  end
                  
                  1'b0:                   begin
                     case (global_state) 

                        5'd29:                         begin
                           if (2'd3 == DC_Filter_Add_2Ux1U_2U_4_144_out1 && (2'd3 == DC_Filter_Add_2Ux1U_2U_4_152_out1 && 2'd3 == DC_Filter_Add_2Ux1U_2U_4_151_out1)) begin
                              o_result_m_req_m_trig_req <= DC_Filter_Not_1U_1U_1_3_out1;
                           end
                        end
                        
                     endcase

                  end
                  
               endcase

            end
         end

         // resource: mux_1bx3i1c
         always @(DC_Filter_And_1Ux1U_1U_4_81_out1 or DC_Filter_gen_busy_r_4_156_out1[0] or global_state)
          begin :drive_stall0
            case (global_state) 

               5'd14, 5'd18:                begin
                  stall0 = DC_Filter_gen_busy_r_4_156_out1[0];
               end
               
               5'd31:                begin
                  stall0 = DC_Filter_And_1Ux1U_1U_4_81_out1;
               end
               
               default:                begin
                  stall0 = 1'b0;
               end
               
            endcase

         end

         // resource: mux_12bx2i0c
         // resource: regr_en_sc_12
         always @(posedge i_clk)
          begin :drive_s_reg_167
            if (i_rst == 1'b0) begin
               s_reg_167 <= 12'd0000;
            end
            else begin
               case (stall0) 

                  1'b1:                   begin
                  end
                  
                  1'b0:                   begin
                     case (global_state) 

                        5'd10:                         begin
                           if (9'd257 == s_reg_171 && (2'd2 == DC_Filter_Add_1Ux1U_2U_4_108_out1 && (2'd3 == DC_Filter_Add_2Ux1U_2U_4_104_out1 && (!DC_Filter_LessThan_12Ux9U_1U_4_105_out1 && !DC_Filter_LessThan_12Ux9U_1U_4_113_out1)))) begin
                              /* state59 */
                              s_reg_167 <= DC_Filter_N_Mux_12_2_0_4_131_out1;
                           end
                        end
                        
                        5'd13:                         begin
                           if (2'd3 == DC_Filter_Add_2Ux1U_2U_4_121_out1 && 9'd257 == DC_Filter_Add_12Ux1U_12U_4_88_out1[8:0]) begin
                              /* state63 */
                              s_reg_167 <= DC_Filter_N_Mux_12_2_0_4_131_out1;
                           end
                        end
                        
                        5'd17:                         begin
                           if (9'd257 == s_reg_177[8:0]) begin
                              /* state62 */
                              s_reg_167 <= DC_Filter_N_Mux_12_2_0_4_131_out1;
                           end
                        end
                        
                        5'd23:                         begin
                           if (9'd257 == DC_Filter_Add_12Ux1U_12U_4_88_out1[8:0] && 2'd3 == DC_Filter_Add_2Ux1U_2U_4_114_out1) begin
                              /* state60 */
                              s_reg_167 <= DC_Filter_N_Mux_12_2_0_4_131_out1;
                           end
                        end
                        
                        5'd24:                         begin
                           /* state64 */
                           s_reg_167 <= DC_Filter_N_Mux_12_2_0_4_131_out1;
                        end
                        
                        5'd29:                         begin
                           /* state77 */
                           s_reg_167 <= DC_Filter_N_Mux_12_2_3_4_148_out1;
                        end
                        
                        5'd31:                         begin
                           if (9'd256 != DC_Filter_Add_12Ux1U_12U_4_88_out1[8:0]) begin
                              /* state61 */
                              s_reg_167 <= DC_Filter_N_Mux_12_2_0_4_131_out1;
                           end
                        end
                        
                     endcase

                  end
                  
               endcase

            end
         end

         // resource: mux_12bx2i0c
         // resource: regr_en_sc_12
         always @(posedge i_clk)
          begin :drive_s_reg_168
            if (i_rst == 1'b0) begin
               s_reg_168 <= 12'd0000;
            end
            else begin
               case (stall0) 

                  1'b1:                   begin
                  end
                  
                  1'b0:                   begin
                     case (global_state) 

                        5'd10:                         begin
                           if (9'd257 == s_reg_171 && (2'd2 == DC_Filter_Add_1Ux1U_2U_4_108_out1 && (2'd3 == DC_Filter_Add_2Ux1U_2U_4_104_out1 && (!DC_Filter_LessThan_12Ux9U_1U_4_105_out1 && !DC_Filter_LessThan_12Ux9U_1U_4_113_out1)))) begin
                              s_reg_168 <= DC_Filter_N_Mux_12_2_0_4_132_out1;
                           end
                        end
                        
                        5'd13:                         begin
                           if (2'd3 == DC_Filter_Add_2Ux1U_2U_4_121_out1 && 9'd257 == DC_Filter_Add_12Ux1U_12U_4_88_out1[8:0]) begin
                              s_reg_168 <= DC_Filter_N_Mux_12_2_0_4_132_out1;
                           end
                        end
                        
                        5'd17:                         begin
                           if (9'd257 == s_reg_177[8:0]) begin
                              s_reg_168 <= DC_Filter_N_Mux_12_2_0_4_132_out1;
                           end
                        end
                        
                        5'd23:                         begin
                           if (9'd257 == DC_Filter_Add_12Ux1U_12U_4_88_out1[8:0] && 2'd3 == DC_Filter_Add_2Ux1U_2U_4_114_out1) begin
                              s_reg_168 <= DC_Filter_N_Mux_12_2_0_4_132_out1;
                           end
                        end
                        
                        5'd24:                         begin
                           s_reg_168 <= DC_Filter_N_Mux_12_2_0_4_132_out1;
                        end
                        
                        5'd29:                         begin
                           s_reg_168 <= DC_Filter_N_Mux_12_2_3_4_149_out1;
                        end
                        
                        5'd31:                         begin
                           if (9'd256 != DC_Filter_Add_12Ux1U_12U_4_88_out1[8:0]) begin
                              s_reg_168 <= DC_Filter_N_Mux_12_2_0_4_132_out1;
                           end
                        end
                        
                     endcase

                  end
                  
               endcase

            end
         end

         // resource: mux_12bx2i0c
         // resource: regr_en_sc_12
         always @(posedge i_clk)
          begin :drive_s_reg_169
            if (i_rst == 1'b0) begin
               s_reg_169 <= 12'd0000;
            end
            else begin
               case (stall0) 

                  1'b1:                   begin
                  end
                  
                  1'b0:                   begin
                     case (global_state) 

                        5'd10:                         begin
                           if (9'd257 == s_reg_171 && (2'd2 == DC_Filter_Add_1Ux1U_2U_4_108_out1 && (2'd3 == DC_Filter_Add_2Ux1U_2U_4_104_out1 && (!DC_Filter_LessThan_12Ux9U_1U_4_105_out1 && !DC_Filter_LessThan_12Ux9U_1U_4_113_out1)))) begin
                              s_reg_169 <= DC_Filter_N_Mux_12_2_1_4_133_out1;
                           end
                        end
                        
                        5'd13:                         begin
                           if (2'd3 == DC_Filter_Add_2Ux1U_2U_4_121_out1 && 9'd257 == DC_Filter_Add_12Ux1U_12U_4_88_out1[8:0]) begin
                              s_reg_169 <= DC_Filter_N_Mux_12_2_1_4_133_out1;
                           end
                        end
                        
                        5'd17:                         begin
                           if (9'd257 == s_reg_177[8:0]) begin
                              s_reg_169 <= DC_Filter_N_Mux_12_2_1_4_133_out1;
                           end
                        end
                        
                        5'd23:                         begin
                           if (9'd257 == DC_Filter_Add_12Ux1U_12U_4_88_out1[8:0] && 2'd3 == DC_Filter_Add_2Ux1U_2U_4_114_out1) begin
                              s_reg_169 <= DC_Filter_N_Mux_12_2_1_4_133_out1;
                           end
                        end
                        
                        5'd24:                         begin
                           s_reg_169 <= DC_Filter_N_Mux_12_2_1_4_133_out1;
                        end
                        
                        5'd29:                         begin
                           s_reg_169 <= DC_Filter_N_Mux_12_2_3_4_150_out1;
                        end
                        
                        5'd31:                         begin
                           if (9'd256 != DC_Filter_Add_12Ux1U_12U_4_88_out1[8:0]) begin
                              s_reg_169 <= DC_Filter_N_Mux_12_2_1_4_133_out1;
                           end
                        end
                        
                     endcase

                  end
                  
               endcase

            end
         end

         // resource: mux_2bx6i2c
         // resource: regr_en_sc_2
         always @(posedge i_clk)
          begin :drive_s_reg_170
            if (i_rst == 1'b0) begin
               s_reg_170 <= 2'd0;
            end
            else begin
               case (stall0) 

                  1'b1:                   begin
                  end
                  
                  1'b0:                   begin
                     case (global_state) 

                        5'd03:                         begin
                           if (9'd258 == DC_Filter_Add_12Ux1U_12U_4_88_out1[8:0] && 2'd3 == DC_Filter_Add_2Ux1U_2U_4_90_out1) begin
                              /* state8 */
                              case (DC_Filter_Add_2Ux1U_2U_4_89_out1) 

                                 2'd3:                                  begin
                                    s_reg_170 <= 2'd1;
                                 end
                                 
                                 default:                                  begin
                                    s_reg_170 <= DC_Filter_Add_2Ux1U_2U_4_89_out1;
                                 end
                                 
                              endcase

                           end
                        end
                        
                        5'd10:                         begin
                           if (9'd257 == s_reg_171 && 2'd2 == DC_Filter_Add_1Ux1U_2U_4_108_out1) begin
                              /* state23 */
                              case (DC_Filter_Add_2Ux1U_2U_4_104_out1) 

                                 2'd3:                                  begin
                                    s_reg_170 <= 2'd0;
                                 end
                                 
                                 default:                                  begin
                                    s_reg_170 <= DC_Filter_Add_2Ux1U_2U_4_104_out1;
                                 end
                                 
                              endcase

                           end
                        end
                        
                        5'd13, 5'd17, 5'd24:                         begin
                           s_reg_170 <= 2'd0;
                        end
                        
                        5'd23:                         begin
                           if (9'd257 == DC_Filter_Add_12Ux1U_12U_4_88_out1[8:0]) begin
                              case (DC_Filter_Add_2Ux1U_2U_4_114_out1) 

                                 2'd3:                                  begin
                                    s_reg_170 <= 2'd0;
                                 end
                                 
                                 default:                                  begin
                                    s_reg_170 <= DC_Filter_Add_2Ux1U_2U_4_114_out1;
                                 end
                                 
                              endcase

                           end
                        end
                        
                        5'd29:                         begin
                           if (2'd3 == DC_Filter_Add_2Ux1U_2U_4_144_out1) begin
                              case (DC_Filter_Add_2Ux1U_2U_4_152_out1) 

                                 2'd3:                                  begin
                                    if (2'd3 != DC_Filter_Add_2Ux1U_2U_4_151_out1) begin
                                       s_reg_170 <= 2'd0;
                                    end
                                 end
                                 
                                 default:                                  begin
                                    s_reg_170 <= DC_Filter_Add_2Ux1U_2U_4_152_out1;
                                 end
                                 
                              endcase

                           end
                        end
                        
                        5'd31:                         begin
                           /* state85 */
                           case (DC_Filter_Add_12Ux1U_12U_4_88_out1[8:0]) 

                              9'd256:                               begin
                                 case (s_reg_173) 

                                    12'd0000:                                     begin
                                       s_reg_170 <= 2'd1;
                                    end
                                    
                                    default:                                     begin
                                       s_reg_170 <= 2'd0;
                                    end
                                    
                                 endcase

                              end
                              
                              default:                               begin
                                 s_reg_170 <= 2'd0;
                              end
                              
                           endcase

                        end
                        
                     endcase

                  end
                  
               endcase

            end
         end

         // resource: mux_9bx5i2c
         // resource: regr_en_sc_9
         always @(posedge i_clk)
          begin :drive_s_reg_171
            if (i_rst == 1'b0) begin
               s_reg_171 <= 9'd000;
            end
            else begin
               case (stall0) 

                  1'b1:                   begin
                  end
                  
                  1'b0:                   begin
                     case (global_state) 

                        5'd03:                         begin
                           case (DC_Filter_Add_12Ux1U_12U_4_88_out1[8:0]) 

                              9'd258:                               begin
                                 case (DC_Filter_Add_2Ux1U_2U_4_90_out1) 

                                    2'd3:                                     begin
                                       /* state8 */
                                       case (DC_Filter_Add_2Ux1U_2U_4_89_out1) 

                                          2'd3:                                           begin
                                             s_reg_171 <= 9'd001;
                                          end
                                          
                                          default:                                           begin
                                             s_reg_171 <= 9'd000;
                                          end
                                          
                                       endcase

                                    end
                                    
                                    default:                                     begin
                                       s_reg_171 <= 9'd000;
                                    end
                                    
                                 endcase

                              end
                              
                              default:                               begin
                                 s_reg_171 <= DC_Filter_Add_12Ux1U_12U_4_88_out1[8:0];
                              end
                              
                           endcase

                        end
                        
                        5'd09:                         begin
                           s_reg_171 <= DC_Filter_Add_12Ux1U_12U_4_88_out1[8:0];
                        end
                        
                        5'd10:                         begin
                           if (9'd257 == s_reg_171) begin
                              case (DC_Filter_Add_1Ux1U_2U_4_108_out1) 

                                 2'd2:                                  begin
                                    /* state23 */
                                    case (DC_Filter_Add_2Ux1U_2U_4_104_out1) 

                                       2'd3:                                        begin
                                          if (DC_Filter_LessThan_12Ux9U_1U_4_105_out1) begin
                                             s_reg_171 <= 9'd001;
                                          end
                                          else begin
                                             s_reg_171 <= {8'b00000000, DC_Filter_LessThan_12Ux9U_1U_4_113_out1};
                                          end
                                       end
                                       
                                       default:                                        begin
                                          s_reg_171 <= 9'd001;
                                       end
                                       
                                    endcase

                                 end
                                 
                                 default:                                  begin
                                    s_reg_171 <= 9'd001;
                                 end
                                 
                              endcase

                           end
                        end
                        
                        5'd13:                         begin
                           if (2'd3 == DC_Filter_Add_2Ux1U_2U_4_121_out1) begin
                              case (DC_Filter_Add_12Ux1U_12U_4_88_out1[8:0]) 

                                 9'd257:                                  begin
                                    s_reg_171 <= 9'd000;
                                 end
                                 
                                 default:                                  begin
                                    s_reg_171 <= DC_Filter_Add_12Ux1U_12U_4_88_out1[8:0];
                                 end
                                 
                              endcase

                           end
                        end
                        
                        5'd17:                         begin
                           case (s_reg_177[8:0]) 

                              9'd257:                               begin
                                 s_reg_171 <= 9'd000;
                              end
                              
                              default:                               begin
                                 s_reg_171 <= s_reg_177[8:0];
                              end
                              
                           endcase

                        end
                        
                        5'd23:                         begin
                           case (DC_Filter_Add_12Ux1U_12U_4_88_out1[8:0]) 

                              9'd257:                               begin
                                 case (DC_Filter_Add_2Ux1U_2U_4_114_out1) 

                                    2'd3:                                     begin
                                       s_reg_171 <= 9'd000;
                                    end
                                    
                                    default:                                     begin
                                       s_reg_171 <= 9'd001;
                                    end
                                    
                                 endcase

                              end
                              
                              default:                               begin
                                 s_reg_171 <= DC_Filter_Add_12Ux1U_12U_4_88_out1[8:0];
                              end
                              
                           endcase

                        end
                        
                        5'd31:                         begin
                           /* state85 */
                           case (DC_Filter_Add_12Ux1U_12U_4_88_out1[8:0]) 

                              9'd256:                               begin
                                 s_reg_171 <= 9'd001;
                              end
                              
                              default:                               begin
                                 s_reg_171 <= DC_Filter_Add_12Ux1U_12U_4_88_out1[8:0];
                              end
                              
                           endcase

                        end
                        
                     endcase

                  end
                  
               endcase

            end
         end

         // resource: mux_4bx6i0c
         // resource: regr_en_4
         always @(posedge i_clk)
          begin :drive_s_reg_172
            case (stall0) 

               1'b1:                begin
               end
               
               1'b0:                begin
                  case (global_state) 

                     5'd01:                      begin
                        s_reg_172 <= DC_Filter_Add_4Ux2U_4U_4_85_out1;
                     end
                     
                     5'd05:                      begin
                        s_reg_172 <= DC_Filter_Add_4Ux2U_4U_4_93_out1;
                     end
                     
                     5'd07:                      begin
                        s_reg_172 <= DC_Filter_Add_4Ux1U_4U_4_98_out1;
                     end
                     
                     5'd19:                      begin
                        s_reg_172 <= {1'b0, DC_Filter_Add_2Ux2U_3U_4_103_out1};
                     end
                     
                     5'd21:                      begin
                        s_reg_172 <= DC_Filter_Add_3Ux2U_4U_4_109_out1;
                     end
                     
                     5'd27:                      begin
                        s_reg_172 <= DC_Filter_Add_4Ux2U_4U_4_138_out1;
                     end
                     
                  endcase

               end
               
            endcase

         end

         // resource: mux_12bx3i1c
         // resource: regr_en_12
         always @(posedge i_clk)
          begin :drive_s_reg_173
            case (stall0) 

               1'b1:                begin
               end
               
               1'b0:                begin
                  case (global_state) 

                     5'd13:                      begin
                        s_reg_173 <= s_reg_177;
                     end
                     
                     5'd17:                      begin
                        if (9'd257 == s_reg_177[8:0]) begin
                           s_reg_173 <= DC_Filter_Add_12Ux1U_12U_4_88_out1;
                        end
                     end
                     
                     5'd23:                      begin
                        s_reg_173 <= 12'd0003;
                     end
                     
                  endcase

               end
               
            endcase

         end

         // resource: mux_2bx4i1c
         // resource: regr_en_2
         always @(posedge i_clk)
          begin :drive_s_reg_174
            case (stall0) 

               1'b1:                begin
               end
               
               1'b0:                begin
                  case (global_state) 

                     5'd10:                      begin
                        if (9'd257 == s_reg_171) begin
                           case (DC_Filter_Add_1Ux1U_2U_4_108_out1) 

                              2'd2:                               begin
                                 s_reg_174 <= 2'd0;
                              end
                              
                              default:                               begin
                                 s_reg_174 <= DC_Filter_Add_1Ux1U_2U_4_108_out1;
                              end
                              
                           endcase

                        end
                     end
                     
                     5'd13:                      begin
                        case (DC_Filter_Add_2Ux1U_2U_4_121_out1) 

                           2'd3:                            begin
                              s_reg_174 <= 2'd0;
                           end
                           
                           default:                            begin
                              s_reg_174 <= DC_Filter_Add_2Ux1U_2U_4_121_out1;
                           end
                           
                        endcase

                     end
                     
                     5'd17, 5'd23:                      begin
                        s_reg_174 <= 2'd0;
                     end
                     
                     5'd29:                      begin
                        if (2'd3 == DC_Filter_Add_2Ux1U_2U_4_144_out1 && (2'd3 == DC_Filter_Add_2Ux1U_2U_4_152_out1 && 2'd3 != DC_Filter_Add_2Ux1U_2U_4_151_out1)) begin
                           s_reg_174 <= DC_Filter_Add_2Ux1U_2U_4_151_out1;
                        end
                     end
                     
                     5'd31:                      begin
                        /* state85 */
                        case (DC_Filter_Add_12Ux1U_12U_4_88_out1[8:0]) 

                           9'd256:                            begin
                              if (12'd0000 != s_reg_173) begin
                                 s_reg_174 <= 2'd0;
                              end
                           end
                           
                           default:                            begin
                              s_reg_174 <= 2'd0;
                           end
                           
                        endcase

                     end
                     
                  endcase

               end
               
            endcase

         end

         // resource: regr_en_1
         always @(posedge i_clk)
          begin :drive_s_reg_175
            case (stall0) 

               1'b1:                begin
               end
               
               1'b0:                begin
                  s_reg_175 <= DC_Filter_Equal_2Ux2U_1U_4_128_out1;
               end
               
            endcase

         end

         // resource: mux_4bx2i0c
         // resource: regr_en_4
         always @(posedge i_clk)
          begin :drive_s_reg_176
            case (stall0) 

               1'b1:                begin
               end
               
               1'b0:                begin
                  case (global_state) 

                     5'd11:                      begin
                        s_reg_176 <= DC_Filter_Add_4Ux2U_4U_4_118_out1;
                     end
                     
                     5'd26:                      begin
                        s_reg_176 <= mask2_out1;
                     end
                     
                  endcase

               end
               
            endcase

         end

         // resource: mux_12bx5i0c
         // resource: regr_en_12
         always @(posedge i_clk)
          begin :drive_s_reg_177
            case (stall0) 

               1'b1:                begin
               end
               
               1'b0:                begin
                  case (global_state) 

                     5'd07:                      begin
                        s_reg_177 <= {4'b0000, f2_array_rgb_out1};
                     end
                     
                     5'd10:                      begin
                        if (DC_Filter_LessThan_12Ux9U_1U_4_105_out1) begin
                           s_reg_177 <= {1'b0, DC_Filter_Add_12Ux12U_12U_4_87_out1[10:0]};
                        end
                        else begin
                           s_reg_177 <= DC_Filter_Add_12Ux1U_12U_4_88_out1;
                        end
                     end
                     
                     5'd14:                      begin
                        s_reg_177 <= {3'b000, DC_Filter_Add_12Ux1U_12U_4_88_out1[8:0]};
                     end
                     
                     5'd17:                      begin
                        if (9'd257 != s_reg_177[8:0]) begin
                           s_reg_177 <= {1'b0, DC_Filter_Add_12Ux12U_12U_4_87_out1[10:0]};
                        end
                     end
                     
                     5'd26, 5'd30:                      begin
                        s_reg_177 <= {3'b000, DC_Filter_Add_8Ux2U_9U_4_136_out1};
                     end
                     
                  endcase

               end
               
            endcase

         end

         // resource: mux_2bx5i1c
         // resource: regr_en_sc_2
         always @(posedge i_clk)
          begin :drive_s_reg_178
            if (i_rst == 1'b0) begin
               s_reg_178 <= 2'd0;
            end
            else begin
               case (stall0) 

                  1'b1:                   begin
                  end
                  
                  1'b0:                   begin
                     case (global_state) 

                        5'd03:                         begin
                           if (9'd258 == DC_Filter_Add_12Ux1U_12U_4_88_out1[8:0]) begin
                              case (DC_Filter_Add_2Ux1U_2U_4_90_out1) 

                                 2'd3:                                  begin
                                    if (2'd3 != DC_Filter_Add_2Ux1U_2U_4_89_out1) begin
                                       s_reg_178 <= 2'd0;
                                    end
                                 end
                                 
                                 default:                                  begin
                                    s_reg_178 <= DC_Filter_Add_2Ux1U_2U_4_90_out1;
                                 end
                                 
                              endcase

                           end
                        end
                        
                        5'd04:                         begin
                           s_reg_178 <= DC_Filter_Add_1Ux1U_2U_4_108_out1;
                        end
                        
                        5'd10, 5'd13, 5'd17, 5'd23, 5'd24:                         begin
                           if (2'd3 != DC_Filter_Add_2Ux1U_2U_4_127_out1) begin
                              s_reg_178 <= DC_Filter_Add_2Ux1U_2U_4_127_out1;
                           end
                        end
                        
                        5'd26:                         begin
                           s_reg_178 <= 2'd0;
                        end
                        
                        5'd29:                         begin
                           if (2'd3 != DC_Filter_Add_2Ux1U_2U_4_144_out1) begin
                              s_reg_178 <= DC_Filter_Add_2Ux1U_2U_4_144_out1;
                           end
                        end
                        
                        5'd31:                         begin
                           if (9'd256 != DC_Filter_Add_12Ux1U_12U_4_88_out1[8:0] && 2'd3 != DC_Filter_Add_2Ux1U_2U_4_127_out1) begin
                              s_reg_178 <= DC_Filter_Add_2Ux1U_2U_4_127_out1;
                           end
                        end
                        
                     endcase

                  end
                  
               endcase

            end
         end

         // resource: DC_Filter_Mul_2Ux2U_4U_4  instance: DC_Filter_Mul_2Ux2U_4U_4_84
         assign DC_Filter_Mul_2Ux2U_4U_4_84_out1 = {2'b00, s_reg_170}*4'd03;

         // resource: DC_Filter_Add_4Ux2U_4U_4  instance: DC_Filter_Add_4Ux2U_4U_4_85
         assign DC_Filter_Add_4Ux2U_4U_4_85_out1 = DC_Filter_Mul_2Ux2U_4U_4_84_out1 + {2'b00, s_reg_178};

         // resource: mux_9bx2i1c
         always @(f2_array_rgb_out1 or gs_ctrl0)
          begin :drive_DC_Filter_Mul_9Ux4U_12U_4_86_in2
            if (gs_ctrl0) begin
               DC_Filter_Mul_9Ux4U_12U_4_86_in2 = {1'b0, f2_array_rgb_out1};
            end
            else begin
               DC_Filter_Mul_9Ux4U_12U_4_86_in2 = 9'd258;
            end
         end

         // resource: mux_4bx3i0c
         always @(s_reg_170 or s_reg_172 or s_reg_176 or gs_ctrl1)
          begin :drive_DC_Filter_Mul_9Ux4U_12U_4_86_in1
            case (gs_ctrl1) 

               2'd1:                begin
                  DC_Filter_Mul_9Ux4U_12U_4_86_in1 = s_reg_176;
               end
               
               2'd2:                begin
                  DC_Filter_Mul_9Ux4U_12U_4_86_in1 = {2'b00, s_reg_170};
               end
               
               default:                begin
                  DC_Filter_Mul_9Ux4U_12U_4_86_in1 = s_reg_172;
               end
               
            endcase

         end

         // resource: DC_Filter_Mul_9Ux4U_12U_4  instance: DC_Filter_Mul_9Ux4U_12U_4_86
         assign DC_Filter_Mul_9Ux4U_12U_4_86_out1 = {3'b000, DC_Filter_Mul_9Ux4U_12U_4_86_in2}*{8'b00000000, DC_Filter_Mul_9Ux4U_12U_4_86_in1};

         // resource: mux_12bx6i3c
         always @(DC_Filter_Mul_9Ux4U_12U_4_86_out1 or DC_Filter_N_Mux_12_3_2_4_143_out1 or gs_ctrl2)
          begin :drive_DC_Filter_Add_12Ux12U_12U_4_87_in2
            case (gs_ctrl2) 

               3'd1:                begin
                  DC_Filter_Add_12Ux12U_12U_4_87_in2 = 12'd0516;
               end
               
               3'd2:                begin
                  DC_Filter_Add_12Ux12U_12U_4_87_in2 = 12'd1290;
               end
               
               3'd3:                begin
                  DC_Filter_Add_12Ux12U_12U_4_87_in2 = 12'd2064;
               end
               
               3'd4:                begin
                  DC_Filter_Add_12Ux12U_12U_4_87_in2 = {1'b0, DC_Filter_Mul_9Ux4U_12U_4_86_out1[10:0]};
               end
               
               3'd5:                begin
                  DC_Filter_Add_12Ux12U_12U_4_87_in2 = DC_Filter_N_Mux_12_3_2_4_143_out1;
               end
               
               default:                begin
                  DC_Filter_Add_12Ux12U_12U_4_87_in2 = DC_Filter_Mul_9Ux4U_12U_4_86_out1;
               end
               
            endcase

         end

         // resource: mux_12bx5i1c
         always @(s_reg_171 or s_reg_177 or DC_Filter_Mul_9Ux4U_12U_4_86_out1 or gs_ctrl3)
          begin :drive_DC_Filter_Add_12Ux12U_12U_4_87_in1
            case (gs_ctrl3) 

               3'd1:                begin
                  DC_Filter_Add_12Ux12U_12U_4_87_in1 = 12'd0001;
               end
               
               3'd2:                begin
                  DC_Filter_Add_12Ux12U_12U_4_87_in1 = {3'b000, s_reg_177[8:0]};
               end
               
               3'd3:                begin
                  DC_Filter_Add_12Ux12U_12U_4_87_in1 = s_reg_177;
               end
               
               3'd4:                begin
                  DC_Filter_Add_12Ux12U_12U_4_87_in1 = DC_Filter_Mul_9Ux4U_12U_4_86_out1;
               end
               
               default:                begin
                  DC_Filter_Add_12Ux12U_12U_4_87_in1 = {3'b000, s_reg_171};
               end
               
            endcase

         end

         // resource: DC_Filter_Add_12Ux12U_12U_4  instance: DC_Filter_Add_12Ux12U_12U_4_87
         assign DC_Filter_Add_12Ux12U_12U_4_87_out1 = DC_Filter_Add_12Ux12U_12U_4_87_in2 + DC_Filter_Add_12Ux12U_12U_4_87_in1;

         // resource: mux_12bx3i0c
         always @(s_reg_171 or s_reg_173 or gs_ctrl4)
          begin :drive_DC_Filter_Add_12Ux1U_12U_4_88_in2
            case (gs_ctrl4) 

               2'd1:                begin
                  /* state28 */
                  DC_Filter_Add_12Ux1U_12U_4_88_in2 = s_reg_173;
               end
               
               2'd2:                begin
                  DC_Filter_Add_12Ux1U_12U_4_88_in2 = {4'b0000, s_reg_171[7:0]};
               end
               
               default:                begin
                  DC_Filter_Add_12Ux1U_12U_4_88_in2 = {3'b000, s_reg_171};
               end
               
            endcase

         end

         // resource: DC_Filter_Add_12Ux1U_12U_4  instance: DC_Filter_Add_12Ux1U_12U_4_88
         assign DC_Filter_Add_12Ux1U_12U_4_88_out1 = DC_Filter_Add_12Ux1U_12U_4_88_in2 + 12'd0001;

         // resource: mux_12bx2i0c
         always @(s_reg_177 or DC_Filter_Add_12Ux12U_12U_4_87_out1 or gs_ctrl5)
          begin :drive_f2_array_rgb_in1
            if (gs_ctrl5) begin
               f2_array_rgb_in1 = s_reg_177;
            end
            else begin
               f2_array_rgb_in1 = DC_Filter_Add_12Ux12U_12U_4_87_out1;
            end
         end

         // resource: mux_8bx5i1c
         always @(i_rgb_inside_data[7:0] or o_result_data[23:8] or s_reg_177[7:0] or gs_ctrl6)
          begin :drive_f2_array_rgb_DIN
            case (gs_ctrl6) 

               3'd1:                begin
                  f2_array_rgb_DIN = s_reg_177[7:0];
               end
               
               3'd2:                begin
                  f2_array_rgb_DIN = i_rgb_inside_data[7:0];
               end
               
               3'd3:                begin
                  f2_array_rgb_DIN = o_result_data[15:8];
               end
               
               3'd4:                begin
                  f2_array_rgb_DIN = o_result_data[23:16];
               end
               
               default:                begin
                  f2_array_rgb_DIN = 8'd000;
               end
               
            endcase

         end

         // resource: mux_1bx2i2c
         always @(stall0 or gs_ctrl7)
          begin :drive_f2_array_rgb_CE
            if (stall0) begin
               f2_array_rgb_CE = 1'b0;
            end
            else begin
               if (gs_ctrl7) begin
                  f2_array_rgb_CE = 1'b1;
               end
               else begin
                  f2_array_rgb_CE = 1'b0;
               end
            end
         end

         // resource: mux_1bx2i2c
         always @(stall0 or gs_ctrl8)
          begin :drive_f2_array_rgb_RW
            if (stall0) begin
               f2_array_rgb_RW = 1'b0;
            end
            else begin
               if (gs_ctrl8) begin
                  f2_array_rgb_RW = 1'b1;
               end
               else begin
                  f2_array_rgb_RW = 1'b0;
               end
            end
         end

         // resource: DC_Filter_Add_2Ux1U_2U_4  instance: DC_Filter_Add_2Ux1U_2U_4_89
         assign DC_Filter_Add_2Ux1U_2U_4_89_out1 = s_reg_170 + 2'd1;

         // resource: DC_Filter_Add_2Ux1U_2U_4  instance: DC_Filter_Add_2Ux1U_2U_4_90
         assign DC_Filter_Add_2Ux1U_2U_4_90_out1 = s_reg_178 + 2'd1;

         // resource: DC_Filter_Add_1Ux1U_2U_4  instance: DC_Filter_Add_1Ux1U_2U_4_108
         assign DC_Filter_Add_1Ux1U_2U_4_108_out1 = {1'b0, s_reg_174[0]} + 2'd1;

         // resource: DC_Filter_Mul_2Ux2U_4U_4  instance: DC_Filter_Mul_2Ux2U_4U_4_92
         assign DC_Filter_Mul_2Ux2U_4U_4_92_out1 = {2'b00, s_reg_170}*4'd03;

         // resource: DC_Filter_Add_4Ux2U_4U_4  instance: DC_Filter_Add_4Ux2U_4U_4_93
         assign DC_Filter_Add_4Ux2U_4U_4_93_out1 = DC_Filter_Mul_2Ux2U_4U_4_92_out1 + {2'b00, s_reg_178};

         // resource: DC_Filter_Add_4Ux1U_4U_4  instance: DC_Filter_Add_4Ux1U_4U_4_98
         assign DC_Filter_Add_4Ux1U_4U_4_98_out1 = DC_Filter_Mul_2Ux2U_4U_4_92_out1 + {3'b000, s_reg_174[0]};

         // resource: DC_Filter_Add_2Ux2U_3U_4  instance: DC_Filter_Add_2Ux2U_3U_4_103
         assign DC_Filter_Add_2Ux2U_3U_4_103_out1 = {1'b0, s_reg_170} + 3'd3;

         // resource: DC_Filter_Add_2Ux1U_2U_4  instance: DC_Filter_Add_2Ux1U_2U_4_104
         assign DC_Filter_Add_2Ux1U_2U_4_104_out1 = s_reg_170 + 2'd1;

         // resource: DC_Filter_LessThan_12Ux9U_1U_4  instance: DC_Filter_LessThan_12Ux9U_1U_4_105
         assign DC_Filter_LessThan_12Ux9U_1U_4_105_out1 = s_reg_173 < 12'd0257;

         // resource: DC_Filter_Add_3Ux2U_4U_4  instance: DC_Filter_Add_3Ux2U_4U_4_109
         assign DC_Filter_Add_3Ux2U_4U_4_109_out1 = {2'b00, s_reg_170} + 4'd06;

         // resource: DC_Filter_LessThan_12Ux9U_1U_4  instance: DC_Filter_LessThan_12Ux9U_1U_4_113
         assign DC_Filter_LessThan_12Ux9U_1U_4_113_out1 = s_reg_173 < 12'd0258;

         // resource: DC_Filter_Add_2Ux1U_2U_4  instance: DC_Filter_Add_2Ux1U_2U_4_114
         assign DC_Filter_Add_2Ux1U_2U_4_114_out1 = s_reg_170 + 2'd1;

         // resource: DC_Filter_Mul_2Ux2U_4U_4  instance: DC_Filter_Mul_2Ux2U_4U_4_117
         assign DC_Filter_Mul_2Ux2U_4U_4_117_out1 = {2'b00, s_reg_174}*4'd03;

         // resource: DC_Filter_Add_4Ux2U_4U_4  instance: DC_Filter_Add_4Ux2U_4U_4_118
         assign DC_Filter_Add_4Ux2U_4U_4_118_out1 = DC_Filter_Mul_2Ux2U_4U_4_117_out1 + 4'd02;

         // resource: DC_Filter_Add_2Ux1U_2U_4  instance: DC_Filter_Add_2Ux1U_2U_4_121
         assign DC_Filter_Add_2Ux1U_2U_4_121_out1 = s_reg_174 + 2'd1;

         // resource: mux_2bx2i1c
         always @(s_reg_178 or gs_ctrl9)
          begin :drive_DC_Filter_Add_2Ux1U_2U_4_127_in2
            if (gs_ctrl9) begin
               DC_Filter_Add_2Ux1U_2U_4_127_in2 = s_reg_178;
            end
            else begin
               DC_Filter_Add_2Ux1U_2U_4_127_in2 = 2'd0;
            end
         end

         // resource: DC_Filter_Add_2Ux1U_2U_4  instance: DC_Filter_Add_2Ux1U_2U_4_127
         assign DC_Filter_Add_2Ux1U_2U_4_127_out1 = DC_Filter_Add_2Ux1U_2U_4_127_in2 + 2'd1;

         // resource: mux_2bx2i1c
         always @(s_reg_178 or gs_ctrl10)
          begin :drive_DC_Filter_Equal_2Ux2U_1U_4_128_in2
            if (gs_ctrl10) begin
               DC_Filter_Equal_2Ux2U_1U_4_128_in2 = s_reg_178;
            end
            else begin
               DC_Filter_Equal_2Ux2U_1U_4_128_in2 = 2'd0;
            end
         end

         // resource: DC_Filter_Equal_2Ux2U_1U_4  instance: DC_Filter_Equal_2Ux2U_1U_4_128
         assign DC_Filter_Equal_2Ux2U_1U_4_128_out1 = DC_Filter_Equal_2Ux2U_1U_4_128_in2 == 2'd2;

         // resource: DC_Filter_Equal_2Ux1U_1U_4  instance: DC_Filter_Equal_2Ux1U_1U_4_129
         assign DC_Filter_Equal_2Ux1U_1U_4_129_out1 = DC_Filter_Add_2Ux1U_2U_4_127_in2 == 2'd1;

         // resource: DC_Filter_OrReduction_2U_1U_4  instance: DC_Filter_OrReduction_2U_1U_4_130
         assign DC_Filter_OrReduction_2U_1U_4_130_out1 = (|DC_Filter_Add_2Ux1U_2U_4_127_in2);

         // resource: DC_Filter_N_Mux_12_2_0_4
         always @(s_reg_167 or DC_Filter_Equal_2Ux2U_1U_4_128_out1)
          begin :DC_Filter_N_Mux_12_2_0_4_131
            if (DC_Filter_Equal_2Ux2U_1U_4_128_out1) begin
               DC_Filter_N_Mux_12_2_0_4_131_out1 = 12'd0000;
            end
            else begin
               DC_Filter_N_Mux_12_2_0_4_131_out1 = s_reg_167;
            end
         end

         // resource: DC_Filter_N_Mux_12_2_0_4
         always @(s_reg_168 or DC_Filter_Equal_2Ux1U_1U_4_129_out1)
          begin :DC_Filter_N_Mux_12_2_0_4_132
            if (DC_Filter_Equal_2Ux1U_1U_4_129_out1) begin
               DC_Filter_N_Mux_12_2_0_4_132_out1 = 12'd0000;
            end
            else begin
               DC_Filter_N_Mux_12_2_0_4_132_out1 = s_reg_168;
            end
         end

         // resource: DC_Filter_N_Mux_12_2_1_4
         always @(s_reg_169 or DC_Filter_OrReduction_2U_1U_4_130_out1)
          begin :DC_Filter_N_Mux_12_2_1_4_133
            if (DC_Filter_OrReduction_2U_1U_4_130_out1) begin
               DC_Filter_N_Mux_12_2_1_4_133_out1 = s_reg_169;
            end
            else begin
               DC_Filter_N_Mux_12_2_1_4_133_out1 = 12'd0000;
            end
         end

         // resource: DC_Filter_Mul_2Ux2U_4U_4  instance: DC_Filter_Mul_2Ux2U_4U_4_134
         assign DC_Filter_Mul_2Ux2U_4U_4_134_out1 = {2'b00, s_reg_170}*4'd03;

         // resource: DC_Filter_Add_4Ux2U_4U_4  instance: DC_Filter_Add_4Ux2U_4U_4_135
         assign DC_Filter_Add_4Ux2U_4U_4_135_out1 = DC_Filter_Mul_2Ux2U_4U_4_134_out1 + {2'b00, s_reg_174};

         // instance: drive_mask2_in1
         assign mask2_in1 = DC_Filter_Add_4Ux2U_4U_4_135_out1;

         // resource: DC_Filter_Add_8Ux2U_9U_4  instance: DC_Filter_Add_8Ux2U_9U_4_136
         assign DC_Filter_Add_8Ux2U_9U_4_136_out1 = {1'b0, s_reg_171[7:0]} + {7'b0000000, s_reg_174};

         // resource: DC_Filter_Mul_2Ux2U_4U_4  instance: DC_Filter_Mul_2Ux2U_4U_4_137
         assign DC_Filter_Mul_2Ux2U_4U_4_137_out1 = {2'b00, s_reg_178}*4'd03;

         // resource: DC_Filter_Add_4Ux2U_4U_4  instance: DC_Filter_Add_4Ux2U_4U_4_138
         assign DC_Filter_Add_4Ux2U_4U_4_138_out1 = DC_Filter_Mul_2Ux2U_4U_4_137_out1 + {2'b00, s_reg_170};

         // resource: DC_Filter_OrReduction_2U_1U_4  instance: DC_Filter_OrReduction_2U_1U_4_142
         assign DC_Filter_OrReduction_2U_1U_4_142_out1 = (|s_reg_178);

         // resource: DC_Filter_N_Mux_12_3_2_4
         always @(s_reg_167 or s_reg_168 or s_reg_169 or s_reg_178)
          begin :DC_Filter_N_Mux_12_3_2_4_143
            case (s_reg_178) 

               2'd0:                begin
                  DC_Filter_N_Mux_12_3_2_4_143_out1 = s_reg_169;
               end
               
               2'd1:                begin
                  DC_Filter_N_Mux_12_3_2_4_143_out1 = s_reg_168;
               end
               
               default:                begin
                  DC_Filter_N_Mux_12_3_2_4_143_out1 = s_reg_167;
               end
               
            endcase

         end

         // resource: DC_Filter_Add_2Ux1U_2U_4  instance: DC_Filter_Add_2Ux1U_2U_4_144
         assign DC_Filter_Add_2Ux1U_2U_4_144_out1 = s_reg_178 + 2'd1;

         // resource: DC_Filter_Equal_2Ux1U_1U_4  instance: DC_Filter_Equal_2Ux1U_1U_4_145
         assign DC_Filter_Equal_2Ux1U_1U_4_145_out1 = s_reg_178 == 2'd1;

         // resource: DC_Filter_N_Mux_12_2_3_4
         always @(s_reg_167 or s_reg_175 or DC_Filter_Add_12Ux12U_12U_4_87_out1)
          begin :DC_Filter_N_Mux_12_2_3_4_148
            if (s_reg_175) begin
               DC_Filter_N_Mux_12_2_3_4_148_out1 = DC_Filter_Add_12Ux12U_12U_4_87_out1;
            end
            else begin
               DC_Filter_N_Mux_12_2_3_4_148_out1 = s_reg_167;
            end
         end

         // resource: DC_Filter_N_Mux_12_2_3_4
         always @(s_reg_168 or DC_Filter_Add_12Ux12U_12U_4_87_out1 or DC_Filter_Equal_2Ux1U_1U_4_145_out1)
          begin :DC_Filter_N_Mux_12_2_3_4_149
            if (DC_Filter_Equal_2Ux1U_1U_4_145_out1) begin
               DC_Filter_N_Mux_12_2_3_4_149_out1 = DC_Filter_Add_12Ux12U_12U_4_87_out1;
            end
            else begin
               DC_Filter_N_Mux_12_2_3_4_149_out1 = s_reg_168;
            end
         end

         // resource: DC_Filter_N_Mux_12_2_3_4
         always @(s_reg_169 or DC_Filter_Add_12Ux12U_12U_4_87_out1 or DC_Filter_OrReduction_2U_1U_4_142_out1)
          begin :DC_Filter_N_Mux_12_2_3_4_150
            if (DC_Filter_OrReduction_2U_1U_4_142_out1) begin
               DC_Filter_N_Mux_12_2_3_4_150_out1 = s_reg_169;
            end
            else begin
               DC_Filter_N_Mux_12_2_3_4_150_out1 = DC_Filter_Add_12Ux12U_12U_4_87_out1;
            end
         end

         // resource: DC_Filter_Add_2Ux1U_2U_4  instance: DC_Filter_Add_2Ux1U_2U_4_151
         assign DC_Filter_Add_2Ux1U_2U_4_151_out1 = s_reg_174 + 2'd1;

         // resource: DC_Filter_Add_2Ux1U_2U_4  instance: DC_Filter_Add_2Ux1U_2U_4_152
         assign DC_Filter_Add_2Ux1U_2U_4_152_out1 = s_reg_170 + 2'd1;

         // resource: regr_en_sc_5
         always @(posedge i_clk)
          begin :drive_global_state
            if (i_rst == 1'b0) begin
               global_state <= 5'd00;
            end
            else begin
               case (stall0) 

                  1'b1:                   begin
                  end
                  
                  1'b0:                   begin
                     global_state <= global_state_next;
                  end
                  
               endcase

            end
         end

         // resource: mux_5bx10i9c
         always @(s_reg_171 or s_reg_173 or s_reg_177[8:0] or DC_Filter_Add_12Ux1U_12U_4_88_out1[8:0] or DC_Filter_Add_2Ux1U_2U_4_89_out1 or DC_Filter_Add_2Ux1U_2U_4_90_out1 or DC_Filter_Add_1Ux1U_2U_4_108_out1 or DC_Filter_Add_2Ux1U_2U_4_104_out1 or DC_Filter_LessThan_12Ux9U_1U_4_105_out1 or DC_Filter_LessThan_12Ux9U_1U_4_113_out1 or DC_Filter_Add_2Ux1U_2U_4_114_out1 or DC_Filter_Add_2Ux1U_2U_4_121_out1 or DC_Filter_Add_2Ux1U_2U_4_127_out1 or DC_Filter_Add_2Ux1U_2U_4_144_out1 or 
DC_Filter_Add_2Ux1U_2U_4_151_out1
          or DC_Filter_Add_2Ux1U_2U_4_152_out1 or global_state)
          begin :drive_global_state_next
            case (global_state) 

               5'd03:                begin
                  case (DC_Filter_Add_12Ux1U_12U_4_88_out1[8:0]) 

                     9'd258:                      begin
                        case (DC_Filter_Add_2Ux1U_2U_4_90_out1) 

                           2'd3:                            begin
                              /* state8 */
                              case (DC_Filter_Add_2Ux1U_2U_4_89_out1) 

                                 2'd3:                                  begin
                                    global_state_next = 5'd18;
                                 end
                                 
                                 default:                                  begin
                                    global_state_next = 5'd00;
                                 end
                                 
                              endcase

                           end
                           
                           default:                            begin
                              global_state_next = 5'd00;
                           end
                           
                        endcase

                     end
                     
                     default:                      begin
                        global_state_next = 5'd00;
                     end
                     
                  endcase

               end
               
               5'd10:                begin
                  case (s_reg_171) 

                     9'd257:                      begin
                        case (DC_Filter_Add_1Ux1U_2U_4_108_out1) 

                           2'd2:                            begin
                              /* state23 */
                              case (DC_Filter_Add_2Ux1U_2U_4_104_out1) 

                                 2'd3:                                  begin
                                    if (DC_Filter_LessThan_12Ux9U_1U_4_105_out1) begin
                                       global_state_next = 5'd14;
                                    end
                                    else begin
                                       if (DC_Filter_LessThan_12Ux9U_1U_4_113_out1) begin
                                          global_state_next = global_state + 5'd01;
                                       end
                                       else begin
                                          case (DC_Filter_Add_2Ux1U_2U_4_127_out1) 

                                             2'd3:                                              begin
                                                global_state_next = 5'd25;
                                             end
                                             
                                             default:                                              begin
                                                global_state_next = 5'd24;
                                             end
                                             
                                          endcase

                                       end
                                    end
                                 end
                                 
                                 default:                                  begin
                                    global_state_next = 5'd04;
                                 end
                                 
                              endcase

                           end
                           
                           default:                            begin
                              global_state_next = 5'd04;
                           end
                           
                        endcase

                     end
                     
                     default:                      begin
                        global_state_next = 5'd04;
                     end
                     
                  endcase

               end
               
               5'd13:                begin
                  case (DC_Filter_Add_2Ux1U_2U_4_121_out1) 

                     2'd3:                      begin
                        case (DC_Filter_Add_12Ux1U_12U_4_88_out1[8:0]) 

                           9'd257:                            begin
                              case (DC_Filter_Add_2Ux1U_2U_4_127_out1) 

                                 2'd3:                                  begin
                                    global_state_next = 5'd25;
                                 end
                                 
                                 default:                                  begin
                                    global_state_next = 5'd24;
                                 end
                                 
                              endcase

                           end
                           
                           default:                            begin
                              global_state_next = 5'd11;
                           end
                           
                        endcase

                     end
                     
                     default:                      begin
                        global_state_next = 5'd11;
                     end
                     
                  endcase

               end
               
               5'd17:                begin
                  case (s_reg_177[8:0]) 

                     9'd257:                      begin
                        case (DC_Filter_Add_2Ux1U_2U_4_127_out1) 

                           2'd3:                            begin
                              global_state_next = 5'd25;
                           end
                           
                           default:                            begin
                              global_state_next = 5'd24;
                           end
                           
                        endcase

                     end
                     
                     default:                      begin
                        global_state_next = 5'd14;
                     end
                     
                  endcase

               end
               
               5'd23:                begin
                  case (DC_Filter_Add_12Ux1U_12U_4_88_out1[8:0]) 

                     9'd257:                      begin
                        case (DC_Filter_Add_2Ux1U_2U_4_114_out1) 

                           2'd3:                            begin
                              case (DC_Filter_Add_2Ux1U_2U_4_127_out1) 

                                 2'd3:                                  begin
                                    global_state_next = 5'd25;
                                 end
                                 
                                 default:                                  begin
                                    global_state_next = global_state + 5'd01;
                                 end
                                 
                              endcase

                           end
                           
                           default:                            begin
                              global_state_next = 5'd18;
                           end
                           
                        endcase

                     end
                     
                     default:                      begin
                        global_state_next = 5'd18;
                     end
                     
                  endcase

               end
               
               5'd24:                begin
                  case (DC_Filter_Add_2Ux1U_2U_4_127_out1) 

                     2'd3:                      begin
                        global_state_next = global_state + 5'd01;
                     end
                     
                     default:                      begin
                        global_state_next = 5'd24;
                     end
                     
                  endcase

               end
               
               5'd26, 5'd30:                begin
                  global_state_next = 5'd27;
               end
               
               5'd29:                begin
                  case (DC_Filter_Add_2Ux1U_2U_4_144_out1) 

                     2'd3:                      begin
                        case (DC_Filter_Add_2Ux1U_2U_4_152_out1) 

                           2'd3:                            begin
                              /* state81 */
                              case (DC_Filter_Add_2Ux1U_2U_4_151_out1) 

                                 2'd3:                                  begin
                                    global_state_next = 5'd31;
                                 end
                                 
                                 default:                                  begin
                                    global_state_next = 5'd25;
                                 end
                                 
                              endcase

                           end
                           
                           default:                            begin
                              global_state_next = 5'd25;
                           end
                           
                        endcase

                     end
                     
                     default:                      begin
                        global_state_next = global_state + 5'd01;
                     end
                     
                  endcase

               end
               
               5'd31:                begin
                  /* state85 */
                  case (DC_Filter_Add_12Ux1U_12U_4_88_out1[8:0]) 

                     9'd256:                      begin
                        case (s_reg_173) 

                           12'd0000:                            begin
                              global_state_next = 5'd18;
                           end
                           
                           default:                            begin
                              global_state_next = 5'd04;
                           end
                           
                        endcase

                     end
                     
                     default:                      begin
                        case (DC_Filter_Add_2Ux1U_2U_4_127_out1) 

                           2'd3:                            begin
                              global_state_next = 5'd25;
                           end
                           
                           default:                            begin
                              global_state_next = 5'd24;
                           end
                           
                        endcase

                     end
                     
                  endcase

               end
               
               default:                begin
                  global_state_next = global_state + 5'd01;
               end
               
            endcase

         end

         // resource: mux_1bx2i2c
         // resource: regr_en_sc_1
         always @(posedge i_clk)
          begin :drive_gs_ctrl0
            if (i_rst == 1'b0) begin
               gs_ctrl0 <= 1'b0;
            end
            else begin
               case (stall0) 

                  1'b1:                   begin
                  end
                  
                  1'b0:                   begin
                     case (global_state_next) 

                        5'd29:                         begin
                           gs_ctrl0 <= 1'b1;
                        end
                        
                        default:                         begin
                           gs_ctrl0 <= 1'b0;
                        end
                        
                     endcase

                  end
                  
               endcase

            end
         end

         // resource: mux_2bx3i3c
         // resource: regr_en_sc_2
         always @(posedge i_clk)
          begin :drive_gs_ctrl1
            if (i_rst == 1'b0) begin
               gs_ctrl1 <= 2'd0;
            end
            else begin
               case (stall0) 

                  1'b1:                   begin
                  end
                  
                  1'b0:                   begin
                     case (global_state_next) 

                        5'd12, 5'd29:                         begin
                           gs_ctrl1 <= 2'd1;
                        end
                        
                        5'd18:                         begin
                           gs_ctrl1 <= 2'd2;
                        end
                        
                        default:                         begin
                           gs_ctrl1 <= 2'd0;
                        end
                        
                     endcase

                  end
                  
               endcase

            end
         end

         // resource: mux_3bx6i6c
         // resource: regr_en_sc_3
         always @(posedge i_clk)
          begin :drive_gs_ctrl2
            if (i_rst == 1'b0) begin
               gs_ctrl2 <= 3'd0;
            end
            else begin
               case (stall0) 

                  1'b1:                   begin
                  end
                  
                  1'b0:                   begin
                     case (global_state_next) 

                        5'd10, 5'd17:                         begin
                           gs_ctrl2 <= 3'd1;
                        end
                        
                        5'd15:                         begin
                           gs_ctrl2 <= 3'd2;
                        end
                        
                        5'd16:                         begin
                           gs_ctrl2 <= 3'd3;
                        end
                        
                        5'd18:                         begin
                           gs_ctrl2 <= 3'd4;
                        end
                        
                        5'd29:                         begin
                           gs_ctrl2 <= 3'd5;
                        end
                        
                        default:                         begin
                           gs_ctrl2 <= 3'd0;
                        end
                        
                     endcase

                  end
                  
               endcase

            end
         end

         // resource: mux_3bx5i5c
         // resource: regr_en_sc_3
         always @(posedge i_clk)
          begin :drive_gs_ctrl3
            if (i_rst == 1'b0) begin
               gs_ctrl3 <= 3'd0;
            end
            else begin
               case (stall0) 

                  1'b1:                   begin
                  end
                  
                  1'b0:                   begin
                     case (global_state_next) 

                        5'd10:                         begin
                           gs_ctrl3 <= 3'd1;
                        end
                        
                        5'd17:                         begin
                           gs_ctrl3 <= 3'd2;
                        end
                        
                        5'd28:                         begin
                           gs_ctrl3 <= 3'd3;
                        end
                        
                        5'd29:                         begin
                           gs_ctrl3 <= 3'd4;
                        end
                        
                        default:                         begin
                           gs_ctrl3 <= 3'd0;
                        end
                        
                     endcase

                  end
                  
               endcase

            end
         end

         // resource: mux_2bx3i3c
         // resource: regr_en_sc_2
         always @(posedge i_clk)
          begin :drive_gs_ctrl4
            if (i_rst == 1'b0) begin
               gs_ctrl4 <= 2'd0;
            end
            else begin
               case (stall0) 

                  1'b1:                   begin
                  end
                  
                  1'b0:                   begin
                     case (global_state_next) 

                        5'd10, 5'd17:                         begin
                           gs_ctrl4 <= 2'd1;
                        end
                        
                        5'd31:                         begin
                           gs_ctrl4 <= 2'd2;
                        end
                        
                        default:                         begin
                           gs_ctrl4 <= 2'd0;
                        end
                        
                     endcase

                  end
                  
               endcase

            end
         end

         // resource: mux_1bx2i2c
         // resource: regr_en_sc_1
         always @(posedge i_clk)
          begin :drive_gs_ctrl5
            if (i_rst == 1'b0) begin
               gs_ctrl5 <= 1'b0;
            end
            else begin
               case (stall0) 

                  1'b1:                   begin
                  end
                  
                  1'b0:                   begin
                     case (global_state_next) 

                        5'd14:                         begin
                           gs_ctrl5 <= 1'b1;
                        end
                        
                        default:                         begin
                           gs_ctrl5 <= 1'b0;
                        end
                        
                     endcase

                  end
                  
               endcase

            end
         end

         // resource: mux_3bx5i5c
         // resource: regr_en_sc_3
         always @(posedge i_clk)
          begin :drive_gs_ctrl6
            if (i_rst == 1'b0) begin
               gs_ctrl6 <= 3'd0;
            end
            else begin
               case (stall0) 

                  1'b1:                   begin
                  end
                  
                  1'b0:                   begin
                     case (global_state_next) 

                        5'd08:                         begin
                           gs_ctrl6 <= 3'd1;
                        end
                        
                        5'd14, 5'd18:                         begin
                           gs_ctrl6 <= 3'd2;
                        end
                        
                        5'd15, 5'd20:                         begin
                           gs_ctrl6 <= 3'd3;
                        end
                        
                        5'd16, 5'd22:                         begin
                           gs_ctrl6 <= 3'd4;
                        end
                        
                        default:                         begin
                           gs_ctrl6 <= 3'd0;
                        end
                        
                     endcase

                  end
                  
               endcase

            end
         end

         // resource: mux_1bx2i2c
         // resource: regr_en_sc_1
         always @(posedge i_clk)
          begin :drive_gs_ctrl7
            if (i_rst == 1'b0) begin
               gs_ctrl7 <= 1'b0;
            end
            else begin
               case (stall0) 

                  1'b1:                   begin
                  end
                  
                  1'b0:                   begin
                     case (global_state_next) 

                        5'd02, 5'd06, 5'd08, 5'd12, 5'd14, 5'd15, 5'd16, 5'd18, 5'd20, 5'd22, 5'd28:                         begin
                           gs_ctrl7 <= 1'b1;
                        end
                        
                        default:                         begin
                           gs_ctrl7 <= 1'b0;
                        end
                        
                     endcase

                  end
                  
               endcase

            end
         end

         // resource: mux_1bx2i2c
         // resource: regr_en_sc_1
         always @(posedge i_clk)
          begin :drive_gs_ctrl8
            if (i_rst == 1'b0) begin
               gs_ctrl8 <= 1'b0;
            end
            else begin
               case (stall0) 

                  1'b1:                   begin
                  end
                  
                  1'b0:                   begin
                     case (global_state_next) 

                        5'd02, 5'd08, 5'd12, 5'd14, 5'd15, 5'd16, 5'd18, 5'd20, 5'd22:                         begin
                           gs_ctrl8 <= 1'b1;
                        end
                        
                        default:                         begin
                           gs_ctrl8 <= 1'b0;
                        end
                        
                     endcase

                  end
                  
               endcase

            end
         end

         // resource: mux_1bx2i2c
         // resource: regr_en_sc_1
         always @(posedge i_clk)
          begin :drive_gs_ctrl9
            if (i_rst == 1'b0) begin
               gs_ctrl9 <= 1'b0;
            end
            else begin
               case (stall0) 

                  1'b1:                   begin
                  end
                  
                  1'b0:                   begin
                     case (global_state_next) 

                        5'd24:                         begin
                           gs_ctrl9 <= 1'b1;
                        end
                        
                        default:                         begin
                           gs_ctrl9 <= 1'b0;
                        end
                        
                     endcase

                  end
                  
               endcase

            end
         end

         // resource: mux_1bx2i2c
         // resource: regr_en_sc_1
         always @(posedge i_clk)
          begin :drive_gs_ctrl10
            if (i_rst == 1'b0) begin
               gs_ctrl10 <= 1'b0;
            end
            else begin
               case (stall0) 

                  1'b1:                   begin
                  end
                  
                  1'b0:                   begin
                     case (global_state_next) 

                        5'd24, 5'd28:                         begin
                           gs_ctrl10 <= 1'b1;
                        end
                        
                        default:                         begin
                           gs_ctrl10 <= 1'b0;
                        end
                        
                     endcase

                  end
                  
               endcase

            end
         end

         // resource: mux_24bx2i0c
         // resource: regr_en_24
         always @(posedge i_clk)
          begin :drive_o_rgb_inside_data
            case (stall1) 

               1'b1:                begin
               end
               
               1'b0:                begin
                  case (global_state1) 

                     5'd13, 5'd17:                      begin
                        o_rgb_inside_data <= i_rgb_data;
                     end
                     
                     5'd28:                      begin
                        if (2'd3 == DC_Filter_Add_2Ux1U_2U_4_69_out1 && (2'd3 == DC_Filter_Add_2Ux1U_2U_4_77_out1 && 2'd3 == DC_Filter_Add_2Ux1U_2U_4_76_out1)) begin
                           o_rgb_inside_data <= {DC_Filter_N_Mux_12_2_3_4_73_out1[11:4], {DC_Filter_N_Mux_12_2_3_4_74_out1[11:4], DC_Filter_N_Mux_12_2_3_4_75_out1[11:4]}};
                        end
                     end
                     
                  endcase

               end
               
            endcase

         end

         // resource: mux_1bx2i2c
         // resource: regr_en_ss_1
         always @(posedge i_clk)
          begin :drive_i_rgb_m_busy_req_0
            if (i_rst == 1'b0) begin
               i_rgb_m_busy_req_0 <= 1'd1;
            end
            else begin
               case (stall1) 

                  1'b1:                   begin
                  end
                  
                  1'b0:                   begin
                     case (global_state1) 

                        5'd03:                         begin
                           if (9'd258 == DC_Filter_Add_12Ux1U_12U_4_13_out1[8:0] && (2'd3 == DC_Filter_Add_2Ux1U_2U_4_15_out1 && 2'd3 == DC_Filter_Add_2Ux1U_2U_4_14_out1)) begin
                              i_rgb_m_busy_req_0 <= 1'd0;
                           end
                        end
                        
                        5'd09:                         begin
                           if (9'd257 == s_reg_80 && (2'd2 == DC_Filter_Add_1Ux1U_2U_4_17_out1 && (2'd3 == DC_Filter_Add_2Ux1U_2U_4_28_out1 && DC_Filter_LessThan_12Ux9U_1U_4_29_out1))) begin
                              i_rgb_m_busy_req_0 <= 1'd0;
                           end
                        end
                        
                        5'd13, 5'd17:                         begin
                           i_rgb_m_busy_req_0 <= 1'd1;
                        end
                        
                        5'd16:                         begin
                           if (9'd257 != s_reg_86[8:0]) begin
                              i_rgb_m_busy_req_0 <= 1'd0;
                           end
                        end
                        
                        5'd22:                         begin
                           case (DC_Filter_Add_12Ux1U_12U_4_13_out1[8:0]) 

                              9'd257:                               begin
                                 if (2'd3 != DC_Filter_Add_2Ux1U_2U_4_41_out1) begin
                                    i_rgb_m_busy_req_0 <= 1'd0;
                                 end
                              end
                              
                              default:                               begin
                                 i_rgb_m_busy_req_0 <= 1'd0;
                              end
                              
                           endcase

                        end
                        
                        5'd30:                         begin
                           if (9'd256 == DC_Filter_Add_12Ux1U_12U_4_13_out1[8:0] && 12'd0000 == s_reg_82) begin
                              i_rgb_m_busy_req_0 <= 1'd0;
                           end
                        end
                        
                     endcase

                  end
                  
               endcase

            end
         end

         // resource: regr_en_sc_1
         always @(posedge i_clk)
          begin :drive_o_rgb_inside_m_req_m_trig_req
            if (i_rst == 1'b0) begin
               o_rgb_inside_m_req_m_trig_req <= 1'd0;
            end
            else begin
               case (stall1) 

                  1'b1:                   begin
                  end
                  
                  1'b0:                   begin
                     case (global_state1) 

                        5'd28:                         begin
                           if (2'd3 == DC_Filter_Add_2Ux1U_2U_4_69_out1 && (2'd3 == DC_Filter_Add_2Ux1U_2U_4_77_out1 && 2'd3 == DC_Filter_Add_2Ux1U_2U_4_76_out1)) begin
                              o_rgb_inside_m_req_m_trig_req <= DC_Filter_Not_1U_1U_1_6_out1;
                           end
                        end
                        
                     endcase

                  end
                  
               endcase

            end
         end

         // resource: mux_1bx3i1c
         always @(DC_Filter_And_1Ux1U_1U_4_79_out1 or DC_Filter_gen_busy_r_4_155_out1[0] or global_state1)
          begin :drive_stall1
            case (global_state1) 

               5'd13, 5'd17:                begin
                  stall1 = DC_Filter_gen_busy_r_4_155_out1[0];
               end
               
               5'd30:                begin
                  stall1 = DC_Filter_And_1Ux1U_1U_4_79_out1;
               end
               
               default:                begin
                  stall1 = 1'b0;
               end
               
            endcase

         end

         // resource: mux_12bx2i0c
         // resource: regr_en_sc_12
         always @(posedge i_clk)
          begin :drive_s_reg_76
            if (i_rst == 1'b0) begin
               s_reg_76 <= 12'd0000;
            end
            else begin
               case (stall1) 

                  1'b1:                   begin
                  end
                  
                  1'b0:                   begin
                     case (global_state1) 

                        5'd09:                         begin
                           if (9'd257 == s_reg_80 && (2'd2 == DC_Filter_Add_1Ux1U_2U_4_17_out1 && (2'd3 == DC_Filter_Add_2Ux1U_2U_4_28_out1 && (!DC_Filter_LessThan_12Ux9U_1U_4_29_out1 && !DC_Filter_LessThan_12Ux9U_1U_4_37_out1)))) begin
                              /* state58 */
                              s_reg_76 <= DC_Filter_N_Mux_12_2_0_4_56_out1;
                           end
                        end
                        
                        5'd12:                         begin
                           if (2'd3 == DC_Filter_Add_2Ux1U_2U_4_46_out1 && 9'd257 == DC_Filter_Add_12Ux1U_12U_4_13_out1[8:0]) begin
                              /* state62 */
                              s_reg_76 <= DC_Filter_N_Mux_12_2_0_4_56_out1;
                           end
                        end
                        
                        5'd16:                         begin
                           if (9'd257 == s_reg_86[8:0]) begin
                              /* state61 */
                              s_reg_76 <= DC_Filter_N_Mux_12_2_0_4_56_out1;
                           end
                        end
                        
                        5'd22:                         begin
                           if (9'd257 == DC_Filter_Add_12Ux1U_12U_4_13_out1[8:0] && 2'd3 == DC_Filter_Add_2Ux1U_2U_4_41_out1) begin
                              /* state59 */
                              s_reg_76 <= DC_Filter_N_Mux_12_2_0_4_56_out1;
                           end
                        end
                        
                        5'd23:                         begin
                           /* state63 */
                           s_reg_76 <= DC_Filter_N_Mux_12_2_0_4_56_out1;
                        end
                        
                        5'd28:                         begin
                           /* state76 */
                           s_reg_76 <= DC_Filter_N_Mux_12_2_3_4_73_out1;
                        end
                        
                        5'd30:                         begin
                           if (9'd256 != DC_Filter_Add_12Ux1U_12U_4_13_out1[8:0]) begin
                              /* state60 */
                              s_reg_76 <= DC_Filter_N_Mux_12_2_0_4_56_out1;
                           end
                        end
                        
                     endcase

                  end
                  
               endcase

            end
         end

         // resource: mux_12bx2i0c
         // resource: regr_en_sc_12
         always @(posedge i_clk)
          begin :drive_s_reg_77
            if (i_rst == 1'b0) begin
               s_reg_77 <= 12'd0000;
            end
            else begin
               case (stall1) 

                  1'b1:                   begin
                  end
                  
                  1'b0:                   begin
                     case (global_state1) 

                        5'd09:                         begin
                           if (9'd257 == s_reg_80 && (2'd2 == DC_Filter_Add_1Ux1U_2U_4_17_out1 && (2'd3 == DC_Filter_Add_2Ux1U_2U_4_28_out1 && (!DC_Filter_LessThan_12Ux9U_1U_4_29_out1 && !DC_Filter_LessThan_12Ux9U_1U_4_37_out1)))) begin
                              s_reg_77 <= DC_Filter_N_Mux_12_2_0_4_57_out1;
                           end
                        end
                        
                        5'd12:                         begin
                           if (2'd3 == DC_Filter_Add_2Ux1U_2U_4_46_out1 && 9'd257 == DC_Filter_Add_12Ux1U_12U_4_13_out1[8:0]) begin
                              s_reg_77 <= DC_Filter_N_Mux_12_2_0_4_57_out1;
                           end
                        end
                        
                        5'd16:                         begin
                           if (9'd257 == s_reg_86[8:0]) begin
                              s_reg_77 <= DC_Filter_N_Mux_12_2_0_4_57_out1;
                           end
                        end
                        
                        5'd22:                         begin
                           if (9'd257 == DC_Filter_Add_12Ux1U_12U_4_13_out1[8:0] && 2'd3 == DC_Filter_Add_2Ux1U_2U_4_41_out1) begin
                              s_reg_77 <= DC_Filter_N_Mux_12_2_0_4_57_out1;
                           end
                        end
                        
                        5'd23:                         begin
                           s_reg_77 <= DC_Filter_N_Mux_12_2_0_4_57_out1;
                        end
                        
                        5'd28:                         begin
                           s_reg_77 <= DC_Filter_N_Mux_12_2_3_4_74_out1;
                        end
                        
                        5'd30:                         begin
                           if (9'd256 != DC_Filter_Add_12Ux1U_12U_4_13_out1[8:0]) begin
                              s_reg_77 <= DC_Filter_N_Mux_12_2_0_4_57_out1;
                           end
                        end
                        
                     endcase

                  end
                  
               endcase

            end
         end

         // resource: mux_12bx2i0c
         // resource: regr_en_sc_12
         always @(posedge i_clk)
          begin :drive_s_reg_78
            if (i_rst == 1'b0) begin
               s_reg_78 <= 12'd0000;
            end
            else begin
               case (stall1) 

                  1'b1:                   begin
                  end
                  
                  1'b0:                   begin
                     case (global_state1) 

                        5'd09:                         begin
                           if (9'd257 == s_reg_80 && (2'd2 == DC_Filter_Add_1Ux1U_2U_4_17_out1 && (2'd3 == DC_Filter_Add_2Ux1U_2U_4_28_out1 && (!DC_Filter_LessThan_12Ux9U_1U_4_29_out1 && !DC_Filter_LessThan_12Ux9U_1U_4_37_out1)))) begin
                              s_reg_78 <= DC_Filter_N_Mux_12_2_1_4_58_out1;
                           end
                        end
                        
                        5'd12:                         begin
                           if (2'd3 == DC_Filter_Add_2Ux1U_2U_4_46_out1 && 9'd257 == DC_Filter_Add_12Ux1U_12U_4_13_out1[8:0]) begin
                              s_reg_78 <= DC_Filter_N_Mux_12_2_1_4_58_out1;
                           end
                        end
                        
                        5'd16:                         begin
                           if (9'd257 == s_reg_86[8:0]) begin
                              s_reg_78 <= DC_Filter_N_Mux_12_2_1_4_58_out1;
                           end
                        end
                        
                        5'd22:                         begin
                           if (9'd257 == DC_Filter_Add_12Ux1U_12U_4_13_out1[8:0] && 2'd3 == DC_Filter_Add_2Ux1U_2U_4_41_out1) begin
                              s_reg_78 <= DC_Filter_N_Mux_12_2_1_4_58_out1;
                           end
                        end
                        
                        5'd23:                         begin
                           s_reg_78 <= DC_Filter_N_Mux_12_2_1_4_58_out1;
                        end
                        
                        5'd28:                         begin
                           s_reg_78 <= DC_Filter_N_Mux_12_2_3_4_75_out1;
                        end
                        
                        5'd30:                         begin
                           if (9'd256 != DC_Filter_Add_12Ux1U_12U_4_13_out1[8:0]) begin
                              s_reg_78 <= DC_Filter_N_Mux_12_2_1_4_58_out1;
                           end
                        end
                        
                     endcase

                  end
                  
               endcase

            end
         end

         // resource: mux_2bx6i2c
         // resource: regr_en_sc_2
         always @(posedge i_clk)
          begin :drive_s_reg_79
            if (i_rst == 1'b0) begin
               s_reg_79 <= 2'd0;
            end
            else begin
               case (stall1) 

                  1'b1:                   begin
                  end
                  
                  1'b0:                   begin
                     case (global_state1) 

                        5'd03:                         begin
                           if (9'd258 == DC_Filter_Add_12Ux1U_12U_4_13_out1[8:0] && 2'd3 == DC_Filter_Add_2Ux1U_2U_4_15_out1) begin
                              /* state8 */
                              case (DC_Filter_Add_2Ux1U_2U_4_14_out1) 

                                 2'd3:                                  begin
                                    s_reg_79 <= 2'd1;
                                 end
                                 
                                 default:                                  begin
                                    s_reg_79 <= DC_Filter_Add_2Ux1U_2U_4_14_out1;
                                 end
                                 
                              endcase

                           end
                        end
                        
                        5'd09:                         begin
                           if (9'd257 == s_reg_80 && 2'd2 == DC_Filter_Add_1Ux1U_2U_4_17_out1) begin
                              /* state22 */
                              case (DC_Filter_Add_2Ux1U_2U_4_28_out1) 

                                 2'd3:                                  begin
                                    s_reg_79 <= 2'd0;
                                 end
                                 
                                 default:                                  begin
                                    s_reg_79 <= DC_Filter_Add_2Ux1U_2U_4_28_out1;
                                 end
                                 
                              endcase

                           end
                        end
                        
                        5'd12, 5'd16, 5'd23:                         begin
                           s_reg_79 <= 2'd0;
                        end
                        
                        5'd22:                         begin
                           if (9'd257 == DC_Filter_Add_12Ux1U_12U_4_13_out1[8:0]) begin
                              case (DC_Filter_Add_2Ux1U_2U_4_41_out1) 

                                 2'd3:                                  begin
                                    s_reg_79 <= 2'd0;
                                 end
                                 
                                 default:                                  begin
                                    s_reg_79 <= DC_Filter_Add_2Ux1U_2U_4_41_out1;
                                 end
                                 
                              endcase

                           end
                        end
                        
                        5'd28:                         begin
                           if (2'd3 == DC_Filter_Add_2Ux1U_2U_4_69_out1) begin
                              case (DC_Filter_Add_2Ux1U_2U_4_77_out1) 

                                 2'd3:                                  begin
                                    if (2'd3 != DC_Filter_Add_2Ux1U_2U_4_76_out1) begin
                                       s_reg_79 <= 2'd0;
                                    end
                                 end
                                 
                                 default:                                  begin
                                    s_reg_79 <= DC_Filter_Add_2Ux1U_2U_4_77_out1;
                                 end
                                 
                              endcase

                           end
                        end
                        
                        5'd30:                         begin
                           /* state84 */
                           case (DC_Filter_Add_12Ux1U_12U_4_13_out1[8:0]) 

                              9'd256:                               begin
                                 case (s_reg_82) 

                                    12'd0000:                                     begin
                                       s_reg_79 <= 2'd1;
                                    end
                                    
                                    default:                                     begin
                                       s_reg_79 <= 2'd0;
                                    end
                                    
                                 endcase

                              end
                              
                              default:                               begin
                                 s_reg_79 <= 2'd0;
                              end
                              
                           endcase

                        end
                        
                     endcase

                  end
                  
               endcase

            end
         end

         // resource: mux_9bx5i2c
         // resource: regr_en_sc_9
         always @(posedge i_clk)
          begin :drive_s_reg_80
            if (i_rst == 1'b0) begin
               s_reg_80 <= 9'd000;
            end
            else begin
               case (stall1) 

                  1'b1:                   begin
                  end
                  
                  1'b0:                   begin
                     case (global_state1) 

                        5'd03:                         begin
                           case (DC_Filter_Add_12Ux1U_12U_4_13_out1[8:0]) 

                              9'd258:                               begin
                                 case (DC_Filter_Add_2Ux1U_2U_4_15_out1) 

                                    2'd3:                                     begin
                                       /* state8 */
                                       case (DC_Filter_Add_2Ux1U_2U_4_14_out1) 

                                          2'd3:                                           begin
                                             s_reg_80 <= 9'd001;
                                          end
                                          
                                          default:                                           begin
                                             s_reg_80 <= 9'd000;
                                          end
                                          
                                       endcase

                                    end
                                    
                                    default:                                     begin
                                       s_reg_80 <= 9'd000;
                                    end
                                    
                                 endcase

                              end
                              
                              default:                               begin
                                 s_reg_80 <= DC_Filter_Add_12Ux1U_12U_4_13_out1[8:0];
                              end
                              
                           endcase

                        end
                        
                        5'd08:                         begin
                           s_reg_80 <= DC_Filter_Add_12Ux1U_12U_4_13_out1[8:0];
                        end
                        
                        5'd09:                         begin
                           if (9'd257 == s_reg_80) begin
                              case (DC_Filter_Add_1Ux1U_2U_4_17_out1) 

                                 2'd2:                                  begin
                                    /* state22 */
                                    case (DC_Filter_Add_2Ux1U_2U_4_28_out1) 

                                       2'd3:                                        begin
                                          if (DC_Filter_LessThan_12Ux9U_1U_4_29_out1) begin
                                             s_reg_80 <= 9'd001;
                                          end
                                          else begin
                                             s_reg_80 <= {8'b00000000, DC_Filter_LessThan_12Ux9U_1U_4_37_out1};
                                          end
                                       end
                                       
                                       default:                                        begin
                                          s_reg_80 <= 9'd001;
                                       end
                                       
                                    endcase

                                 end
                                 
                                 default:                                  begin
                                    s_reg_80 <= 9'd001;
                                 end
                                 
                              endcase

                           end
                        end
                        
                        5'd12:                         begin
                           if (2'd3 == DC_Filter_Add_2Ux1U_2U_4_46_out1) begin
                              case (DC_Filter_Add_12Ux1U_12U_4_13_out1[8:0]) 

                                 9'd257:                                  begin
                                    s_reg_80 <= 9'd000;
                                 end
                                 
                                 default:                                  begin
                                    s_reg_80 <= DC_Filter_Add_12Ux1U_12U_4_13_out1[8:0];
                                 end
                                 
                              endcase

                           end
                        end
                        
                        5'd16:                         begin
                           case (s_reg_86[8:0]) 

                              9'd257:                               begin
                                 s_reg_80 <= 9'd000;
                              end
                              
                              default:                               begin
                                 s_reg_80 <= s_reg_86[8:0];
                              end
                              
                           endcase

                        end
                        
                        5'd22:                         begin
                           case (DC_Filter_Add_12Ux1U_12U_4_13_out1[8:0]) 

                              9'd257:                               begin
                                 case (DC_Filter_Add_2Ux1U_2U_4_41_out1) 

                                    2'd3:                                     begin
                                       s_reg_80 <= 9'd000;
                                    end
                                    
                                    default:                                     begin
                                       s_reg_80 <= 9'd001;
                                    end
                                    
                                 endcase

                              end
                              
                              default:                               begin
                                 s_reg_80 <= DC_Filter_Add_12Ux1U_12U_4_13_out1[8:0];
                              end
                              
                           endcase

                        end
                        
                        5'd30:                         begin
                           /* state84 */
                           case (DC_Filter_Add_12Ux1U_12U_4_13_out1[8:0]) 

                              9'd256:                               begin
                                 s_reg_80 <= 9'd001;
                              end
                              
                              default:                               begin
                                 s_reg_80 <= DC_Filter_Add_12Ux1U_12U_4_13_out1[8:0];
                              end
                              
                           endcase

                        end
                        
                     endcase

                  end
                  
               endcase

            end
         end

         // resource: mux_4bx4i0c
         // resource: regr_en_4
         always @(posedge i_clk)
          begin :drive_s_reg_81
            case (stall1) 

               1'b1:                begin
               end
               
               1'b0:                begin
                  case (global_state1) 

                     5'd01:                      begin
                        s_reg_81 <= DC_Filter_Add_4Ux2U_4U_4_10_out1;
                     end
                     
                     5'd04:                      begin
                        s_reg_81 <= DC_Filter_Add_4Ux2U_4U_4_18_out1;
                     end
                     
                     5'd10:                      begin
                        s_reg_81 <= DC_Filter_Add_4Ux2U_4U_4_43_out1;
                     end
                     
                     5'd25:                      begin
                        s_reg_81 <= mask1_out1;
                     end
                     
                  endcase

               end
               
            endcase

         end

         // resource: mux_12bx3i1c
         // resource: regr_en_12
         always @(posedge i_clk)
          begin :drive_s_reg_82
            case (stall1) 

               1'b1:                begin
               end
               
               1'b0:                begin
                  case (global_state1) 

                     5'd12:                      begin
                        s_reg_82 <= s_reg_86;
                     end
                     
                     5'd16:                      begin
                        if (9'd257 == s_reg_86[8:0]) begin
                           s_reg_82 <= DC_Filter_Add_12Ux1U_12U_4_13_out1;
                        end
                     end
                     
                     5'd22:                      begin
                        s_reg_82 <= 12'd0003;
                     end
                     
                  endcase

               end
               
            endcase

         end

         // resource: mux_2bx4i1c
         // resource: regr_en_2
         always @(posedge i_clk)
          begin :drive_s_reg_83
            case (stall1) 

               1'b1:                begin
               end
               
               1'b0:                begin
                  case (global_state1) 

                     5'd09:                      begin
                        if (9'd257 == s_reg_80) begin
                           case (DC_Filter_Add_1Ux1U_2U_4_17_out1) 

                              2'd2:                               begin
                                 s_reg_83 <= 2'd0;
                              end
                              
                              default:                               begin
                                 s_reg_83 <= DC_Filter_Add_1Ux1U_2U_4_17_out1;
                              end
                              
                           endcase

                        end
                     end
                     
                     5'd12:                      begin
                        case (DC_Filter_Add_2Ux1U_2U_4_46_out1) 

                           2'd3:                            begin
                              s_reg_83 <= 2'd0;
                           end
                           
                           default:                            begin
                              s_reg_83 <= DC_Filter_Add_2Ux1U_2U_4_46_out1;
                           end
                           
                        endcase

                     end
                     
                     5'd16, 5'd22:                      begin
                        s_reg_83 <= 2'd0;
                     end
                     
                     5'd28:                      begin
                        if (2'd3 == DC_Filter_Add_2Ux1U_2U_4_69_out1 && (2'd3 == DC_Filter_Add_2Ux1U_2U_4_77_out1 && 2'd3 != DC_Filter_Add_2Ux1U_2U_4_76_out1)) begin
                           s_reg_83 <= DC_Filter_Add_2Ux1U_2U_4_76_out1;
                        end
                     end
                     
                     5'd30:                      begin
                        /* state84 */
                        case (DC_Filter_Add_12Ux1U_12U_4_13_out1[8:0]) 

                           9'd256:                            begin
                              if (12'd0000 != s_reg_82) begin
                                 s_reg_83 <= 2'd0;
                              end
                           end
                           
                           default:                            begin
                              s_reg_83 <= 2'd0;
                           end
                           
                        endcase

                     end
                     
                  endcase

               end
               
            endcase

         end

         // resource: mux_4bx4i0c
         // resource: regr_en_4
         always @(posedge i_clk)
          begin :drive_s_reg_84
            case (stall1) 

               1'b1:                begin
               end
               
               1'b0:                begin
                  case (global_state1) 

                     5'd05:                      begin
                        s_reg_84 <= DC_Filter_Add_4Ux1U_4U_4_20_out1;
                     end
                     
                     5'd18:                      begin
                        s_reg_84 <= {1'b0, DC_Filter_Add_2Ux2U_3U_4_30_out1};
                     end
                     
                     5'd20:                      begin
                        s_reg_84 <= DC_Filter_Add_3Ux2U_4U_4_34_out1;
                     end
                     
                     5'd26:                      begin
                        s_reg_84 <= DC_Filter_Add_4Ux2U_4U_4_63_out1;
                     end
                     
                  endcase

               end
               
            endcase

         end

         // resource: regr_en_1
         always @(posedge i_clk)
          begin :drive_s_reg_85
            case (stall1) 

               1'b1:                begin
               end
               
               1'b0:                begin
                  s_reg_85 <= DC_Filter_Equal_2Ux2U_1U_4_53_out1;
               end
               
            endcase

         end

         // resource: mux_12bx4i0c
         // resource: regr_en_12
         always @(posedge i_clk)
          begin :drive_s_reg_86
            case (stall1) 

               1'b1:                begin
               end
               
               1'b0:                begin
                  case (global_state1) 

                     5'd09:                      begin
                        if (DC_Filter_LessThan_12Ux9U_1U_4_29_out1) begin
                           s_reg_86 <= {1'b0, DC_Filter_Add_12Ux12U_12U_4_12_out1[10:0]};
                        end
                        else begin
                           s_reg_86 <= DC_Filter_Add_12Ux1U_12U_4_13_out1;
                        end
                     end
                     
                     5'd13:                      begin
                        s_reg_86 <= {3'b000, DC_Filter_Add_12Ux1U_12U_4_13_out1[8:0]};
                     end
                     
                     5'd16:                      begin
                        if (9'd257 != s_reg_86[8:0]) begin
                           s_reg_86 <= {1'b0, DC_Filter_Add_12Ux12U_12U_4_12_out1[10:0]};
                        end
                     end
                     
                     5'd25, 5'd29:                      begin
                        s_reg_86 <= {3'b000, DC_Filter_Add_8Ux2U_9U_4_61_out1};
                     end
                     
                  endcase

               end
               
            endcase

         end

         // resource: mux_2bx4i1c
         // resource: regr_en_sc_2
         always @(posedge i_clk)
          begin :drive_s_reg_87
            if (i_rst == 1'b0) begin
               s_reg_87 <= 2'd0;
            end
            else begin
               case (stall1) 

                  1'b1:                   begin
                  end
                  
                  1'b0:                   begin
                     case (global_state1) 

                        5'd03:                         begin
                           if (9'd258 == DC_Filter_Add_12Ux1U_12U_4_13_out1[8:0]) begin
                              case (DC_Filter_Add_2Ux1U_2U_4_15_out1) 

                                 2'd3:                                  begin
                                    if (2'd3 != DC_Filter_Add_2Ux1U_2U_4_14_out1) begin
                                       s_reg_87 <= 2'd0;
                                    end
                                 end
                                 
                                 default:                                  begin
                                    s_reg_87 <= DC_Filter_Add_2Ux1U_2U_4_15_out1;
                                 end
                                 
                              endcase

                           end
                        end
                        
                        5'd09, 5'd12, 5'd16, 5'd22, 5'd23:                         begin
                           if (2'd3 != DC_Filter_Add_2Ux1U_2U_4_52_out1) begin
                              s_reg_87 <= DC_Filter_Add_2Ux1U_2U_4_52_out1;
                           end
                        end
                        
                        5'd25:                         begin
                           s_reg_87 <= 2'd0;
                        end
                        
                        5'd28:                         begin
                           if (2'd3 != DC_Filter_Add_2Ux1U_2U_4_69_out1) begin
                              s_reg_87 <= DC_Filter_Add_2Ux1U_2U_4_69_out1;
                           end
                        end
                        
                        5'd30:                         begin
                           if (9'd256 != DC_Filter_Add_12Ux1U_12U_4_13_out1[8:0] && 2'd3 != DC_Filter_Add_2Ux1U_2U_4_52_out1) begin
                              s_reg_87 <= DC_Filter_Add_2Ux1U_2U_4_52_out1;
                           end
                        end
                        
                     endcase

                  end
                  
               endcase

            end
         end

         // resource: DC_Filter_Mul_2Ux2U_4U_4  instance: DC_Filter_Mul_2Ux2U_4U_4_9
         assign DC_Filter_Mul_2Ux2U_4U_4_9_out1 = {2'b00, s_reg_79}*4'd03;

         // resource: DC_Filter_Add_4Ux2U_4U_4  instance: DC_Filter_Add_4Ux2U_4U_4_10
         assign DC_Filter_Add_4Ux2U_4U_4_10_out1 = DC_Filter_Mul_2Ux2U_4U_4_9_out1 + {2'b00, s_reg_87};

         // resource: mux_9bx2i1c
         always @(f1_array_rgb_out1 or gs_ctrl13)
          begin :drive_DC_Filter_Mul_9Ux4U_12U_4_11_in2
            if (gs_ctrl13) begin
               DC_Filter_Mul_9Ux4U_12U_4_11_in2 = {1'b0, f1_array_rgb_out1};
            end
            else begin
               DC_Filter_Mul_9Ux4U_12U_4_11_in2 = 9'd258;
            end
         end

         // resource: mux_4bx3i0c
         always @(s_reg_79 or s_reg_81 or s_reg_84 or gs_ctrl14)
          begin :drive_DC_Filter_Mul_9Ux4U_12U_4_11_in1
            case (gs_ctrl14) 

               2'd1:                begin
                  DC_Filter_Mul_9Ux4U_12U_4_11_in1 = s_reg_84;
               end
               
               2'd2:                begin
                  DC_Filter_Mul_9Ux4U_12U_4_11_in1 = {2'b00, s_reg_79};
               end
               
               default:                begin
                  DC_Filter_Mul_9Ux4U_12U_4_11_in1 = s_reg_81;
               end
               
            endcase

         end

         // resource: DC_Filter_Mul_9Ux4U_12U_4  instance: DC_Filter_Mul_9Ux4U_12U_4_11
         assign DC_Filter_Mul_9Ux4U_12U_4_11_out1 = {3'b000, DC_Filter_Mul_9Ux4U_12U_4_11_in2}*{8'b00000000, DC_Filter_Mul_9Ux4U_12U_4_11_in1};

         // resource: mux_12bx6i3c
         always @(DC_Filter_Mul_9Ux4U_12U_4_11_out1 or DC_Filter_N_Mux_12_3_2_4_68_out1 or gs_ctrl15)
          begin :drive_DC_Filter_Add_12Ux12U_12U_4_12_in2
            case (gs_ctrl15) 

               3'd1:                begin
                  DC_Filter_Add_12Ux12U_12U_4_12_in2 = 12'd0516;
               end
               
               3'd2:                begin
                  DC_Filter_Add_12Ux12U_12U_4_12_in2 = 12'd1290;
               end
               
               3'd3:                begin
                  DC_Filter_Add_12Ux12U_12U_4_12_in2 = 12'd2064;
               end
               
               3'd4:                begin
                  DC_Filter_Add_12Ux12U_12U_4_12_in2 = {1'b0, DC_Filter_Mul_9Ux4U_12U_4_11_out1[10:0]};
               end
               
               3'd5:                begin
                  DC_Filter_Add_12Ux12U_12U_4_12_in2 = DC_Filter_N_Mux_12_3_2_4_68_out1;
               end
               
               default:                begin
                  DC_Filter_Add_12Ux12U_12U_4_12_in2 = DC_Filter_Mul_9Ux4U_12U_4_11_out1;
               end
               
            endcase

         end

         // resource: mux_12bx5i1c
         always @(s_reg_80 or s_reg_86 or DC_Filter_Mul_9Ux4U_12U_4_11_out1 or gs_ctrl16)
          begin :drive_DC_Filter_Add_12Ux12U_12U_4_12_in1
            case (gs_ctrl16) 

               3'd1:                begin
                  DC_Filter_Add_12Ux12U_12U_4_12_in1 = 12'd0001;
               end
               
               3'd2:                begin
                  DC_Filter_Add_12Ux12U_12U_4_12_in1 = {3'b000, s_reg_86[8:0]};
               end
               
               3'd3:                begin
                  DC_Filter_Add_12Ux12U_12U_4_12_in1 = s_reg_86;
               end
               
               3'd4:                begin
                  DC_Filter_Add_12Ux12U_12U_4_12_in1 = DC_Filter_Mul_9Ux4U_12U_4_11_out1;
               end
               
               default:                begin
                  DC_Filter_Add_12Ux12U_12U_4_12_in1 = {3'b000, s_reg_80};
               end
               
            endcase

         end

         // resource: DC_Filter_Add_12Ux12U_12U_4  instance: DC_Filter_Add_12Ux12U_12U_4_12
         assign DC_Filter_Add_12Ux12U_12U_4_12_out1 = DC_Filter_Add_12Ux12U_12U_4_12_in2 + DC_Filter_Add_12Ux12U_12U_4_12_in1;

         // resource: mux_12bx3i0c
         always @(s_reg_80 or s_reg_82 or gs_ctrl17)
          begin :drive_DC_Filter_Add_12Ux1U_12U_4_13_in2
            case (gs_ctrl17) 

               2'd1:                begin
                  /* state27 */
                  DC_Filter_Add_12Ux1U_12U_4_13_in2 = s_reg_82;
               end
               
               2'd2:                begin
                  DC_Filter_Add_12Ux1U_12U_4_13_in2 = {4'b0000, s_reg_80[7:0]};
               end
               
               default:                begin
                  DC_Filter_Add_12Ux1U_12U_4_13_in2 = {3'b000, s_reg_80};
               end
               
            endcase

         end

         // resource: DC_Filter_Add_12Ux1U_12U_4  instance: DC_Filter_Add_12Ux1U_12U_4_13
         assign DC_Filter_Add_12Ux1U_12U_4_13_out1 = DC_Filter_Add_12Ux1U_12U_4_13_in2 + 12'd0001;

         // resource: mux_12bx2i0c
         always @(s_reg_86 or DC_Filter_Add_12Ux12U_12U_4_12_out1 or gs_ctrl18)
          begin :drive_f1_array_rgb_in1
            if (gs_ctrl18) begin
               f1_array_rgb_in1 = s_reg_86;
            end
            else begin
               f1_array_rgb_in1 = DC_Filter_Add_12Ux12U_12U_4_12_out1;
            end
         end

         // resource: mux_8bx5i1c
         always @(o_rgb_inside_data[23:8] or i_rgb_data[7:0] or f1_array_rgb_out1 or gs_ctrl19)
          begin :drive_f1_array_rgb_DIN
            case (gs_ctrl19) 

               3'd1:                begin
                  f1_array_rgb_DIN = f1_array_rgb_out1;
               end
               
               3'd2:                begin
                  f1_array_rgb_DIN = i_rgb_data[7:0];
               end
               
               3'd3:                begin
                  f1_array_rgb_DIN = o_rgb_inside_data[15:8];
               end
               
               3'd4:                begin
                  f1_array_rgb_DIN = o_rgb_inside_data[23:16];
               end
               
               default:                begin
                  f1_array_rgb_DIN = 8'd000;
               end
               
            endcase

         end

         // resource: mux_1bx2i2c
         always @(stall1 or gs_ctrl20)
          begin :drive_f1_array_rgb_CE
            if (stall1) begin
               f1_array_rgb_CE = 1'b0;
            end
            else begin
               if (gs_ctrl20) begin
                  f1_array_rgb_CE = 1'b1;
               end
               else begin
                  f1_array_rgb_CE = 1'b0;
               end
            end
         end

         // resource: mux_1bx2i2c
         always @(stall1 or gs_ctrl21)
          begin :drive_f1_array_rgb_RW
            if (stall1) begin
               f1_array_rgb_RW = 1'b0;
            end
            else begin
               if (gs_ctrl21) begin
                  f1_array_rgb_RW = 1'b1;
               end
               else begin
                  f1_array_rgb_RW = 1'b0;
               end
            end
         end

         // resource: DC_Filter_Add_2Ux1U_2U_4  instance: DC_Filter_Add_2Ux1U_2U_4_14
         assign DC_Filter_Add_2Ux1U_2U_4_14_out1 = s_reg_79 + 2'd1;

         // resource: DC_Filter_Add_2Ux1U_2U_4  instance: DC_Filter_Add_2Ux1U_2U_4_15
         assign DC_Filter_Add_2Ux1U_2U_4_15_out1 = s_reg_87 + 2'd1;

         // resource: DC_Filter_Mul_2Ux2U_4U_4  instance: DC_Filter_Mul_2Ux2U_4U_4_19
         assign DC_Filter_Mul_2Ux2U_4U_4_19_out1 = {2'b00, s_reg_79}*4'd03;

         // resource: DC_Filter_Add_1Ux1U_2U_4  instance: DC_Filter_Add_1Ux1U_2U_4_17
         assign DC_Filter_Add_1Ux1U_2U_4_17_out1 = {1'b0, s_reg_83[0]} + 2'd1;

         // resource: DC_Filter_Add_4Ux2U_4U_4  instance: DC_Filter_Add_4Ux2U_4U_4_18
         assign DC_Filter_Add_4Ux2U_4U_4_18_out1 = DC_Filter_Mul_2Ux2U_4U_4_19_out1 + {2'b00, DC_Filter_Add_1Ux1U_2U_4_17_out1};

         // resource: DC_Filter_Add_4Ux1U_4U_4  instance: DC_Filter_Add_4Ux1U_4U_4_20
         assign DC_Filter_Add_4Ux1U_4U_4_20_out1 = DC_Filter_Mul_2Ux2U_4U_4_19_out1 + {3'b000, s_reg_83[0]};

         // resource: DC_Filter_Add_2Ux1U_2U_4  instance: DC_Filter_Add_2Ux1U_2U_4_28
         assign DC_Filter_Add_2Ux1U_2U_4_28_out1 = s_reg_79 + 2'd1;

         // resource: DC_Filter_LessThan_12Ux9U_1U_4  instance: DC_Filter_LessThan_12Ux9U_1U_4_29
         assign DC_Filter_LessThan_12Ux9U_1U_4_29_out1 = s_reg_82 < 12'd0257;

         // resource: DC_Filter_Add_2Ux2U_3U_4  instance: DC_Filter_Add_2Ux2U_3U_4_30
         assign DC_Filter_Add_2Ux2U_3U_4_30_out1 = {1'b0, s_reg_79} + 3'd3;

         // resource: DC_Filter_Add_3Ux2U_4U_4  instance: DC_Filter_Add_3Ux2U_4U_4_34
         assign DC_Filter_Add_3Ux2U_4U_4_34_out1 = {2'b00, s_reg_79} + 4'd06;

         // resource: DC_Filter_LessThan_12Ux9U_1U_4  instance: DC_Filter_LessThan_12Ux9U_1U_4_37
         assign DC_Filter_LessThan_12Ux9U_1U_4_37_out1 = s_reg_82 < 12'd0258;

         // resource: DC_Filter_Add_2Ux1U_2U_4  instance: DC_Filter_Add_2Ux1U_2U_4_41
         assign DC_Filter_Add_2Ux1U_2U_4_41_out1 = s_reg_79 + 2'd1;

         // resource: DC_Filter_Mul_2Ux2U_4U_4  instance: DC_Filter_Mul_2Ux2U_4U_4_42
         assign DC_Filter_Mul_2Ux2U_4U_4_42_out1 = {2'b00, s_reg_83}*4'd03;

         // resource: DC_Filter_Add_4Ux2U_4U_4  instance: DC_Filter_Add_4Ux2U_4U_4_43
         assign DC_Filter_Add_4Ux2U_4U_4_43_out1 = DC_Filter_Mul_2Ux2U_4U_4_42_out1 + 4'd02;

         // resource: DC_Filter_Add_2Ux1U_2U_4  instance: DC_Filter_Add_2Ux1U_2U_4_46
         assign DC_Filter_Add_2Ux1U_2U_4_46_out1 = s_reg_83 + 2'd1;

         // resource: mux_2bx2i1c
         always @(s_reg_87 or gs_ctrl22)
          begin :drive_DC_Filter_Add_2Ux1U_2U_4_52_in2
            if (gs_ctrl22) begin
               DC_Filter_Add_2Ux1U_2U_4_52_in2 = s_reg_87;
            end
            else begin
               DC_Filter_Add_2Ux1U_2U_4_52_in2 = 2'd0;
            end
         end

         // resource: DC_Filter_Add_2Ux1U_2U_4  instance: DC_Filter_Add_2Ux1U_2U_4_52
         assign DC_Filter_Add_2Ux1U_2U_4_52_out1 = DC_Filter_Add_2Ux1U_2U_4_52_in2 + 2'd1;

         // resource: mux_2bx2i1c
         always @(s_reg_87 or gs_ctrl23)
          begin :drive_DC_Filter_Equal_2Ux2U_1U_4_53_in2
            if (gs_ctrl23) begin
               DC_Filter_Equal_2Ux2U_1U_4_53_in2 = s_reg_87;
            end
            else begin
               DC_Filter_Equal_2Ux2U_1U_4_53_in2 = 2'd0;
            end
         end

         // resource: DC_Filter_Equal_2Ux2U_1U_4  instance: DC_Filter_Equal_2Ux2U_1U_4_53
         assign DC_Filter_Equal_2Ux2U_1U_4_53_out1 = DC_Filter_Equal_2Ux2U_1U_4_53_in2 == 2'd2;

         // resource: DC_Filter_Equal_2Ux1U_1U_4  instance: DC_Filter_Equal_2Ux1U_1U_4_54
         assign DC_Filter_Equal_2Ux1U_1U_4_54_out1 = DC_Filter_Add_2Ux1U_2U_4_52_in2 == 2'd1;

         // resource: DC_Filter_OrReduction_2U_1U_4  instance: DC_Filter_OrReduction_2U_1U_4_55
         assign DC_Filter_OrReduction_2U_1U_4_55_out1 = (|DC_Filter_Add_2Ux1U_2U_4_52_in2);

         // resource: DC_Filter_N_Mux_12_2_0_4
         always @(s_reg_76 or DC_Filter_Equal_2Ux2U_1U_4_53_out1)
          begin :DC_Filter_N_Mux_12_2_0_4_56
            if (DC_Filter_Equal_2Ux2U_1U_4_53_out1) begin
               DC_Filter_N_Mux_12_2_0_4_56_out1 = 12'd0000;
            end
            else begin
               DC_Filter_N_Mux_12_2_0_4_56_out1 = s_reg_76;
            end
         end

         // resource: DC_Filter_N_Mux_12_2_0_4
         always @(s_reg_77 or DC_Filter_Equal_2Ux1U_1U_4_54_out1)
          begin :DC_Filter_N_Mux_12_2_0_4_57
            if (DC_Filter_Equal_2Ux1U_1U_4_54_out1) begin
               DC_Filter_N_Mux_12_2_0_4_57_out1 = 12'd0000;
            end
            else begin
               DC_Filter_N_Mux_12_2_0_4_57_out1 = s_reg_77;
            end
         end

         // resource: DC_Filter_N_Mux_12_2_1_4
         always @(s_reg_78 or DC_Filter_OrReduction_2U_1U_4_55_out1)
          begin :DC_Filter_N_Mux_12_2_1_4_58
            if (DC_Filter_OrReduction_2U_1U_4_55_out1) begin
               DC_Filter_N_Mux_12_2_1_4_58_out1 = s_reg_78;
            end
            else begin
               DC_Filter_N_Mux_12_2_1_4_58_out1 = 12'd0000;
            end
         end

         // resource: DC_Filter_Mul_2Ux2U_4U_4  instance: DC_Filter_Mul_2Ux2U_4U_4_59
         assign DC_Filter_Mul_2Ux2U_4U_4_59_out1 = {2'b00, s_reg_79}*4'd03;

         // resource: DC_Filter_Add_4Ux2U_4U_4  instance: DC_Filter_Add_4Ux2U_4U_4_60
         assign DC_Filter_Add_4Ux2U_4U_4_60_out1 = DC_Filter_Mul_2Ux2U_4U_4_59_out1 + {2'b00, s_reg_83};

         // instance: drive_mask1_in1
         assign mask1_in1 = DC_Filter_Add_4Ux2U_4U_4_60_out1;

         // resource: DC_Filter_Add_8Ux2U_9U_4  instance: DC_Filter_Add_8Ux2U_9U_4_61
         assign DC_Filter_Add_8Ux2U_9U_4_61_out1 = {1'b0, s_reg_80[7:0]} + {7'b0000000, s_reg_83};

         // resource: DC_Filter_Mul_2Ux2U_4U_4  instance: DC_Filter_Mul_2Ux2U_4U_4_62
         assign DC_Filter_Mul_2Ux2U_4U_4_62_out1 = {2'b00, s_reg_87}*4'd03;

         // resource: DC_Filter_Add_4Ux2U_4U_4  instance: DC_Filter_Add_4Ux2U_4U_4_63
         assign DC_Filter_Add_4Ux2U_4U_4_63_out1 = DC_Filter_Mul_2Ux2U_4U_4_62_out1 + {2'b00, s_reg_79};

         // resource: DC_Filter_OrReduction_2U_1U_4  instance: DC_Filter_OrReduction_2U_1U_4_67
         assign DC_Filter_OrReduction_2U_1U_4_67_out1 = (|s_reg_87);

         // resource: DC_Filter_N_Mux_12_3_2_4
         always @(s_reg_76 or s_reg_77 or s_reg_78 or s_reg_87)
          begin :DC_Filter_N_Mux_12_3_2_4_68
            case (s_reg_87) 

               2'd0:                begin
                  DC_Filter_N_Mux_12_3_2_4_68_out1 = s_reg_78;
               end
               
               2'd1:                begin
                  DC_Filter_N_Mux_12_3_2_4_68_out1 = s_reg_77;
               end
               
               default:                begin
                  DC_Filter_N_Mux_12_3_2_4_68_out1 = s_reg_76;
               end
               
            endcase

         end

         // resource: DC_Filter_Add_2Ux1U_2U_4  instance: DC_Filter_Add_2Ux1U_2U_4_69
         assign DC_Filter_Add_2Ux1U_2U_4_69_out1 = s_reg_87 + 2'd1;

         // resource: DC_Filter_Equal_2Ux1U_1U_4  instance: DC_Filter_Equal_2Ux1U_1U_4_70
         assign DC_Filter_Equal_2Ux1U_1U_4_70_out1 = s_reg_87 == 2'd1;

         // resource: DC_Filter_N_Mux_12_2_3_4
         always @(s_reg_76 or s_reg_85 or DC_Filter_Add_12Ux12U_12U_4_12_out1)
          begin :DC_Filter_N_Mux_12_2_3_4_73
            if (s_reg_85) begin
               DC_Filter_N_Mux_12_2_3_4_73_out1 = DC_Filter_Add_12Ux12U_12U_4_12_out1;
            end
            else begin
               DC_Filter_N_Mux_12_2_3_4_73_out1 = s_reg_76;
            end
         end

         // resource: DC_Filter_N_Mux_12_2_3_4
         always @(s_reg_77 or DC_Filter_Add_12Ux12U_12U_4_12_out1 or DC_Filter_Equal_2Ux1U_1U_4_70_out1)
          begin :DC_Filter_N_Mux_12_2_3_4_74
            if (DC_Filter_Equal_2Ux1U_1U_4_70_out1) begin
               DC_Filter_N_Mux_12_2_3_4_74_out1 = DC_Filter_Add_12Ux12U_12U_4_12_out1;
            end
            else begin
               DC_Filter_N_Mux_12_2_3_4_74_out1 = s_reg_77;
            end
         end

         // resource: DC_Filter_N_Mux_12_2_3_4
         always @(s_reg_78 or DC_Filter_Add_12Ux12U_12U_4_12_out1 or DC_Filter_OrReduction_2U_1U_4_67_out1)
          begin :DC_Filter_N_Mux_12_2_3_4_75
            if (DC_Filter_OrReduction_2U_1U_4_67_out1) begin
               DC_Filter_N_Mux_12_2_3_4_75_out1 = s_reg_78;
            end
            else begin
               DC_Filter_N_Mux_12_2_3_4_75_out1 = DC_Filter_Add_12Ux12U_12U_4_12_out1;
            end
         end

         // resource: DC_Filter_Add_2Ux1U_2U_4  instance: DC_Filter_Add_2Ux1U_2U_4_76
         assign DC_Filter_Add_2Ux1U_2U_4_76_out1 = s_reg_83 + 2'd1;

         // resource: DC_Filter_Add_2Ux1U_2U_4  instance: DC_Filter_Add_2Ux1U_2U_4_77
         assign DC_Filter_Add_2Ux1U_2U_4_77_out1 = s_reg_79 + 2'd1;

         // resource: regr_en_sc_5
         always @(posedge i_clk)
          begin :drive_global_state1
            if (i_rst == 1'b0) begin
               global_state1 <= 5'd00;
            end
            else begin
               case (stall1) 

                  1'b1:                   begin
                  end
                  
                  1'b0:                   begin
                     global_state1 <= global_state1_next;
                  end
                  
               endcase

            end
         end

         // resource: mux_5bx10i9c
         always @(s_reg_80 or s_reg_82 or s_reg_86[8:0] or DC_Filter_Add_12Ux1U_12U_4_13_out1[8:0] or DC_Filter_Add_2Ux1U_2U_4_14_out1 or DC_Filter_Add_2Ux1U_2U_4_15_out1 or DC_Filter_Add_1Ux1U_2U_4_17_out1 or DC_Filter_Add_2Ux1U_2U_4_28_out1 or DC_Filter_LessThan_12Ux9U_1U_4_29_out1 or DC_Filter_LessThan_12Ux9U_1U_4_37_out1 or DC_Filter_Add_2Ux1U_2U_4_41_out1 or DC_Filter_Add_2Ux1U_2U_4_46_out1 or DC_Filter_Add_2Ux1U_2U_4_52_out1 or DC_Filter_Add_2Ux1U_2U_4_69_out1 or 
DC_Filter_Add_2Ux1U_2U_4_76_out1
          or DC_Filter_Add_2Ux1U_2U_4_77_out1 or global_state1)
          begin :drive_global_state1_next
            case (global_state1) 

               5'd03:                begin
                  case (DC_Filter_Add_12Ux1U_12U_4_13_out1[8:0]) 

                     9'd258:                      begin
                        case (DC_Filter_Add_2Ux1U_2U_4_15_out1) 

                           2'd3:                            begin
                              /* state8 */
                              case (DC_Filter_Add_2Ux1U_2U_4_14_out1) 

                                 2'd3:                                  begin
                                    global_state1_next = 5'd17;
                                 end
                                 
                                 default:                                  begin
                                    global_state1_next = 5'd00;
                                 end
                                 
                              endcase

                           end
                           
                           default:                            begin
                              global_state1_next = 5'd00;
                           end
                           
                        endcase

                     end
                     
                     default:                      begin
                        global_state1_next = 5'd00;
                     end
                     
                  endcase

               end
               
               5'd09:                begin
                  case (s_reg_80) 

                     9'd257:                      begin
                        case (DC_Filter_Add_1Ux1U_2U_4_17_out1) 

                           2'd2:                            begin
                              /* state22 */
                              case (DC_Filter_Add_2Ux1U_2U_4_28_out1) 

                                 2'd3:                                  begin
                                    if (DC_Filter_LessThan_12Ux9U_1U_4_29_out1) begin
                                       global_state1_next = 5'd13;
                                    end
                                    else begin
                                       if (DC_Filter_LessThan_12Ux9U_1U_4_37_out1) begin
                                          global_state1_next = global_state1 + 5'd01;
                                       end
                                       else begin
                                          case (DC_Filter_Add_2Ux1U_2U_4_52_out1) 

                                             2'd3:                                              begin
                                                global_state1_next = 5'd24;
                                             end
                                             
                                             default:                                              begin
                                                global_state1_next = 5'd23;
                                             end
                                             
                                          endcase

                                       end
                                    end
                                 end
                                 
                                 default:                                  begin
                                    global_state1_next = 5'd04;
                                 end
                                 
                              endcase

                           end
                           
                           default:                            begin
                              global_state1_next = 5'd04;
                           end
                           
                        endcase

                     end
                     
                     default:                      begin
                        global_state1_next = 5'd04;
                     end
                     
                  endcase

               end
               
               5'd12:                begin
                  case (DC_Filter_Add_2Ux1U_2U_4_46_out1) 

                     2'd3:                      begin
                        case (DC_Filter_Add_12Ux1U_12U_4_13_out1[8:0]) 

                           9'd257:                            begin
                              case (DC_Filter_Add_2Ux1U_2U_4_52_out1) 

                                 2'd3:                                  begin
                                    global_state1_next = 5'd24;
                                 end
                                 
                                 default:                                  begin
                                    global_state1_next = 5'd23;
                                 end
                                 
                              endcase

                           end
                           
                           default:                            begin
                              global_state1_next = 5'd10;
                           end
                           
                        endcase

                     end
                     
                     default:                      begin
                        global_state1_next = 5'd10;
                     end
                     
                  endcase

               end
               
               5'd16:                begin
                  case (s_reg_86[8:0]) 

                     9'd257:                      begin
                        case (DC_Filter_Add_2Ux1U_2U_4_52_out1) 

                           2'd3:                            begin
                              global_state1_next = 5'd24;
                           end
                           
                           default:                            begin
                              global_state1_next = 5'd23;
                           end
                           
                        endcase

                     end
                     
                     default:                      begin
                        global_state1_next = 5'd13;
                     end
                     
                  endcase

               end
               
               5'd22:                begin
                  case (DC_Filter_Add_12Ux1U_12U_4_13_out1[8:0]) 

                     9'd257:                      begin
                        case (DC_Filter_Add_2Ux1U_2U_4_41_out1) 

                           2'd3:                            begin
                              case (DC_Filter_Add_2Ux1U_2U_4_52_out1) 

                                 2'd3:                                  begin
                                    global_state1_next = 5'd24;
                                 end
                                 
                                 default:                                  begin
                                    global_state1_next = global_state1 + 5'd01;
                                 end
                                 
                              endcase

                           end
                           
                           default:                            begin
                              global_state1_next = 5'd17;
                           end
                           
                        endcase

                     end
                     
                     default:                      begin
                        global_state1_next = 5'd17;
                     end
                     
                  endcase

               end
               
               5'd23:                begin
                  case (DC_Filter_Add_2Ux1U_2U_4_52_out1) 

                     2'd3:                      begin
                        global_state1_next = global_state1 + 5'd01;
                     end
                     
                     default:                      begin
                        global_state1_next = 5'd23;
                     end
                     
                  endcase

               end
               
               5'd25, 5'd29:                begin
                  global_state1_next = 5'd26;
               end
               
               5'd28:                begin
                  case (DC_Filter_Add_2Ux1U_2U_4_69_out1) 

                     2'd3:                      begin
                        case (DC_Filter_Add_2Ux1U_2U_4_77_out1) 

                           2'd3:                            begin
                              /* state80 */
                              case (DC_Filter_Add_2Ux1U_2U_4_76_out1) 

                                 2'd3:                                  begin
                                    global_state1_next = 5'd30;
                                 end
                                 
                                 default:                                  begin
                                    global_state1_next = 5'd24;
                                 end
                                 
                              endcase

                           end
                           
                           default:                            begin
                              global_state1_next = 5'd24;
                           end
                           
                        endcase

                     end
                     
                     default:                      begin
                        global_state1_next = global_state1 + 5'd01;
                     end
                     
                  endcase

               end
               
               5'd30:                begin
                  /* state84 */
                  case (DC_Filter_Add_12Ux1U_12U_4_13_out1[8:0]) 

                     9'd256:                      begin
                        case (s_reg_82) 

                           12'd0000:                            begin
                              global_state1_next = 5'd17;
                           end
                           
                           default:                            begin
                              global_state1_next = 5'd04;
                           end
                           
                        endcase

                     end
                     
                     default:                      begin
                        case (DC_Filter_Add_2Ux1U_2U_4_52_out1) 

                           2'd3:                            begin
                              global_state1_next = 5'd24;
                           end
                           
                           default:                            begin
                              global_state1_next = 5'd23;
                           end
                           
                        endcase

                     end
                     
                  endcase

               end
               
               default:                begin
                  global_state1_next = global_state1 + 5'd01;
               end
               
            endcase

         end

         // resource: mux_1bx2i2c
         // resource: regr_en_sc_1
         always @(posedge i_clk)
          begin :drive_gs_ctrl13
            if (i_rst == 1'b0) begin
               gs_ctrl13 <= 1'b0;
            end
            else begin
               case (stall1) 

                  1'b1:                   begin
                  end
                  
                  1'b0:                   begin
                     case (global_state1_next) 

                        5'd28:                         begin
                           gs_ctrl13 <= 1'b1;
                        end
                        
                        default:                         begin
                           gs_ctrl13 <= 1'b0;
                        end
                        
                     endcase

                  end
                  
               endcase

            end
         end

         // resource: mux_2bx3i3c
         // resource: regr_en_sc_2
         always @(posedge i_clk)
          begin :drive_gs_ctrl14
            if (i_rst == 1'b0) begin
               gs_ctrl14 <= 2'd0;
            end
            else begin
               case (stall1) 

                  1'b1:                   begin
                  end
                  
                  1'b0:                   begin
                     case (global_state1_next) 

                        5'd07, 5'd19, 5'd21, 5'd27:                         begin
                           gs_ctrl14 <= 2'd1;
                        end
                        
                        5'd17:                         begin
                           gs_ctrl14 <= 2'd2;
                        end
                        
                        default:                         begin
                           gs_ctrl14 <= 2'd0;
                        end
                        
                     endcase

                  end
                  
               endcase

            end
         end

         // resource: mux_3bx6i6c
         // resource: regr_en_sc_3
         always @(posedge i_clk)
          begin :drive_gs_ctrl15
            if (i_rst == 1'b0) begin
               gs_ctrl15 <= 3'd0;
            end
            else begin
               case (stall1) 

                  1'b1:                   begin
                  end
                  
                  1'b0:                   begin
                     case (global_state1_next) 

                        5'd09, 5'd16:                         begin
                           gs_ctrl15 <= 3'd1;
                        end
                        
                        5'd14:                         begin
                           gs_ctrl15 <= 3'd2;
                        end
                        
                        5'd15:                         begin
                           gs_ctrl15 <= 3'd3;
                        end
                        
                        5'd17:                         begin
                           gs_ctrl15 <= 3'd4;
                        end
                        
                        5'd28:                         begin
                           gs_ctrl15 <= 3'd5;
                        end
                        
                        default:                         begin
                           gs_ctrl15 <= 3'd0;
                        end
                        
                     endcase

                  end
                  
               endcase

            end
         end

         // resource: mux_3bx5i5c
         // resource: regr_en_sc_3
         always @(posedge i_clk)
          begin :drive_gs_ctrl16
            if (i_rst == 1'b0) begin
               gs_ctrl16 <= 3'd0;
            end
            else begin
               case (stall1) 

                  1'b1:                   begin
                  end
                  
                  1'b0:                   begin
                     case (global_state1_next) 

                        5'd09:                         begin
                           gs_ctrl16 <= 3'd1;
                        end
                        
                        5'd16:                         begin
                           gs_ctrl16 <= 3'd2;
                        end
                        
                        5'd27:                         begin
                           gs_ctrl16 <= 3'd3;
                        end
                        
                        5'd28:                         begin
                           gs_ctrl16 <= 3'd4;
                        end
                        
                        default:                         begin
                           gs_ctrl16 <= 3'd0;
                        end
                        
                     endcase

                  end
                  
               endcase

            end
         end

         // resource: mux_2bx3i3c
         // resource: regr_en_sc_2
         always @(posedge i_clk)
          begin :drive_gs_ctrl17
            if (i_rst == 1'b0) begin
               gs_ctrl17 <= 2'd0;
            end
            else begin
               case (stall1) 

                  1'b1:                   begin
                  end
                  
                  1'b0:                   begin
                     case (global_state1_next) 

                        5'd09, 5'd16:                         begin
                           gs_ctrl17 <= 2'd1;
                        end
                        
                        5'd30:                         begin
                           gs_ctrl17 <= 2'd2;
                        end
                        
                        default:                         begin
                           gs_ctrl17 <= 2'd0;
                        end
                        
                     endcase

                  end
                  
               endcase

            end
         end

         // resource: mux_1bx2i2c
         // resource: regr_en_sc_1
         always @(posedge i_clk)
          begin :drive_gs_ctrl18
            if (i_rst == 1'b0) begin
               gs_ctrl18 <= 1'b0;
            end
            else begin
               case (stall1) 

                  1'b1:                   begin
                  end
                  
                  1'b0:                   begin
                     case (global_state1_next) 

                        5'd13:                         begin
                           gs_ctrl18 <= 1'b1;
                        end
                        
                        default:                         begin
                           gs_ctrl18 <= 1'b0;
                        end
                        
                     endcase

                  end
                  
               endcase

            end
         end

         // resource: mux_3bx5i5c
         // resource: regr_en_sc_3
         always @(posedge i_clk)
          begin :drive_gs_ctrl19
            if (i_rst == 1'b0) begin
               gs_ctrl19 <= 3'd0;
            end
            else begin
               case (stall1) 

                  1'b1:                   begin
                  end
                  
                  1'b0:                   begin
                     case (global_state1_next) 

                        5'd07:                         begin
                           gs_ctrl19 <= 3'd1;
                        end
                        
                        5'd13, 5'd17:                         begin
                           gs_ctrl19 <= 3'd2;
                        end
                        
                        5'd14, 5'd19:                         begin
                           gs_ctrl19 <= 3'd3;
                        end
                        
                        5'd15, 5'd21:                         begin
                           gs_ctrl19 <= 3'd4;
                        end
                        
                        default:                         begin
                           gs_ctrl19 <= 3'd0;
                        end
                        
                     endcase

                  end
                  
               endcase

            end
         end

         // resource: mux_1bx2i2c
         // resource: regr_en_sc_1
         always @(posedge i_clk)
          begin :drive_gs_ctrl20
            if (i_rst == 1'b0) begin
               gs_ctrl20 <= 1'b0;
            end
            else begin
               case (stall1) 

                  1'b1:                   begin
                  end
                  
                  1'b0:                   begin
                     case (global_state1_next) 

                        5'd02, 5'd06, 5'd07, 5'd11, 5'd13, 5'd14, 5'd15, 5'd17, 5'd19, 5'd21, 5'd27:                         begin
                           gs_ctrl20 <= 1'b1;
                        end
                        
                        default:                         begin
                           gs_ctrl20 <= 1'b0;
                        end
                        
                     endcase

                  end
                  
               endcase

            end
         end

         // resource: mux_1bx2i2c
         // resource: regr_en_sc_1
         always @(posedge i_clk)
          begin :drive_gs_ctrl21
            if (i_rst == 1'b0) begin
               gs_ctrl21 <= 1'b0;
            end
            else begin
               case (stall1) 

                  1'b1:                   begin
                  end
                  
                  1'b0:                   begin
                     case (global_state1_next) 

                        5'd02, 5'd07, 5'd11, 5'd13, 5'd14, 5'd15, 5'd17, 5'd19, 5'd21:                         begin
                           gs_ctrl21 <= 1'b1;
                        end
                        
                        default:                         begin
                           gs_ctrl21 <= 1'b0;
                        end
                        
                     endcase

                  end
                  
               endcase

            end
         end

         // resource: mux_1bx2i2c
         // resource: regr_en_sc_1
         always @(posedge i_clk)
          begin :drive_gs_ctrl22
            if (i_rst == 1'b0) begin
               gs_ctrl22 <= 1'b0;
            end
            else begin
               case (stall1) 

                  1'b1:                   begin
                  end
                  
                  1'b0:                   begin
                     case (global_state1_next) 

                        5'd23:                         begin
                           gs_ctrl22 <= 1'b1;
                        end
                        
                        default:                         begin
                           gs_ctrl22 <= 1'b0;
                        end
                        
                     endcase

                  end
                  
               endcase

            end
         end

         // resource: mux_1bx2i2c
         // resource: regr_en_sc_1
         always @(posedge i_clk)
          begin :drive_gs_ctrl23
            if (i_rst == 1'b0) begin
               gs_ctrl23 <= 1'b0;
            end
            else begin
               case (stall1) 

                  1'b1:                   begin
                  end
                  
                  1'b0:                   begin
                     case (global_state1_next) 

                        5'd23, 5'd27:                         begin
                           gs_ctrl23 <= 1'b1;
                        end
                        
                        default:                         begin
                           gs_ctrl23 <= 1'b0;
                        end
                        
                     endcase

                  end
                  
               endcase

            end
         end

         // instance: drive_i_rgb_busy
         assign i_rgb_busy = DC_Filter_gen_busy_r_4_155_out1[2];

         // resource: DC_Filter_gen_busy_r_4  instance: DC_Filter_gen_busy_r_4_155
         assign DC_Filter_gen_busy_r_4_155_out1 = {DC_Filter_gen_busy_r_4_155_gnew_req_i0, {DC_Filter_gen_busy_r_4_155_gdiv_i1, DC_Filter_gen_busy_r_4_155_gen_busy_0_i_rgb_m_data_is_invalid_next}};

         // resource: DC_Filter_gen_busy_r_4  instance: DC_Filter_gen_busy_r_4_155
         assign DC_Filter_gen_busy_r_4_155_gen_busy_0_i_rgb_m_data_is_invalid_next = ~DC_Filter_gen_busy_r_4_155_gdiv_i1;

         // resource: DC_Filter_gen_busy_r_4  instance: DC_Filter_gen_busy_r_4_155
         assign DC_Filter_gen_busy_r_4_155_gdiv_i1 = i_rgb_vld & !DC_Filter_gen_busy_r_4_155_gnew_req_i0;

         // resource: DC_Filter_gen_busy_r_4  instance: DC_Filter_gen_busy_r_4_155
         assign DC_Filter_gen_busy_r_4_155_gnew_req_i0 = i_rgb_m_busy_req_0 & (i_rgb_m_unvalidated_req | i_rgb_vld);

         // resource: regr_ss_1
         always @(posedge i_clk)
          begin :drive_i_rgb_m_unvalidated_req
            if (i_rst == 1'b0) begin
               i_rgb_m_unvalidated_req <= 1'd1;
            end
            else begin
               i_rgb_m_unvalidated_req <= DC_Filter_N_Muxb_1_2_4_4_7_out1;
            end
         end

         // resource: DC_Filter_N_Muxb_1_2_4_4
         always @(i_rgb_vld or i_rgb_m_busy_req_0 or i_rgb_m_unvalidated_req)
          begin :DC_Filter_N_Muxb_1_2_4_4_7
            if (i_rgb_m_busy_req_0) begin
               DC_Filter_N_Muxb_1_2_4_4_7_out1 = i_rgb_m_unvalidated_req;
            end
            else begin
               DC_Filter_N_Muxb_1_2_4_4_7_out1 = i_rgb_vld;
            end
         end

         // instance: drive_o_result_vld
         assign o_result_vld = DC_Filter_Or_1Ux1U_1U_4_2_out1;

         // resource: DC_Filter_Or_1Ux1U_1U_4  instance: DC_Filter_Or_1Ux1U_1U_4_2
         assign DC_Filter_Or_1Ux1U_1U_4_2_out1 = o_result_m_unacked_req | DC_Filter_Xor_1Ux1U_1U_1_1_out1;

         // resource: regr_sc_1
         always @(posedge i_clk)
          begin :drive_o_result_m_unacked_req
            if (i_rst == 1'b0) begin
               o_result_m_unacked_req <= 1'd0;
            end
            else begin
               o_result_m_unacked_req <= DC_Filter_And_1Ux1U_1U_4_81_out1;
            end
         end

         // resource: DC_Filter_And_1Ux1U_1U_4  instance: DC_Filter_And_1Ux1U_1U_4_81
         assign DC_Filter_And_1Ux1U_1U_4_81_out1 = o_result_busy & o_result_vld;

         // resource: DC_Filter_Xor_1Ux1U_1U_1  instance: DC_Filter_Xor_1Ux1U_1U_1_1
         assign DC_Filter_Xor_1Ux1U_1U_1_1_out1 = o_result_m_req_m_trig_req ^ o_result_m_req_m_prev_trig_req;

         // resource: regr_sc_1
         always @(posedge i_clk)
          begin :drive_o_result_m_req_m_prev_trig_req
            if (i_rst == 1'b0) begin
               o_result_m_req_m_prev_trig_req <= 1'd0;
            end
            else begin
               o_result_m_req_m_prev_trig_req <= o_result_m_req_m_trig_req;
            end
         end

         // resource: DC_Filter_Not_1U_1U_1  instance: DC_Filter_Not_1U_1U_1_3
         assign DC_Filter_Not_1U_1U_1_3_out1 = !o_result_m_req_m_trig_req;

         // instance: drive_i_rgb_inside_busy
         assign i_rgb_inside_busy = DC_Filter_gen_busy_r_4_156_out1[2];

         // resource: DC_Filter_gen_busy_r_4  instance: DC_Filter_gen_busy_r_4_156
         assign DC_Filter_gen_busy_r_4_156_out1 = {DC_Filter_gen_busy_r_4_156_gnew_req_i0, {DC_Filter_gen_busy_r_4_156_gdiv_i1, DC_Filter_gen_busy_r_4_156_gen_busy_0_i_rgb_m_data_is_invalid_next}};

         // resource: DC_Filter_gen_busy_r_4  instance: DC_Filter_gen_busy_r_4_156
         assign DC_Filter_gen_busy_r_4_156_gen_busy_0_i_rgb_m_data_is_invalid_next = ~DC_Filter_gen_busy_r_4_156_gdiv_i1;

         // resource: DC_Filter_gen_busy_r_4  instance: DC_Filter_gen_busy_r_4_156
         assign DC_Filter_gen_busy_r_4_156_gdiv_i1 = i_rgb_inside_vld & !DC_Filter_gen_busy_r_4_156_gnew_req_i0;

         // resource: DC_Filter_gen_busy_r_4  instance: DC_Filter_gen_busy_r_4_156
         assign DC_Filter_gen_busy_r_4_156_gnew_req_i0 = i_rgb_inside_m_busy_req_0 & (i_rgb_inside_m_unvalidated_req | i_rgb_inside_vld);

         // resource: regr_ss_1
         always @(posedge i_clk)
          begin :drive_i_rgb_inside_m_unvalidated_req
            if (i_rst == 1'b0) begin
               i_rgb_inside_m_unvalidated_req <= 1'd1;
            end
            else begin
               i_rgb_inside_m_unvalidated_req <= DC_Filter_N_Muxb_1_2_4_4_82_out1;
            end
         end

         // resource: DC_Filter_N_Muxb_1_2_4_4
         always @(i_rgb_inside_vld or i_rgb_inside_m_busy_req_0 or i_rgb_inside_m_unvalidated_req)
          begin :DC_Filter_N_Muxb_1_2_4_4_82
            if (i_rgb_inside_m_busy_req_0) begin
               DC_Filter_N_Muxb_1_2_4_4_82_out1 = i_rgb_inside_m_unvalidated_req;
            end
            else begin
               DC_Filter_N_Muxb_1_2_4_4_82_out1 = i_rgb_inside_vld;
            end
         end

         // instance: drive_o_rgb_inside_vld
         assign o_rgb_inside_vld = DC_Filter_Or_1Ux1U_1U_4_5_out1;

         // resource: DC_Filter_Or_1Ux1U_1U_4  instance: DC_Filter_Or_1Ux1U_1U_4_5
         assign DC_Filter_Or_1Ux1U_1U_4_5_out1 = o_rgb_inside_m_unacked_req | DC_Filter_Xor_1Ux1U_1U_1_4_out1;

         // resource: regr_sc_1
         always @(posedge i_clk)
          begin :drive_o_rgb_inside_m_unacked_req
            if (i_rst == 1'b0) begin
               o_rgb_inside_m_unacked_req <= 1'd0;
            end
            else begin
               o_rgb_inside_m_unacked_req <= DC_Filter_And_1Ux1U_1U_4_79_out1;
            end
         end

         // resource: DC_Filter_And_1Ux1U_1U_4  instance: DC_Filter_And_1Ux1U_1U_4_79
         assign DC_Filter_And_1Ux1U_1U_4_79_out1 = o_rgb_inside_busy & o_rgb_inside_vld;

         // resource: DC_Filter_Xor_1Ux1U_1U_1  instance: DC_Filter_Xor_1Ux1U_1U_1_4
         assign DC_Filter_Xor_1Ux1U_1U_1_4_out1 = o_rgb_inside_m_req_m_trig_req ^ o_rgb_inside_m_req_m_prev_trig_req;

         // resource: regr_sc_1
         always @(posedge i_clk)
          begin :drive_o_rgb_inside_m_req_m_prev_trig_req
            if (i_rst == 1'b0) begin
               o_rgb_inside_m_req_m_prev_trig_req <= 1'd0;
            end
            else begin
               o_rgb_inside_m_req_m_prev_trig_req <= o_rgb_inside_m_req_m_trig_req;
            end
         end

         // resource: DC_Filter_Not_1U_1U_1  instance: DC_Filter_Not_1U_1U_1_6
         assign DC_Filter_Not_1U_1U_1_6_out1 = !o_rgb_inside_m_req_m_trig_req;


endmodule

