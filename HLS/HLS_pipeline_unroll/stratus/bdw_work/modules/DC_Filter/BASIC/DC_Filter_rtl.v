// Generated by stratus_hls 19.12-s100  (91710.131054)
// Wed May  5 00:29:10 2021
// from ../DC_Filter.cpp

`timescale 1ps / 1ps

      
module DC_Filter(i_clk, i_rst, i_rgb_busy, i_rgb_vld, i_rgb_data, o_result_busy, o_result_vld, o_result_data, i_rgb_inside_busy, i_rgb_inside_vld, i_rgb_inside_data, o_rgb_inside_busy, o_rgb_inside_vld, o_rgb_inside_data);

      input i_clk;
      input i_rst;
      input i_rgb_vld;
      input [23:0] i_rgb_data;
      input o_result_busy;
      input i_rgb_inside_vld;
      input [23:0] i_rgb_inside_data;
      input o_rgb_inside_busy;
      output i_rgb_busy;
      output o_result_vld;
      output [23:0] o_result_data;
      reg [23:0] o_result_data;
      output i_rgb_inside_busy;
      output o_rgb_inside_vld;
      output [23:0] o_rgb_inside_data;
      reg [23:0] o_rgb_inside_data;
      reg o_rgb_inside_m_req_m_prev_trig_req;
      reg o_rgb_inside_m_unacked_req;
      wire DC_Filter_Xor_1Ux1U_1U_1_4_out1;
      wire DC_Filter_Or_1Ux1U_1U_4_5_out1;
      reg DC_Filter_N_Muxb_1_2_4_4_2376_out1;
      reg i_rgb_inside_m_unvalidated_req;
      wire DC_Filter_gen_busy_r_4_4744_gnew_req_i0;
      wire DC_Filter_gen_busy_r_4_4744_gdiv_i1;
      wire DC_Filter_gen_busy_r_4_4744_gen_busy_0_i_rgb_m_data_is_invalid_next;
      reg o_result_m_req_m_prev_trig_req;
      reg o_result_m_unacked_req;
      wire DC_Filter_Xor_1Ux1U_1U_1_1_out1;
      wire DC_Filter_Or_1Ux1U_1U_4_2_out1;
      reg DC_Filter_N_Muxb_1_2_4_4_7_out1;
      reg i_rgb_m_unvalidated_req;
      wire DC_Filter_gen_busy_r_4_4743_gnew_req_i0;
      wire DC_Filter_gen_busy_r_4_4743_gdiv_i1;
      wire DC_Filter_gen_busy_r_4_4743_gen_busy_0_i_rgb_m_data_is_invalid_next;
      reg[9:0] global_state1_next;
      wire DC_Filter_Equal_2Ux1U_1U_4_2364_out1;
      wire DC_Filter_OrReduction_2U_1U_4_2361_out1;
      wire[3:0] DC_Filter_Add_4Ux2U_4U_4_2358_out1;
      wire[11:0] DC_Filter_Mul_9Ux4U_12U_4_2357_out1;
      wire[8:0] DC_Filter_Add_8Ux2U_9U_4_2356_out1;
      reg[1:0] DC_Filter_Add_8Ux2U_9U_4_2356_in1;
      reg[1:0] gs_ctrl46;
      reg[7:0] DC_Filter_Add_8Ux2U_9U_4_2356_in2;
      reg[1:0] gs_ctrl45;
      wire[3:0] DC_Filter_Mul_2Ux2U_4U_4_2355_out1;
      wire[3:0] DC_Filter_Add_4Ux2U_4U_4_2354_out1;
      reg[1:0] DC_Filter_Add_4Ux2U_4U_4_2354_in1;
      wire[3:0] DC_Filter_Mul_2Ux2U_4U_4_2353_out1;
      reg[1:0] DC_Filter_Mul_2Ux2U_4U_4_2353_in2;
      wire DC_Filter_OrReduction_2U_1U_4_2349_out1;
      wire DC_Filter_Equal_2Ux1U_1U_4_2348_out1;
      wire DC_Filter_Equal_2Ux2U_1U_4_2347_out1;
      reg[1:0] DC_Filter_Equal_2Ux2U_1U_4_2347_in2;
      reg gs_ctrl39;
      reg[1:0] DC_Filter_Add_2Ux1U_2U_4_2346_in2;
      reg gs_ctrl38;
      reg DC_Filter_Add_1Ux1U_2U_4_19_in2;
      reg[1:0] DC_Filter_Mul_2Ux2U_4U_4_16_in2;
      reg gs_ctrl36;
      reg[1:0] gs_ctrl35;
      reg[3:0] gs_ctrl34;
      reg[2:0] gs_ctrl33;
      wire[11:0] DC_Filter_Add_12Ux9U_12U_4_2359_out1;
      reg[2:0] gs_ctrl32;
      wire[11:0] DC_Filter_Add_12Ux12U_12U_4_13_out1;
      reg[11:0] DC_Filter_Add_12Ux12U_12U_4_13_in1;
      reg[8:0] gs_ctrl31;
      reg[11:0] DC_Filter_Add_12Ux12U_12U_4_13_in2;
      reg[11:0] DC_Filter_N_Mux_12_3_2_4_2362_out1;
      reg[2:0] gs_ctrl30;
      reg[3:0] DC_Filter_Mul_9Ux4U_12U_4_12_in1;
      reg[2:0] gs_ctrl29;
      reg[8:0] DC_Filter_Mul_9Ux4U_12U_4_12_in2;
      reg gs_ctrl28;
      wire[3:0] DC_Filter_Add_4Ux2U_4U_4_11_out1;
      reg[1:0] DC_Filter_Add_4Ux2U_4U_4_11_in1;
      reg[2:0] gs_ctrl27;
      reg[3:0] DC_Filter_Add_4Ux2U_4U_4_11_in2;
      reg[2:0] gs_ctrl26;
      reg[8:0] DC_Filter_Add_9Ux1U_9U_4_10_in2;
      reg[1:0] gs_ctrl25;
      wire[3:0] DC_Filter_Mul_2Ux2U_4U_4_9_out1;
      reg[1:0] DC_Filter_Mul_2Ux2U_4U_4_9_in2;
      reg[1:0] gs_ctrl24;
      wire[1:0] DC_Filter_Add_1Ux1U_2U_4_19_out1;
      wire[1:0] DC_Filter_Add_2Ux1U_2U_4_2346_out1;
      reg[1:0] s_reg_1604;
      wire[3:0] DC_Filter_Mul_2Ux2U_4U_4_2149_out1;
      reg[3:0] s_reg_1603;
      wire[11:0] DC_Filter_Mul_9Ux4U_12U_4_12_out1;
      reg[11:0] s_reg_1605;
      wire[11:0] DC_Filter_Add_12Ux1U_12U_4_2334_out1;
      wire[3:0] DC_Filter_Mul_2Ux2U_4U_4_16_out1;
      reg[1:0] s_reg_1599;
      reg[1:0] s_reg_1598;
      reg[11:0] DC_Filter_N_Mux_12_2_1_4_2352_out1;
      reg[11:0] s_reg_1597;
      reg[11:0] DC_Filter_N_Mux_12_2_0_4_2351_out1;
      reg[11:0] s_reg_1596;
      wire[1:0] DC_Filter_Add_2Ux1U_2U_4_2340_out1;
      reg[10:0] s_reg_1602;
      reg[11:0] DC_Filter_N_Mux_12_2_0_4_2350_out1;
      wire DC_Filter_LessThan_12Ux9U_1U_4_2333_out1;
      reg[11:0] s_reg_1595;
      wire DC_Filter_And_1Ux1U_1U_4_2373_out1;
      wire[2:0] DC_Filter_gen_busy_r_4_4743_out1;
      wire DC_Filter_Not_1U_1U_1_6_out1;
      reg o_rgb_inside_m_req_m_trig_req;
      wire[8:0] DC_Filter_Add_9Ux1U_9U_4_10_out1;
      reg[11:0] s_reg_1601;
      wire[1:0] DC_Filter_Add_2Ux1U_2U_4_72_out1;
      wire[1:0] DC_Filter_Add_1Ux1U_2U_4_2120_out1;
      wire[1:0] DC_Filter_Add_2Ux1U_2U_4_2332_out1;
      wire DC_Filter_LessThan_12Ux9U_1U_4_2331_out1;
      reg[8:0] s_reg_1600;
      wire[1:0] DC_Filter_Add_2Ux1U_2U_4_15_out1;
      wire[1:0] DC_Filter_Add_2Ux1U_2U_4_14_out1;
      reg i_rgb_m_busy_req_0;
      reg[11:0] DC_Filter_N_Mux_12_2_3_4_2367_out1;
      reg[11:0] DC_Filter_N_Mux_12_2_3_4_2368_out1;
      reg[11:0] DC_Filter_N_Mux_12_2_3_4_2369_out1;
      wire[1:0] DC_Filter_Add_2Ux1U_2U_4_2360_out1;
      wire[1:0] DC_Filter_Add_2Ux1U_2U_4_2370_out1;
      wire[1:0] DC_Filter_Add_2Ux1U_2U_4_2371_out1;
      reg[9:0] global_state1;
      reg stall1;
      reg[9:0] global_state_next;
      wire DC_Filter_Equal_2Ux1U_1U_4_4733_out1;
      wire DC_Filter_OrReduction_2U_1U_4_4730_out1;
      wire[3:0] DC_Filter_Add_4Ux2U_4U_4_4727_out1;
      reg[1:0] DC_Filter_Add_8Ux2U_9U_4_4725_in1;
      reg[1:0] gs_ctrl22;
      reg[7:0] DC_Filter_Add_8Ux2U_9U_4_4725_in2;
      reg[1:0] gs_ctrl21;
      wire[3:0] DC_Filter_Mul_2Ux2U_4U_4_4724_out1;
      reg[1:0] DC_Filter_Mul_2Ux2U_4U_4_4724_in2;
      wire DC_Filter_OrReduction_2U_1U_4_4718_out1;
      wire DC_Filter_Equal_2Ux1U_1U_4_4717_out1;
      wire DC_Filter_Equal_2Ux2U_1U_4_4716_out1;
      reg[1:0] DC_Filter_Equal_2Ux2U_1U_4_4716_in2;
      reg gs_ctrl17;
      reg[1:0] DC_Filter_Add_2Ux1U_2U_4_4715_in2;
      reg gs_ctrl16;
      reg[11:0] DC_Filter_Add_12Ux12U_12U_4_2424_in1;
      wire[11:0] DC_Filter_Mul_8Ux4U_12U_4_4734_out1;
      reg[11:0] DC_Filter_Add_12Ux12U_12U_4_2424_in2;
      reg[11:0] DC_Filter_N_Mux_12_3_2_4_4731_out1;
      reg gs_ctrl14;
      reg DC_Filter_Add_1Ux1U_2U_4_2389_in2;
      reg[1:0] DC_Filter_Add_3Ux2U_4U_4_2388_in1;
      reg gs_ctrl12;
      reg[1:0] DC_Filter_Mul_2Ux2U_4U_4_2385_in2;
      reg gs_ctrl11;
      reg[1:0] gs_ctrl10;
      reg[3:0] gs_ctrl9;
      reg[2:0] gs_ctrl8;
      wire[11:0] DC_Filter_Add_12Ux12U_12U_4_2424_out1;
      reg[1:0] gs_ctrl7;
      reg[11:0] DC_Filter_Add_12Ux1U_12U_4_2382_in2;
      reg[1:0] gs_ctrl6;
      reg[8:0] DC_Filter_Add_12Ux9U_12U_4_2381_in1;
      wire[8:0] DC_Filter_Add_8Ux2U_9U_4_4725_out1;
      reg[8:0] gs_ctrl5;
      reg[11:0] DC_Filter_Add_12Ux9U_12U_4_2381_in2;
      reg[2:0] gs_ctrl4;
      reg[3:0] DC_Filter_Mul_9Ux4U_12U_4_2380_in1;
      reg[2:0] gs_ctrl3;
      wire[3:0] DC_Filter_Add_4Ux2U_4U_4_2379_out1;
      reg[1:0] DC_Filter_Add_4Ux2U_4U_4_2379_in1;
      reg[2:0] gs_ctrl2;
      reg[3:0] DC_Filter_Add_4Ux2U_4U_4_2379_in2;
      reg[1:0] gs_ctrl1;
      wire[3:0] DC_Filter_Mul_2Ux2U_4U_4_2378_out1;
      reg[1:0] DC_Filter_Mul_2Ux2U_4U_4_2378_in2;
      reg[1:0] gs_ctrl0;
      wire[11:0] DC_Filter_Add_12Ux9U_12U_4_2381_out1;
      wire[1:0] DC_Filter_Add_1Ux1U_2U_4_2389_out1;
      wire[1:0] DC_Filter_Add_2Ux1U_2U_4_4715_out1;
      reg[1:0] s_reg_3206;
      wire[11:0] DC_Filter_Mul_9Ux4U_12U_4_2380_out1;
      reg[10:0] s_reg_3205;
      wire[3:0] DC_Filter_Mul_2Ux2U_4U_4_2385_out1;
      wire[3:0] DC_Filter_Add_3Ux2U_4U_4_2388_out1;
      reg[3:0] s_reg_3204;
      reg[11:0] s_reg_3208;
      wire[3:0] DC_Filter_Mul_2Ux2U_4U_4_4566_out1;
      reg[8:0] s_reg_3202;
      reg[1:0] s_reg_3201;
      reg[1:0] s_reg_3200;
      reg[11:0] DC_Filter_N_Mux_12_2_1_4_4721_out1;
      reg[11:0] s_reg_3199;
      reg[11:0] DC_Filter_N_Mux_12_2_0_4_4720_out1;
      reg[11:0] s_reg_3198;
      wire[1:0] DC_Filter_Add_2Ux1U_2U_4_4708_out1;
      reg[11:0] DC_Filter_N_Mux_12_2_0_4_4719_out1;
      wire DC_Filter_LessThan_12Ux9U_1U_4_4702_out1;
      reg[11:0] s_reg_3197;
      wire DC_Filter_And_1Ux1U_1U_4_2375_out1;
      wire[2:0] DC_Filter_gen_busy_r_4_4744_out1;
      wire DC_Filter_Not_1U_1U_1_3_out1;
      reg o_result_m_req_m_trig_req;
      reg[11:0] s_reg_3203;
      wire[1:0] DC_Filter_Add_2Ux1U_2U_4_2441_out1;
      reg[8:0] s_reg_3207;
      wire[1:0] DC_Filter_Add_1Ux1U_2U_4_4626_out1;
      wire[1:0] DC_Filter_Add_2Ux1U_2U_4_4701_out1;
      wire DC_Filter_LessThan_12Ux9U_1U_4_4700_out1;
      wire[11:0] DC_Filter_Add_12Ux1U_12U_4_2382_out1;
      wire[1:0] DC_Filter_Add_2Ux1U_2U_4_2384_out1;
      wire[1:0] DC_Filter_Add_2Ux1U_2U_4_2383_out1;
      reg i_rgb_inside_m_busy_req_0;
      reg[11:0] DC_Filter_N_Mux_12_2_3_4_4736_out1;
      reg[11:0] DC_Filter_N_Mux_12_2_3_4_4737_out1;
      reg[11:0] DC_Filter_N_Mux_12_2_3_4_4738_out1;
      wire[1:0] DC_Filter_Add_2Ux1U_2U_4_4729_out1;
      wire[1:0] DC_Filter_Add_2Ux1U_2U_4_4739_out1;
      wire[1:0] DC_Filter_Add_2Ux1U_2U_4_4740_out1;
      reg[9:0] global_state;
      reg stall0;
      reg[7:0] f1_array_rgb_DIN;
      reg f1_array_rgb_CE;
      reg f1_array_rgb_RW;
      reg[11:0] f1_array_rgb_in1;
      wire[7:0] f1_array_rgb_out1;
      wire[3:0] mask1_in1;
      wire[3:0] mask1_out1;
      reg[7:0] f2_array_rgb_DIN;
      reg f2_array_rgb_CE;
      reg f2_array_rgb_RW;
      reg[11:0] f2_array_rgb_in1;
      wire[7:0] f2_array_rgb_out1;
      wire[3:0] mask2_in1;
      wire[3:0] mask2_out1;

         DC_Filter_ROM_9X4_mask2 mask2(
                                   .in1( mask2_in1 ),
                                   .out1( mask2_out1 ),
                                   .clk( i_clk )
                                 );

         DC_Filter_RAM_2322X8_1 f2_array_rgb(
                                  .DIN( f2_array_rgb_DIN ),
                                  .CE( f2_array_rgb_CE ),
                                  .RW( f2_array_rgb_RW ),
                                  .in1( f2_array_rgb_in1 ),
                                  .out1( f2_array_rgb_out1 ),
                                  .clk( i_clk )
                                );

         DC_Filter_ROM_9X4_mask1 mask1(
                                   .in1( mask1_in1 ),
                                   .out1( mask1_out1 ),
                                   .clk( i_clk )
                                 );

         DC_Filter_RAM_2322X8_1 f1_array_rgb(
                                  .DIN( f1_array_rgb_DIN ),
                                  .CE( f1_array_rgb_CE ),
                                  .RW( f1_array_rgb_RW ),
                                  .in1( f1_array_rgb_in1 ),
                                  .out1( f1_array_rgb_out1 ),
                                  .clk( i_clk )
                                );

         // resource: mux_24bx2i0c
         // resource: regr_en_24
         always @(posedge i_clk)
          begin :drive_o_result_data
            case (stall0) 

               1'b1:                begin
               end
               
               1'b0:                begin
                  case (global_state) 

                     10'd0516, 10'd0520:                      begin
                        o_result_data <= i_rgb_inside_data;
                     end
                     
                     10'd0525:                      begin
                        if (2'd3 == DC_Filter_Add_2Ux1U_2U_4_4729_out1 && (2'd3 == DC_Filter_Add_2Ux1U_2U_4_4739_out1 && 2'd3 == DC_Filter_Add_2Ux1U_2U_4_4740_out1)) begin
                           o_result_data <= {DC_Filter_N_Mux_12_2_3_4_4736_out1[11:4], {DC_Filter_N_Mux_12_2_3_4_4737_out1[11:4], DC_Filter_N_Mux_12_2_3_4_4738_out1[11:4]}};
                        end
                     end
                     
                  endcase

               end
               
            endcase

         end

         // resource: mux_1bx2i2c
         // resource: regr_en_ss_1
         always @(posedge i_clk)
          begin :drive_i_rgb_inside_m_busy_req_0
            if (i_rst == 1'b0) begin
               i_rgb_inside_m_busy_req_0 <= 1'd1;
            end
            else begin
               case (stall0) 

                  1'b1:                   begin
                  end
                  
                  1'b0:                   begin
                     case (global_state) 

                        10'd0001:                         begin
                           if (9'd258 == DC_Filter_Add_12Ux1U_12U_4_2382_out1[8:0] && (2'd3 == DC_Filter_Add_2Ux1U_2U_4_2384_out1 && 2'd3 == DC_Filter_Add_2Ux1U_2U_4_2383_out1)) begin
                              i_rgb_inside_m_busy_req_0 <= 1'd0;
                           end
                        end
                        
                        10'd0514:                         begin
                           if (2'd2 == DC_Filter_Add_1Ux1U_2U_4_4626_out1 && (2'd3 == DC_Filter_Add_2Ux1U_2U_4_4701_out1 && DC_Filter_LessThan_12Ux9U_1U_4_4700_out1)) begin
                              i_rgb_inside_m_busy_req_0 <= 1'd0;
                           end
                        end
                        
                        10'd0516, 10'd0520:                         begin
                           i_rgb_inside_m_busy_req_0 <= 1'd1;
                        end
                        
                        10'd0519:                         begin
                           if (9'd257 != s_reg_3207) begin
                              i_rgb_inside_m_busy_req_0 <= 1'd0;
                           end
                        end
                        
                        10'd0523:                         begin
                           case (s_reg_3207) 

                              9'd257:                               begin
                                 if (2'd3 != DC_Filter_Add_2Ux1U_2U_4_2441_out1) begin
                                    i_rgb_inside_m_busy_req_0 <= 1'd0;
                                 end
                              end
                              
                              default:                               begin
                                 i_rgb_inside_m_busy_req_0 <= 1'd0;
                              end
                              
                           endcase

                        end
                        
                        10'd0526:                         begin
                           if (9'd256 == DC_Filter_Add_12Ux1U_12U_4_2382_out1[8:0] && 12'd0000 == s_reg_3203) begin
                              i_rgb_inside_m_busy_req_0 <= 1'd0;
                           end
                        end
                        
                     endcase

                  end
                  
               endcase

            end
         end

         // resource: regr_en_sc_1
         always @(posedge i_clk)
          begin :drive_o_result_m_req_m_trig_req
            if (i_rst == 1'b0) begin
               o_result_m_req_m_trig_req <= 1'd0;
            end
            else begin
               case (stall0) 

                  1'b1:                   begin
                  end
                  
                  1'b0:                   begin
                     case (global_state) 

                        10'd0525:                         begin
                           if (2'd3 == DC_Filter_Add_2Ux1U_2U_4_4729_out1 && (2'd3 == DC_Filter_Add_2Ux1U_2U_4_4739_out1 && 2'd3 == DC_Filter_Add_2Ux1U_2U_4_4740_out1)) begin
                              o_result_m_req_m_trig_req <= DC_Filter_Not_1U_1U_1_3_out1;
                           end
                        end
                        
                     endcase

                  end
                  
               endcase

            end
         end

         // resource: mux_1bx3i1c
         always @(DC_Filter_And_1Ux1U_1U_4_2375_out1 or DC_Filter_gen_busy_r_4_4744_out1[0] or global_state)
          begin :drive_stall0
            case (global_state) 

               10'd0516, 10'd0520:                begin
                  stall0 = DC_Filter_gen_busy_r_4_4744_out1[0];
               end
               
               10'd0526:                begin
                  stall0 = DC_Filter_And_1Ux1U_1U_4_2375_out1;
               end
               
               default:                begin
                  stall0 = 1'b0;
               end
               
            endcase

         end

         // resource: mux_12bx2i0c
         // resource: regr_en_sc_12
         always @(posedge i_clk)
          begin :drive_s_reg_3197
            if (i_rst == 1'b0) begin
               s_reg_3197 <= 12'd0000;
            end
            else begin
               case (stall0) 

                  1'b1:                   begin
                  end
                  
                  1'b0:                   begin
                     case (global_state) 

                        10'd0514:                         begin
                           if (2'd2 == DC_Filter_Add_1Ux1U_2U_4_4626_out1 && (2'd3 == DC_Filter_Add_2Ux1U_2U_4_4701_out1 && (!DC_Filter_LessThan_12Ux9U_1U_4_4700_out1 && !DC_Filter_LessThan_12Ux9U_1U_4_4702_out1))) begin
                              /* state557 */
                              s_reg_3197 <= DC_Filter_N_Mux_12_2_0_4_4719_out1;
                           end
                        end
                        
                        10'd0515:                         begin
                           if (2'd3 == DC_Filter_Add_2Ux1U_2U_4_4708_out1 && 9'd257 == DC_Filter_Add_12Ux1U_12U_4_2382_out1[8:0]) begin
                              /* state561 */
                              s_reg_3197 <= DC_Filter_N_Mux_12_2_0_4_4719_out1;
                           end
                        end
                        
                        10'd0519:                         begin
                           if (9'd257 == s_reg_3207) begin
                              /* state560 */
                              s_reg_3197 <= DC_Filter_N_Mux_12_2_0_4_4719_out1;
                           end
                        end
                        
                        10'd0523:                         begin
                           if (9'd257 == s_reg_3207 && 2'd3 == DC_Filter_Add_2Ux1U_2U_4_2441_out1) begin
                              /* state558 */
                              s_reg_3197 <= DC_Filter_N_Mux_12_2_0_4_4719_out1;
                           end
                        end
                        
                        10'd0524:                         begin
                           /* state562 */
                           s_reg_3197 <= DC_Filter_N_Mux_12_2_0_4_4719_out1;
                        end
                        
                        10'd0525:                         begin
                           s_reg_3197 <= DC_Filter_N_Mux_12_2_3_4_4736_out1;
                        end
                        
                        10'd0526:                         begin
                           if (9'd256 != DC_Filter_Add_12Ux1U_12U_4_2382_out1[8:0]) begin
                              /* state559 */
                              s_reg_3197 <= DC_Filter_N_Mux_12_2_0_4_4719_out1;
                           end
                        end
                        
                     endcase

                  end
                  
               endcase

            end
         end

         // resource: mux_12bx2i0c
         // resource: regr_en_sc_12
         always @(posedge i_clk)
          begin :drive_s_reg_3198
            if (i_rst == 1'b0) begin
               s_reg_3198 <= 12'd0000;
            end
            else begin
               case (stall0) 

                  1'b1:                   begin
                  end
                  
                  1'b0:                   begin
                     case (global_state) 

                        10'd0514:                         begin
                           if (2'd2 == DC_Filter_Add_1Ux1U_2U_4_4626_out1 && (2'd3 == DC_Filter_Add_2Ux1U_2U_4_4701_out1 && (!DC_Filter_LessThan_12Ux9U_1U_4_4700_out1 && !DC_Filter_LessThan_12Ux9U_1U_4_4702_out1))) begin
                              s_reg_3198 <= DC_Filter_N_Mux_12_2_0_4_4720_out1;
                           end
                        end
                        
                        10'd0515:                         begin
                           if (2'd3 == DC_Filter_Add_2Ux1U_2U_4_4708_out1 && 9'd257 == DC_Filter_Add_12Ux1U_12U_4_2382_out1[8:0]) begin
                              s_reg_3198 <= DC_Filter_N_Mux_12_2_0_4_4720_out1;
                           end
                        end
                        
                        10'd0519:                         begin
                           if (9'd257 == s_reg_3207) begin
                              s_reg_3198 <= DC_Filter_N_Mux_12_2_0_4_4720_out1;
                           end
                        end
                        
                        10'd0523:                         begin
                           if (9'd257 == s_reg_3207 && 2'd3 == DC_Filter_Add_2Ux1U_2U_4_2441_out1) begin
                              s_reg_3198 <= DC_Filter_N_Mux_12_2_0_4_4720_out1;
                           end
                        end
                        
                        10'd0524:                         begin
                           s_reg_3198 <= DC_Filter_N_Mux_12_2_0_4_4720_out1;
                        end
                        
                        10'd0525:                         begin
                           s_reg_3198 <= DC_Filter_N_Mux_12_2_3_4_4737_out1;
                        end
                        
                        10'd0526:                         begin
                           if (9'd256 != DC_Filter_Add_12Ux1U_12U_4_2382_out1[8:0]) begin
                              s_reg_3198 <= DC_Filter_N_Mux_12_2_0_4_4720_out1;
                           end
                        end
                        
                     endcase

                  end
                  
               endcase

            end
         end

         // resource: mux_12bx2i0c
         // resource: regr_en_sc_12
         always @(posedge i_clk)
          begin :drive_s_reg_3199
            if (i_rst == 1'b0) begin
               s_reg_3199 <= 12'd0000;
            end
            else begin
               case (stall0) 

                  1'b1:                   begin
                  end
                  
                  1'b0:                   begin
                     case (global_state) 

                        10'd0514:                         begin
                           if (2'd2 == DC_Filter_Add_1Ux1U_2U_4_4626_out1 && (2'd3 == DC_Filter_Add_2Ux1U_2U_4_4701_out1 && (!DC_Filter_LessThan_12Ux9U_1U_4_4700_out1 && !DC_Filter_LessThan_12Ux9U_1U_4_4702_out1))) begin
                              s_reg_3199 <= DC_Filter_N_Mux_12_2_1_4_4721_out1;
                           end
                        end
                        
                        10'd0515:                         begin
                           if (2'd3 == DC_Filter_Add_2Ux1U_2U_4_4708_out1 && 9'd257 == DC_Filter_Add_12Ux1U_12U_4_2382_out1[8:0]) begin
                              s_reg_3199 <= DC_Filter_N_Mux_12_2_1_4_4721_out1;
                           end
                        end
                        
                        10'd0519:                         begin
                           if (9'd257 == s_reg_3207) begin
                              s_reg_3199 <= DC_Filter_N_Mux_12_2_1_4_4721_out1;
                           end
                        end
                        
                        10'd0523:                         begin
                           if (9'd257 == s_reg_3207 && 2'd3 == DC_Filter_Add_2Ux1U_2U_4_2441_out1) begin
                              s_reg_3199 <= DC_Filter_N_Mux_12_2_1_4_4721_out1;
                           end
                        end
                        
                        10'd0524:                         begin
                           s_reg_3199 <= DC_Filter_N_Mux_12_2_1_4_4721_out1;
                        end
                        
                        10'd0525:                         begin
                           s_reg_3199 <= DC_Filter_N_Mux_12_2_3_4_4738_out1;
                        end
                        
                        10'd0526:                         begin
                           if (9'd256 != DC_Filter_Add_12Ux1U_12U_4_2382_out1[8:0]) begin
                              s_reg_3199 <= DC_Filter_N_Mux_12_2_1_4_4721_out1;
                           end
                        end
                        
                     endcase

                  end
                  
               endcase

            end
         end

         // resource: mux_2bx4i1c
         // resource: regr_en_sc_2
         always @(posedge i_clk)
          begin :drive_s_reg_3200
            if (i_rst == 1'b0) begin
               s_reg_3200 <= 2'd0;
            end
            else begin
               case (stall0) 

                  1'b1:                   begin
                  end
                  
                  1'b0:                   begin
                     case (global_state) 

                        10'd0001:                         begin
                           if (9'd258 == DC_Filter_Add_12Ux1U_12U_4_2382_out1[8:0] && (2'd3 == DC_Filter_Add_2Ux1U_2U_4_2384_out1 && 2'd3 != DC_Filter_Add_2Ux1U_2U_4_2383_out1)) begin
                              s_reg_3200 <= DC_Filter_Add_2Ux1U_2U_4_2383_out1;
                           end
                        end
                        
                        10'd0514:                         begin
                           if (2'd2 == DC_Filter_Add_1Ux1U_2U_4_4626_out1) begin
                              case (DC_Filter_Add_2Ux1U_2U_4_4701_out1) 

                                 2'd3:                                  begin
                                    s_reg_3200 <= 2'd0;
                                 end
                                 
                                 default:                                  begin
                                    s_reg_3200 <= DC_Filter_Add_2Ux1U_2U_4_4701_out1;
                                 end
                                 
                              endcase

                           end
                        end
                        
                        10'd0515, 10'd0519, 10'd0523:                         begin
                           s_reg_3200 <= 2'd0;
                        end
                        
                        10'd0525:                         begin
                           if (2'd3 == DC_Filter_Add_2Ux1U_2U_4_4729_out1 && (2'd3 == DC_Filter_Add_2Ux1U_2U_4_4739_out1 && 2'd3 != DC_Filter_Add_2Ux1U_2U_4_4740_out1)) begin
                              s_reg_3200 <= DC_Filter_Add_2Ux1U_2U_4_4740_out1;
                           end
                        end
                        
                        10'd0526:                         begin
                           /* state578 */
                           case (DC_Filter_Add_12Ux1U_12U_4_2382_out1[8:0]) 

                              9'd256:                               begin
                                 if (12'd0000 != s_reg_3203) begin
                                    s_reg_3200 <= 2'd0;
                                 end
                              end
                              
                              default:                               begin
                                 s_reg_3200 <= 2'd0;
                              end
                              
                           endcase

                        end
                        
                     endcase

                  end
                  
               endcase

            end
         end

         // resource: mux_2bx7i2c
         // resource: regr_en_sc_2
         always @(posedge i_clk)
          begin :drive_s_reg_3201
            if (i_rst == 1'b0) begin
               s_reg_3201 <= 2'd0;
            end
            else begin
               case (stall0) 

                  1'b1:                   begin
                  end
                  
                  1'b0:                   begin
                     case (global_state) 

                        10'd0001:                         begin
                           if (9'd258 == DC_Filter_Add_12Ux1U_12U_4_2382_out1[8:0]) begin
                              case (DC_Filter_Add_2Ux1U_2U_4_2384_out1) 

                                 2'd3:                                  begin
                                    /* state6 */
                                    case (DC_Filter_Add_2Ux1U_2U_4_2383_out1) 

                                       2'd3:                                        begin
                                          s_reg_3201 <= 2'd1;
                                       end
                                       
                                       default:                                        begin
                                          s_reg_3201 <= 2'd0;
                                       end
                                       
                                    endcase

                                 end
                                 
                                 default:                                  begin
                                    s_reg_3201 <= DC_Filter_Add_2Ux1U_2U_4_2384_out1;
                                 end
                                 
                              endcase

                           end
                        end
                        
                        10'd0514:                         begin
                           case (DC_Filter_Add_1Ux1U_2U_4_4626_out1) 

                              2'd2:                               begin
                                 s_reg_3201 <= 2'd0;
                              end
                              
                              default:                               begin
                                 s_reg_3201 <= DC_Filter_Add_1Ux1U_2U_4_4626_out1;
                              end
                              
                           endcase

                        end
                        
                        10'd0515:                         begin
                           case (DC_Filter_Add_2Ux1U_2U_4_4708_out1) 

                              2'd3:                               begin
                                 s_reg_3201 <= 2'd0;
                              end
                              
                              default:                               begin
                                 s_reg_3201 <= DC_Filter_Add_2Ux1U_2U_4_4708_out1;
                              end
                              
                           endcase

                        end
                        
                        10'd0519, 10'd0524:                         begin
                           s_reg_3201 <= 2'd0;
                        end
                        
                        10'd0523:                         begin
                           if (9'd257 == s_reg_3207) begin
                              case (DC_Filter_Add_2Ux1U_2U_4_2441_out1) 

                                 2'd3:                                  begin
                                    s_reg_3201 <= 2'd0;
                                 end
                                 
                                 default:                                  begin
                                    s_reg_3201 <= DC_Filter_Add_2Ux1U_2U_4_2441_out1;
                                 end
                                 
                              endcase

                           end
                        end
                        
                        10'd0525:                         begin
                           if (2'd3 == DC_Filter_Add_2Ux1U_2U_4_4729_out1) begin
                              case (DC_Filter_Add_2Ux1U_2U_4_4739_out1) 

                                 2'd3:                                  begin
                                    if (2'd3 != DC_Filter_Add_2Ux1U_2U_4_4740_out1) begin
                                       s_reg_3201 <= 2'd0;
                                    end
                                 end
                                 
                                 default:                                  begin
                                    s_reg_3201 <= DC_Filter_Add_2Ux1U_2U_4_4739_out1;
                                 end
                                 
                              endcase

                           end
                        end
                        
                        10'd0526:                         begin
                           /* state578 */
                           case (DC_Filter_Add_12Ux1U_12U_4_2382_out1[8:0]) 

                              9'd256:                               begin
                                 case (s_reg_3203) 

                                    12'd0000:                                     begin
                                       s_reg_3201 <= 2'd1;
                                    end
                                    
                                    default:                                     begin
                                       s_reg_3201 <= 2'd0;
                                    end
                                    
                                 endcase

                              end
                              
                              default:                               begin
                                 s_reg_3201 <= 2'd0;
                              end
                              
                           endcase

                        end
                        
                     endcase

                  end
                  
               endcase

            end
         end

         // resource: mux_9bx6i2c
         // resource: regr_en_sc_9
         always @(posedge i_clk)
          begin :drive_s_reg_3202
            if (i_rst == 1'b0) begin
               s_reg_3202 <= 9'd000;
            end
            else begin
               case (stall0) 

                  1'b1:                   begin
                  end
                  
                  1'b0:                   begin
                     case (global_state) 

                        10'd0001:                         begin
                           case (DC_Filter_Add_12Ux1U_12U_4_2382_out1[8:0]) 

                              9'd258:                               begin
                                 case (DC_Filter_Add_2Ux1U_2U_4_2384_out1) 

                                    2'd3:                                     begin
                                       /* state6 */
                                       case (DC_Filter_Add_2Ux1U_2U_4_2383_out1) 

                                          2'd3:                                           begin
                                             s_reg_3202 <= 9'd001;
                                          end
                                          
                                          default:                                           begin
                                             s_reg_3202 <= 9'd000;
                                          end
                                          
                                       endcase

                                    end
                                    
                                    default:                                     begin
                                       s_reg_3202 <= 9'd000;
                                    end
                                    
                                 endcase

                              end
                              
                              default:                               begin
                                 s_reg_3202 <= DC_Filter_Add_12Ux1U_12U_4_2382_out1[8:0];
                              end
                              
                           endcase

                        end
                        
                        10'd0002, 10'd0004, 10'd0005, 10'd0006, 10'd0007, 10'd0008, 10'd0009, 10'd0010, 10'd0011, 10'd0012, 10'd0013, 10'd0014, 10'd0015, 10'd0016, 10'd0017, 10'd0018, 10'd0019, 10'd0020, 10'd0021, 10'd0022, 10'd0023, 10'd0024, 10'd0025, 10'd0026, 10'd0027, 10'd0028, 10'd0029, 10'd0030, 10'd0031, 10'd0032, 10'd0033, 10'd0034, 10'd0035, 10'd0036, 10'd0037, 10'd0038, 10'd0039, 10'd0040, 10'd0041, 10'd0042, 10'd0043, 10'd0044, 10'd0045, 10'd0046, 10'd0047, 10'd0048, 10'd0049, 
10'd0050
                        , 10'd0051, 10'd0052, 10'd0053, 10'd0054, 10'd0055, 10'd0056, 10'd0057, 10'd0058, 10'd0059, 10'd0060, 10'd0061, 10'd0062, 10'd0063, 10'd0064, 10'd0065, 10'd0066, 10'd0067, 10'd0068, 10'd0069, 10'd0070, 10'd0071, 10'd0072, 10'd0073, 10'd0074, 10'd0075, 10'd0076, 10'd0077, 10'd0078, 10'd0079, 10'd0080, 10'd0081, 10'd0082, 10'd0083, 10'd0084, 10'd0085, 10'd0086, 10'd0087, 10'd0088, 10'd0089, 10'd0090, 10'd0091, 10'd0092, 10'd0093, 10'd0094, 10'd0095, 10'd0096, 10'd0097, 
10'd0098
                        , 10'd0099, 10'd0100, 10'd0101, 10'd0102, 10'd0103, 10'd0104, 10'd0105, 10'd0106, 10'd0107, 10'd0108, 10'd0109, 10'd0110, 10'd0111, 10'd0112, 10'd0113, 10'd0114, 10'd0115, 10'd0116, 10'd0117, 10'd0118, 10'd0119, 10'd0120, 10'd0121, 10'd0122, 10'd0123, 10'd0124, 10'd0125, 10'd0126, 10'd0127, 10'd0128, 10'd0129, 10'd0130, 10'd0131, 10'd0132, 10'd0133, 10'd0134, 10'd0135, 10'd0136, 10'd0137, 10'd0138, 10'd0139, 10'd0140, 10'd0141, 10'd0142, 10'd0143, 10'd0144, 10'd0145, 
10'd0146
                        , 10'd0147, 10'd0148, 10'd0149, 10'd0150, 10'd0151, 10'd0152, 10'd0153, 10'd0154, 10'd0155, 10'd0156, 10'd0157, 10'd0158, 10'd0159, 10'd0160, 10'd0161, 10'd0162, 10'd0163, 10'd0164, 10'd0165, 10'd0166, 10'd0167, 10'd0168, 10'd0169, 10'd0170, 10'd0171, 10'd0172, 10'd0173, 10'd0174, 10'd0175, 10'd0176, 10'd0177, 10'd0178, 10'd0179, 10'd0180, 10'd0181, 10'd0182, 10'd0183, 10'd0184, 10'd0185, 10'd0186, 10'd0187, 10'd0188, 10'd0189, 10'd0190, 10'd0191, 10'd0192, 10'd0193, 
10'd0194
                        , 10'd0195, 10'd0196, 10'd0197, 10'd0198, 10'd0199, 10'd0200, 10'd0201, 10'd0202, 10'd0203, 10'd0204, 10'd0205, 10'd0206, 10'd0207, 10'd0208, 10'd0209, 10'd0210, 10'd0211, 10'd0212, 10'd0213, 10'd0214, 10'd0215, 10'd0216, 10'd0217, 10'd0218, 10'd0219, 10'd0220, 10'd0221, 10'd0222, 10'd0223, 10'd0224, 10'd0225, 10'd0226, 10'd0227, 10'd0228, 10'd0229, 10'd0230, 10'd0231, 10'd0232, 10'd0233, 10'd0234, 10'd0235, 10'd0236, 10'd0237, 10'd0238, 10'd0239, 10'd0240, 10'd0241, 
10'd0242
                        , 10'd0243, 10'd0244, 10'd0245, 10'd0246, 10'd0247, 10'd0248, 10'd0249, 10'd0250, 10'd0251, 10'd0252, 10'd0253, 10'd0254, 10'd0255, 10'd0256, 10'd0257, 10'd0258, 10'd0259, 10'd0260, 10'd0261, 10'd0262, 10'd0263, 10'd0264, 10'd0265, 10'd0266, 10'd0267, 10'd0268, 10'd0269, 10'd0270, 10'd0271, 10'd0272, 10'd0273, 10'd0274, 10'd0275, 10'd0276, 10'd0277, 10'd0278, 10'd0279, 10'd0280, 10'd0281, 10'd0282, 10'd0283, 10'd0284, 10'd0285, 10'd0286, 10'd0287, 10'd0288, 10'd0289, 
10'd0290
                        , 10'd0291, 10'd0292, 10'd0293, 10'd0294, 10'd0295, 10'd0296, 10'd0297, 10'd0298, 10'd0299, 10'd0300, 10'd0301, 10'd0302, 10'd0303, 10'd0304, 10'd0305, 10'd0306, 10'd0307, 10'd0308, 10'd0309, 10'd0310, 10'd0311, 10'd0312, 10'd0313, 10'd0314, 10'd0315, 10'd0316, 10'd0317, 10'd0318, 10'd0319, 10'd0320, 10'd0321, 10'd0322, 10'd0323, 10'd0324, 10'd0325, 10'd0326, 10'd0327, 10'd0328, 10'd0329, 10'd0330, 10'd0331, 10'd0332, 10'd0333, 10'd0334, 10'd0335, 10'd0336, 10'd0337, 
10'd0338
                        , 10'd0339, 10'd0340, 10'd0341, 10'd0342, 10'd0343, 10'd0344, 10'd0345, 10'd0346, 10'd0347, 10'd0348, 10'd0349, 10'd0350, 10'd0351, 10'd0352, 10'd0353, 10'd0354, 10'd0355, 10'd0356, 10'd0357, 10'd0358, 10'd0359, 10'd0360, 10'd0361, 10'd0362, 10'd0363, 10'd0364, 10'd0365, 10'd0366, 10'd0367, 10'd0368, 10'd0369, 10'd0370, 10'd0371, 10'd0372, 10'd0373, 10'd0374, 10'd0375, 10'd0376, 10'd0377, 10'd0378, 10'd0379, 10'd0380, 10'd0381, 10'd0382, 10'd0383, 10'd0384, 10'd0385, 
10'd0386
                        , 10'd0387, 10'd0388, 10'd0389, 10'd0390, 10'd0391, 10'd0392, 10'd0393, 10'd0394, 10'd0395, 10'd0396, 10'd0397, 10'd0398, 10'd0399, 10'd0400, 10'd0401, 10'd0402, 10'd0403, 10'd0404, 10'd0405, 10'd0406, 10'd0407, 10'd0408, 10'd0409, 10'd0410, 10'd0411, 10'd0412, 10'd0413, 10'd0414, 10'd0415, 10'd0416, 10'd0417, 10'd0418, 10'd0419, 10'd0420, 10'd0421, 10'd0422, 10'd0423, 10'd0424, 10'd0425, 10'd0426, 10'd0427, 10'd0428, 10'd0429, 10'd0430, 10'd0431, 10'd0432, 10'd0433, 
10'd0434
                        , 10'd0435, 10'd0436, 10'd0437, 10'd0438, 10'd0439, 10'd0440, 10'd0441, 10'd0442, 10'd0443, 10'd0444, 10'd0445, 10'd0446, 10'd0447, 10'd0448, 10'd0449, 10'd0450, 10'd0451, 10'd0452, 10'd0453, 10'd0454, 10'd0455, 10'd0456, 10'd0457, 10'd0458, 10'd0459, 10'd0460, 10'd0461, 10'd0462, 10'd0463, 10'd0464, 10'd0465, 10'd0466, 10'd0467, 10'd0468, 10'd0469, 10'd0470, 10'd0471, 10'd0472, 10'd0473, 10'd0474, 10'd0475, 10'd0476, 10'd0477, 10'd0478, 10'd0479, 10'd0480, 10'd0481, 
10'd0482
                        , 10'd0483, 10'd0484, 10'd0485, 10'd0486, 10'd0487, 10'd0488, 10'd0489, 10'd0490, 10'd0491, 10'd0492, 10'd0493, 10'd0494, 10'd0495, 10'd0496, 10'd0497, 10'd0498, 10'd0499, 10'd0500, 10'd0501, 10'd0502, 10'd0503, 10'd0504, 10'd0505, 10'd0506, 10'd0507, 10'd0508, 10'd0509, 10'd0510, 10'd0511, 10'd0512:                         begin
                           s_reg_3202 <= {5'b00000, DC_Filter_Mul_2Ux2U_4U_4_4566_out1};
                        end
                        
                        10'd0514:                         begin
                           if (DC_Filter_LessThan_12Ux9U_1U_4_4700_out1) begin
                              s_reg_3202 <= 9'd001;
                           end
                           else begin
                              s_reg_3202 <= {8'b00000000, DC_Filter_LessThan_12Ux9U_1U_4_4702_out1};
                           end
                        end
                        
                        10'd0515:                         begin
                           if (2'd3 == DC_Filter_Add_2Ux1U_2U_4_4708_out1) begin
                              case (DC_Filter_Add_12Ux1U_12U_4_2382_out1[8:0]) 

                                 9'd257:                                  begin
                                    s_reg_3202 <= 9'd000;
                                 end
                                 
                                 default:                                  begin
                                    s_reg_3202 <= DC_Filter_Add_12Ux1U_12U_4_2382_out1[8:0];
                                 end
                                 
                              endcase

                           end
                        end
                        
                        10'd0519:                         begin
                           case (s_reg_3207) 

                              9'd257:                               begin
                                 s_reg_3202 <= 9'd000;
                              end
                              
                              default:                               begin
                                 s_reg_3202 <= s_reg_3207;
                              end
                              
                           endcase

                        end
                        
                        10'd0523:                         begin
                           case (s_reg_3207) 

                              9'd257:                               begin
                                 case (DC_Filter_Add_2Ux1U_2U_4_2441_out1) 

                                    2'd3:                                     begin
                                       s_reg_3202 <= 9'd000;
                                    end
                                    
                                    default:                                     begin
                                       s_reg_3202 <= 9'd001;
                                    end
                                    
                                 endcase

                              end
                              
                              default:                               begin
                                 s_reg_3202 <= s_reg_3207;
                              end
                              
                           endcase

                        end
                        
                        10'd0526:                         begin
                           /* state578 */
                           case (DC_Filter_Add_12Ux1U_12U_4_2382_out1[8:0]) 

                              9'd256:                               begin
                                 s_reg_3202 <= 9'd001;
                              end
                              
                              default:                               begin
                                 s_reg_3202 <= DC_Filter_Add_12Ux1U_12U_4_2382_out1[8:0];
                              end
                              
                           endcase

                        end
                        
                     endcase

                  end
                  
               endcase

            end
         end

         // resource: mux_12bx3i1c
         // resource: regr_en_12
         always @(posedge i_clk)
          begin :drive_s_reg_3203
            case (stall0) 

               1'b1:                begin
               end
               
               1'b0:                begin
                  case (global_state) 

                     10'd0515:                      begin
                        s_reg_3203 <= s_reg_3208;
                     end
                     
                     10'd0519:                      begin
                        if (9'd257 == s_reg_3207) begin
                           s_reg_3203 <= DC_Filter_Add_12Ux1U_12U_4_2382_out1;
                        end
                     end
                     
                     10'd0523:                      begin
                        s_reg_3203 <= 12'd0003;
                     end
                     
                  endcase

               end
               
            endcase

         end

         // resource: mux_4bx2i0c
         // resource: regr_en_4
         always @(posedge i_clk)
          begin :drive_s_reg_3204
            case (stall0) 

               1'b1:                begin
               end
               
               1'b0:                begin
                  case (global_state) 

                     10'd0001:                      begin
                        s_reg_3204 <= DC_Filter_Add_3Ux2U_4U_4_2388_out1;
                     end
                     
                     10'd0514:                      begin
                        if (2'd2 == DC_Filter_Add_1Ux1U_2U_4_4626_out1 && 2'd3 != DC_Filter_Add_2Ux1U_2U_4_4701_out1) begin
                           s_reg_3204 <= DC_Filter_Mul_2Ux2U_4U_4_2385_out1;
                        end
                     end
                     
                     10'd0523:                      begin
                        if (9'd257 == s_reg_3207 && 2'd3 != DC_Filter_Add_2Ux1U_2U_4_2441_out1) begin
                           s_reg_3204 <= DC_Filter_Add_3Ux2U_4U_4_2388_out1;
                        end
                     end
                     
                     10'd0526:                      begin
                        case (s_reg_3203) 

                           12'd0000:                            begin
                              s_reg_3204 <= DC_Filter_Add_3Ux2U_4U_4_2388_out1;
                           end
                           
                           default:                            begin
                              s_reg_3204 <= DC_Filter_Mul_2Ux2U_4U_4_2385_out1;
                           end
                           
                        endcase

                     end
                     
                  endcase

               end
               
            endcase

         end

         // resource: regr_en_11
         always @(posedge i_clk)
          begin :drive_s_reg_3205
            case (stall0) 

               1'b1:                begin
               end
               
               1'b0:                begin
                  case (global_state) 

                     10'd0001, 10'd0526:                      begin
                        s_reg_3205 <= DC_Filter_Mul_9Ux4U_12U_4_2380_out1[10:0];
                     end
                     
                     10'd0523:                      begin
                        if (9'd257 == s_reg_3207 && 2'd3 != DC_Filter_Add_2Ux1U_2U_4_2441_out1) begin
                           s_reg_3205 <= DC_Filter_Mul_9Ux4U_12U_4_2380_out1[10:0];
                        end
                     end
                     
                  endcase

               end
               
            endcase

         end

         // resource: mux_2bx5i1c
         // resource: regr_en_2
         always @(posedge i_clk)
          begin :drive_s_reg_3206
            case (stall0) 

               1'b1:                begin
               end
               
               1'b0:                begin
                  case (global_state) 

                     10'd0003, 10'd0005, 10'd0007, 10'd0009, 10'd0011, 10'd0013, 10'd0015, 10'd0017, 10'd0019, 10'd0021, 10'd0023, 10'd0025, 10'd0027, 10'd0029, 10'd0031, 10'd0033, 10'd0035, 10'd0037, 10'd0039, 10'd0041, 10'd0043, 10'd0045, 10'd0047, 10'd0049, 10'd0051, 10'd0053, 10'd0055, 10'd0057, 10'd0059, 10'd0061, 10'd0063, 10'd0065, 10'd0067, 10'd0069, 10'd0071, 10'd0073, 10'd0075, 10'd0077, 10'd0079, 10'd0081, 10'd0083, 10'd0085, 10'd0087, 10'd0089, 10'd0091, 10'd0093, 10'd0095, 10'd0097
, 
                     10'd0099, 10'd0101, 10'd0103, 10'd0105, 10'd0107, 10'd0109, 10'd0111, 10'd0113, 10'd0115, 10'd0117, 10'd0119, 10'd0121, 10'd0123, 10'd0125, 10'd0127, 10'd0129, 10'd0131, 10'd0133, 10'd0135, 10'd0137, 10'd0139, 10'd0141, 10'd0143, 10'd0145, 10'd0147, 10'd0149, 10'd0151, 10'd0153, 10'd0155, 10'd0157, 10'd0159, 10'd0161, 10'd0163, 10'd0165, 10'd0167, 10'd0169, 10'd0171, 10'd0173, 10'd0175, 10'd0177, 10'd0179, 10'd0181, 10'd0183, 10'd0185, 10'd0187, 10'd0189, 10'd0191, 10'd0193
, 
                     10'd0195, 10'd0197, 10'd0199, 10'd0201, 10'd0203, 10'd0205, 10'd0207, 10'd0209, 10'd0211, 10'd0213, 10'd0215, 10'd0217, 10'd0219, 10'd0221, 10'd0223, 10'd0225, 10'd0227, 10'd0229, 10'd0231, 10'd0233, 10'd0235, 10'd0237, 10'd0239, 10'd0241, 10'd0243, 10'd0245, 10'd0247, 10'd0249, 10'd0251, 10'd0253, 10'd0255, 10'd0257, 10'd0259, 10'd0261, 10'd0263, 10'd0265, 10'd0267, 10'd0269, 10'd0271, 10'd0273, 10'd0275, 10'd0277, 10'd0279, 10'd0281, 10'd0283, 10'd0285, 10'd0287, 10'd0289
, 
                     10'd0291, 10'd0293, 10'd0295, 10'd0297, 10'd0299, 10'd0301, 10'd0303, 10'd0305, 10'd0307, 10'd0309, 10'd0311, 10'd0313, 10'd0315, 10'd0317, 10'd0319, 10'd0321, 10'd0323, 10'd0325, 10'd0327, 10'd0329, 10'd0331, 10'd0333, 10'd0335, 10'd0337, 10'd0339, 10'd0341, 10'd0343, 10'd0345, 10'd0347, 10'd0349, 10'd0351, 10'd0353, 10'd0355, 10'd0357, 10'd0359, 10'd0361, 10'd0363, 10'd0365, 10'd0367, 10'd0369, 10'd0371, 10'd0373, 10'd0375, 10'd0377, 10'd0379, 10'd0381, 10'd0383, 10'd0385
, 
                     10'd0387, 10'd0389, 10'd0391, 10'd0393, 10'd0395, 10'd0397, 10'd0399, 10'd0401, 10'd0403, 10'd0405, 10'd0407, 10'd0409, 10'd0411, 10'd0413, 10'd0415, 10'd0417, 10'd0419, 10'd0421, 10'd0423, 10'd0425, 10'd0427, 10'd0429, 10'd0431, 10'd0433, 10'd0435, 10'd0437, 10'd0439, 10'd0441, 10'd0443, 10'd0445, 10'd0447, 10'd0449, 10'd0451, 10'd0453, 10'd0455, 10'd0457, 10'd0459, 10'd0461, 10'd0463, 10'd0465, 10'd0467, 10'd0469, 10'd0471, 10'd0473, 10'd0475, 10'd0477, 10'd0479, 10'd0481
, 
                     10'd0483, 10'd0485, 10'd0487, 10'd0489, 10'd0491, 10'd0493, 10'd0495, 10'd0497, 10'd0499, 10'd0501, 10'd0503, 10'd0505, 10'd0507, 10'd0509, 10'd0511:                      begin
                        s_reg_3206 <= DC_Filter_Add_1Ux1U_2U_4_4626_out1;
                     end
                     
                     10'd0514:                      begin
                        case (DC_Filter_Add_1Ux1U_2U_4_4626_out1) 

                           2'd2:                            begin
                              case (DC_Filter_Add_2Ux1U_2U_4_4701_out1) 

                                 2'd3:                                  begin
                                    case (DC_Filter_Add_2Ux1U_2U_4_4715_out1) 

                                       2'd3:                                        begin
                                          s_reg_3206 <= 2'd0;
                                       end
                                       
                                       default:                                        begin
                                          s_reg_3206 <= DC_Filter_Add_2Ux1U_2U_4_4715_out1;
                                       end
                                       
                                    endcase

                                 end
                                 
                                 default:                                  begin
                                    s_reg_3206 <= DC_Filter_Add_1Ux1U_2U_4_2389_out1;
                                 end
                                 
                              endcase

                           end
                           
                           default:                            begin
                              s_reg_3206 <= DC_Filter_Add_1Ux1U_2U_4_2389_out1;
                           end
                           
                        endcase

                     end
                     
                     10'd0515, 10'd0519, 10'd0523, 10'd0524:                      begin
                        case (DC_Filter_Add_2Ux1U_2U_4_4715_out1) 

                           2'd3:                            begin
                              s_reg_3206 <= 2'd0;
                           end
                           
                           default:                            begin
                              s_reg_3206 <= DC_Filter_Add_2Ux1U_2U_4_4715_out1;
                           end
                           
                        endcase

                     end
                     
                     10'd0525:                      begin
                        case (DC_Filter_Add_2Ux1U_2U_4_4729_out1) 

                           2'd3:                            begin
                              case (DC_Filter_Add_2Ux1U_2U_4_4739_out1) 

                                 2'd3:                                  begin
                                    if (2'd3 != DC_Filter_Add_2Ux1U_2U_4_4740_out1) begin
                                       s_reg_3206 <= 2'd0;
                                    end
                                 end
                                 
                                 default:                                  begin
                                    s_reg_3206 <= 2'd0;
                                 end
                                 
                              endcase

                           end
                           
                           default:                            begin
                              s_reg_3206 <= DC_Filter_Add_2Ux1U_2U_4_4729_out1;
                           end
                           
                        endcase

                     end
                     
                     10'd0526:                      begin
                        /* state578 */
                        case (DC_Filter_Add_12Ux1U_12U_4_2382_out1[8:0]) 

                           9'd256:                            begin
                              if (12'd0000 != s_reg_3203) begin
                                 s_reg_3206 <= DC_Filter_Add_1Ux1U_2U_4_2389_out1;
                              end
                           end
                           
                           default:                            begin
                              case (DC_Filter_Add_2Ux1U_2U_4_4715_out1) 

                                 2'd3:                                  begin
                                    s_reg_3206 <= 2'd0;
                                 end
                                 
                                 default:                                  begin
                                    s_reg_3206 <= DC_Filter_Add_2Ux1U_2U_4_4715_out1;
                                 end
                                 
                              endcase

                           end
                           
                        endcase

                     end
                     
                  endcase

               end
               
            endcase

         end

         // resource: regr_en_9
         always @(posedge i_clk)
          begin :drive_s_reg_3207
            case (stall0) 

               1'b1:                begin
               end
               
               1'b0:                begin
                  case (global_state) 

                     10'd0517, 10'd0520:                      begin
                        s_reg_3207 <= DC_Filter_Add_12Ux1U_12U_4_2382_out1[8:0];
                     end
                     
                  endcase

               end
               
            endcase

         end

         // resource: mux_12bx3i0c
         // resource: regr_en_12
         always @(posedge i_clk)
          begin :drive_s_reg_3208
            case (stall0) 

               1'b1:                begin
               end
               
               1'b0:                begin
                  case (global_state) 

                     10'd0514:                      begin
                        s_reg_3208 <= DC_Filter_Add_12Ux1U_12U_4_2382_out1;
                     end
                     
                     10'd0520:                      begin
                        s_reg_3208 <= DC_Filter_Mul_9Ux4U_12U_4_2380_out1;
                     end
                     
                     10'd0521:                      begin
                        s_reg_3208 <= DC_Filter_Add_12Ux9U_12U_4_2381_out1;
                     end
                     
                  endcase

               end
               
            endcase

         end

         // resource: mux_2bx4i1c
         always @(s_reg_3200 or DC_Filter_Add_2Ux1U_2U_4_4708_out1 or DC_Filter_Add_2Ux1U_2U_4_4729_out1 or gs_ctrl0)
          begin :drive_DC_Filter_Mul_2Ux2U_4U_4_2378_in2
            case (gs_ctrl0) 

               2'd1:                begin
                  DC_Filter_Mul_2Ux2U_4U_4_2378_in2 = 2'd0;
               end
               
               2'd2:                begin
                  case (DC_Filter_Add_2Ux1U_2U_4_4708_out1) 

                     2'd3:                      begin
                        DC_Filter_Mul_2Ux2U_4U_4_2378_in2 = 2'd0;
                     end
                     
                     default:                      begin
                        DC_Filter_Mul_2Ux2U_4U_4_2378_in2 = DC_Filter_Add_2Ux1U_2U_4_4708_out1;
                     end
                     
                  endcase

               end
               
               2'd3:                begin
                  case (DC_Filter_Add_2Ux1U_2U_4_4729_out1) 

                     2'd3:                      begin
                        DC_Filter_Mul_2Ux2U_4U_4_2378_in2 = 2'd0;
                     end
                     
                     default:                      begin
                        DC_Filter_Mul_2Ux2U_4U_4_2378_in2 = DC_Filter_Add_2Ux1U_2U_4_4729_out1;
                     end
                     
                  endcase

               end
               
               default:                begin
                  DC_Filter_Mul_2Ux2U_4U_4_2378_in2 = s_reg_3200;
               end
               
            endcase

         end

         // resource: DC_Filter_Mul_2Ux2U_4U_4  instance: DC_Filter_Mul_2Ux2U_4U_4_2378
         assign DC_Filter_Mul_2Ux2U_4U_4_2378_out1 = {2'b00, DC_Filter_Mul_2Ux2U_4U_4_2378_in2}*4'd03;

         // resource: mux_4bx4i0c
         always @(s_reg_3201 or s_reg_3202[3:0] or s_reg_3204 or DC_Filter_Mul_2Ux2U_4U_4_2378_out1 or gs_ctrl1)
          begin :drive_DC_Filter_Add_4Ux2U_4U_4_2379_in2
            case (gs_ctrl1) 

               2'd1:                begin
                  DC_Filter_Add_4Ux2U_4U_4_2379_in2 = s_reg_3204;
               end
               
               2'd2:                begin
                  DC_Filter_Add_4Ux2U_4U_4_2379_in2 = s_reg_3202[3:0];
               end
               
               2'd3:                begin
                  DC_Filter_Add_4Ux2U_4U_4_2379_in2 = {2'b00, s_reg_3201};
               end
               
               default:                begin
                  DC_Filter_Add_4Ux2U_4U_4_2379_in2 = DC_Filter_Mul_2Ux2U_4U_4_2378_out1;
               end
               
            endcase

         end

         // resource: mux_2bx7i3c
         always @(s_reg_3201 or s_reg_3206 or DC_Filter_Add_12Ux1U_12U_4_2382_out1[8:0] or DC_Filter_LessThan_12Ux9U_1U_4_4702_out1 or DC_Filter_Add_2Ux1U_2U_4_4708_out1 or DC_Filter_Add_2Ux1U_2U_4_4729_out1 or DC_Filter_Add_2Ux1U_2U_4_4739_out1 or gs_ctrl2)
          begin :drive_DC_Filter_Add_4Ux2U_4U_4_2379_in1
            case (gs_ctrl2) 

               3'd1:                begin
                  DC_Filter_Add_4Ux2U_4U_4_2379_in1 = s_reg_3206;
               end
               
               3'd2:                begin
                  DC_Filter_Add_4Ux2U_4U_4_2379_in1 = {1'b0, s_reg_3201[0]};
               end
               
               3'd3:                begin
                  if (DC_Filter_LessThan_12Ux9U_1U_4_4702_out1) begin
                     DC_Filter_Add_4Ux2U_4U_4_2379_in1 = 2'd2;
                  end
                  else begin
                     DC_Filter_Add_4Ux2U_4U_4_2379_in1 = 2'd0;
                  end
               end
               
               3'd4:                begin
                  case (DC_Filter_Add_2Ux1U_2U_4_4708_out1) 

                     2'd3:                      begin
                        case (DC_Filter_Add_12Ux1U_12U_4_2382_out1[8:0]) 

                           9'd257:                            begin
                              DC_Filter_Add_4Ux2U_4U_4_2379_in1 = 2'd0;
                           end
                           
                           default:                            begin
                              DC_Filter_Add_4Ux2U_4U_4_2379_in1 = 2'd2;
                           end
                           
                        endcase

                     end
                     
                     default:                      begin
                        DC_Filter_Add_4Ux2U_4U_4_2379_in1 = 2'd2;
                     end
                     
                  endcase

               end
               
               3'd5:                begin
                  DC_Filter_Add_4Ux2U_4U_4_2379_in1 = 2'd0;
               end
               
               3'd6:                begin
                  DC_Filter_Add_4Ux2U_4U_4_2379_in1 = 2'd3;
               end
               
               3'd7:                begin
                  case (DC_Filter_Add_2Ux1U_2U_4_4729_out1) 

                     2'd3:                      begin
                        case (DC_Filter_Add_2Ux1U_2U_4_4739_out1) 

                           2'd3:                            begin
                              DC_Filter_Add_4Ux2U_4U_4_2379_in1 = 2'd0;
                           end
                           
                           default:                            begin
                              DC_Filter_Add_4Ux2U_4U_4_2379_in1 = DC_Filter_Add_2Ux1U_2U_4_4739_out1;
                           end
                           
                        endcase

                     end
                     
                     default:                      begin
                        DC_Filter_Add_4Ux2U_4U_4_2379_in1 = s_reg_3201;
                     end
                     
                  endcase

               end
               
               default:                begin
                  DC_Filter_Add_4Ux2U_4U_4_2379_in1 = s_reg_3201;
               end
               
            endcase

         end

         // resource: DC_Filter_Add_4Ux2U_4U_4  instance: DC_Filter_Add_4Ux2U_4U_4_2379
         assign DC_Filter_Add_4Ux2U_4U_4_2379_out1 = DC_Filter_Add_4Ux2U_4U_4_2379_in2 + {2'b00, DC_Filter_Add_4Ux2U_4U_4_2379_in1};

         // resource: mux_4bx5i1c
         always @(s_reg_3204 or DC_Filter_Add_4Ux2U_4U_4_2379_out1 or DC_Filter_Add_12Ux1U_12U_4_2382_out1[8:0] or DC_Filter_Add_2Ux1U_2U_4_2441_out1 or gs_ctrl3)
          begin :drive_DC_Filter_Mul_9Ux4U_12U_4_2380_in1
            case (gs_ctrl3) 

               3'd1:                begin
                  DC_Filter_Mul_9Ux4U_12U_4_2380_in1 = 4'd01;
               end
               
               3'd2:                begin
                  DC_Filter_Mul_9Ux4U_12U_4_2380_in1 = {1'b0, DC_Filter_Add_4Ux2U_4U_4_2379_out1[2:0]};
               end
               
               3'd3:                begin
                  DC_Filter_Mul_9Ux4U_12U_4_2380_in1 = s_reg_3204;
               end
               
               3'd4:                begin
                  case (DC_Filter_Add_2Ux1U_2U_4_2441_out1) 

                     2'd3:                      begin
                        DC_Filter_Mul_9Ux4U_12U_4_2380_in1 = DC_Filter_Add_4Ux2U_4U_4_2379_out1;
                     end
                     
                     default:                      begin
                        DC_Filter_Mul_9Ux4U_12U_4_2380_in1 = {2'b00, DC_Filter_Add_2Ux1U_2U_4_2441_out1};
                     end
                     
                  endcase

               end
               
               3'd5:                begin
                  /* state578 */
                  case (DC_Filter_Add_12Ux1U_12U_4_2382_out1[8:0]) 

                     9'd256:                      begin
                        DC_Filter_Mul_9Ux4U_12U_4_2380_in1 = 4'd01;
                     end
                     
                     default:                      begin
                        DC_Filter_Mul_9Ux4U_12U_4_2380_in1 = DC_Filter_Add_4Ux2U_4U_4_2379_out1;
                     end
                     
                  endcase

               end
               
               default:                begin
                  DC_Filter_Mul_9Ux4U_12U_4_2380_in1 = DC_Filter_Add_4Ux2U_4U_4_2379_out1;
               end
               
            endcase

         end

         // resource: DC_Filter_Mul_9Ux4U_12U_4  instance: DC_Filter_Mul_9Ux4U_12U_4_2380
         assign DC_Filter_Mul_9Ux4U_12U_4_2380_out1 = {8'b00000000, DC_Filter_Mul_9Ux4U_12U_4_2380_in1}*12'd0258;

         // resource: mux_12bx5i3c
         always @(s_reg_3205 or DC_Filter_Mul_9Ux4U_12U_4_2380_out1 or gs_ctrl4)
          begin :drive_DC_Filter_Add_12Ux9U_12U_4_2381_in2
            case (gs_ctrl4) 

               3'd1:                begin
                  DC_Filter_Add_12Ux9U_12U_4_2381_in2 = 12'd0516;
               end
               
               3'd2:                begin
                  DC_Filter_Add_12Ux9U_12U_4_2381_in2 = 12'd1290;
               end
               
               3'd3:                begin
                  DC_Filter_Add_12Ux9U_12U_4_2381_in2 = 12'd2064;
               end
               
               3'd4:                begin
                  DC_Filter_Add_12Ux9U_12U_4_2381_in2 = {1'b0, s_reg_3205};
               end
               
               default:                begin
                  DC_Filter_Add_12Ux9U_12U_4_2381_in2 = DC_Filter_Mul_9Ux4U_12U_4_2380_out1;
               end
               
            endcase

         end

         // resource: mux_9bx259i256c
         always @(s_reg_3202 or DC_Filter_Add_12Ux1U_12U_4_2382_out1[8:0] or DC_Filter_LessThan_12Ux9U_1U_4_4702_out1 or DC_Filter_Add_2Ux1U_2U_4_4708_out1 or DC_Filter_Add_8Ux2U_9U_4_4725_out1 or gs_ctrl5)
          begin :drive_DC_Filter_Add_12Ux9U_12U_4_2381_in1
            case (gs_ctrl5) 

               9'd001:                begin
                  DC_Filter_Add_12Ux9U_12U_4_2381_in1 = 9'd001;
               end
               
               9'd002:                begin
                  DC_Filter_Add_12Ux9U_12U_4_2381_in1 = 9'd002;
               end
               
               9'd003:                begin
                  DC_Filter_Add_12Ux9U_12U_4_2381_in1 = 9'd003;
               end
               
               9'd004:                begin
                  DC_Filter_Add_12Ux9U_12U_4_2381_in1 = 9'd004;
               end
               
               9'd005:                begin
                  DC_Filter_Add_12Ux9U_12U_4_2381_in1 = 9'd005;
               end
               
               9'd006:                begin
                  DC_Filter_Add_12Ux9U_12U_4_2381_in1 = 9'd006;
               end
               
               9'd007:                begin
                  DC_Filter_Add_12Ux9U_12U_4_2381_in1 = 9'd007;
               end
               
               9'd008:                begin
                  DC_Filter_Add_12Ux9U_12U_4_2381_in1 = 9'd008;
               end
               
               9'd009:                begin
                  DC_Filter_Add_12Ux9U_12U_4_2381_in1 = 9'd009;
               end
               
               9'd010:                begin
                  DC_Filter_Add_12Ux9U_12U_4_2381_in1 = 9'd010;
               end
               
               9'd011:                begin
                  DC_Filter_Add_12Ux9U_12U_4_2381_in1 = 9'd011;
               end
               
               9'd012:                begin
                  DC_Filter_Add_12Ux9U_12U_4_2381_in1 = 9'd012;
               end
               
               9'd013:                begin
                  DC_Filter_Add_12Ux9U_12U_4_2381_in1 = 9'd013;
               end
               
               9'd014:                begin
                  DC_Filter_Add_12Ux9U_12U_4_2381_in1 = 9'd014;
               end
               
               9'd015:                begin
                  DC_Filter_Add_12Ux9U_12U_4_2381_in1 = 9'd015;
               end
               
               9'd016:                begin
                  DC_Filter_Add_12Ux9U_12U_4_2381_in1 = 9'd016;
               end
               
               9'd017:                begin
                  DC_Filter_Add_12Ux9U_12U_4_2381_in1 = 9'd017;
               end
               
               9'd018:                begin
                  DC_Filter_Add_12Ux9U_12U_4_2381_in1 = 9'd018;
               end
               
               9'd019:                begin
                  DC_Filter_Add_12Ux9U_12U_4_2381_in1 = 9'd019;
               end
               
               9'd020:                begin
                  DC_Filter_Add_12Ux9U_12U_4_2381_in1 = 9'd020;
               end
               
               9'd021:                begin
                  DC_Filter_Add_12Ux9U_12U_4_2381_in1 = 9'd021;
               end
               
               9'd022:                begin
                  DC_Filter_Add_12Ux9U_12U_4_2381_in1 = 9'd022;
               end
               
               9'd023:                begin
                  DC_Filter_Add_12Ux9U_12U_4_2381_in1 = 9'd023;
               end
               
               9'd024:                begin
                  DC_Filter_Add_12Ux9U_12U_4_2381_in1 = 9'd024;
               end
               
               9'd025:                begin
                  DC_Filter_Add_12Ux9U_12U_4_2381_in1 = 9'd025;
               end
               
               9'd026:                begin
                  DC_Filter_Add_12Ux9U_12U_4_2381_in1 = 9'd026;
               end
               
               9'd027:                begin
                  DC_Filter_Add_12Ux9U_12U_4_2381_in1 = 9'd027;
               end
               
               9'd028:                begin
                  DC_Filter_Add_12Ux9U_12U_4_2381_in1 = 9'd028;
               end
               
               9'd029:                begin
                  DC_Filter_Add_12Ux9U_12U_4_2381_in1 = 9'd029;
               end
               
               9'd030:                begin
                  DC_Filter_Add_12Ux9U_12U_4_2381_in1 = 9'd030;
               end
               
               9'd031:                begin
                  DC_Filter_Add_12Ux9U_12U_4_2381_in1 = 9'd031;
               end
               
               9'd032:                begin
                  DC_Filter_Add_12Ux9U_12U_4_2381_in1 = 9'd032;
               end
               
               9'd033:                begin
                  DC_Filter_Add_12Ux9U_12U_4_2381_in1 = 9'd033;
               end
               
               9'd034:                begin
                  DC_Filter_Add_12Ux9U_12U_4_2381_in1 = 9'd034;
               end
               
               9'd035:                begin
                  DC_Filter_Add_12Ux9U_12U_4_2381_in1 = 9'd035;
               end
               
               9'd036:                begin
                  DC_Filter_Add_12Ux9U_12U_4_2381_in1 = 9'd036;
               end
               
               9'd037:                begin
                  DC_Filter_Add_12Ux9U_12U_4_2381_in1 = 9'd037;
               end
               
               9'd038:                begin
                  DC_Filter_Add_12Ux9U_12U_4_2381_in1 = 9'd038;
               end
               
               9'd039:                begin
                  DC_Filter_Add_12Ux9U_12U_4_2381_in1 = 9'd039;
               end
               
               9'd040:                begin
                  DC_Filter_Add_12Ux9U_12U_4_2381_in1 = 9'd040;
               end
               
               9'd041:                begin
                  DC_Filter_Add_12Ux9U_12U_4_2381_in1 = 9'd041;
               end
               
               9'd042:                begin
                  DC_Filter_Add_12Ux9U_12U_4_2381_in1 = 9'd042;
               end
               
               9'd043:                begin
                  DC_Filter_Add_12Ux9U_12U_4_2381_in1 = 9'd043;
               end
               
               9'd044:                begin
                  DC_Filter_Add_12Ux9U_12U_4_2381_in1 = 9'd044;
               end
               
               9'd045:                begin
                  DC_Filter_Add_12Ux9U_12U_4_2381_in1 = 9'd045;
               end
               
               9'd046:                begin
                  DC_Filter_Add_12Ux9U_12U_4_2381_in1 = 9'd046;
               end
               
               9'd047:                begin
                  DC_Filter_Add_12Ux9U_12U_4_2381_in1 = 9'd047;
               end
               
               9'd048:                begin
                  DC_Filter_Add_12Ux9U_12U_4_2381_in1 = 9'd048;
               end
               
               9'd049:                begin
                  DC_Filter_Add_12Ux9U_12U_4_2381_in1 = 9'd049;
               end
               
               9'd050:                begin
                  DC_Filter_Add_12Ux9U_12U_4_2381_in1 = 9'd050;
               end
               
               9'd051:                begin
                  DC_Filter_Add_12Ux9U_12U_4_2381_in1 = 9'd051;
               end
               
               9'd052:                begin
                  DC_Filter_Add_12Ux9U_12U_4_2381_in1 = 9'd052;
               end
               
               9'd053:                begin
                  DC_Filter_Add_12Ux9U_12U_4_2381_in1 = 9'd053;
               end
               
               9'd054:                begin
                  DC_Filter_Add_12Ux9U_12U_4_2381_in1 = 9'd054;
               end
               
               9'd055:                begin
                  DC_Filter_Add_12Ux9U_12U_4_2381_in1 = 9'd055;
               end
               
               9'd056:                begin
                  DC_Filter_Add_12Ux9U_12U_4_2381_in1 = 9'd056;
               end
               
               9'd057:                begin
                  DC_Filter_Add_12Ux9U_12U_4_2381_in1 = 9'd057;
               end
               
               9'd058:                begin
                  DC_Filter_Add_12Ux9U_12U_4_2381_in1 = 9'd058;
               end
               
               9'd059:                begin
                  DC_Filter_Add_12Ux9U_12U_4_2381_in1 = 9'd059;
               end
               
               9'd060:                begin
                  DC_Filter_Add_12Ux9U_12U_4_2381_in1 = 9'd060;
               end
               
               9'd061:                begin
                  DC_Filter_Add_12Ux9U_12U_4_2381_in1 = 9'd061;
               end
               
               9'd062:                begin
                  DC_Filter_Add_12Ux9U_12U_4_2381_in1 = 9'd062;
               end
               
               9'd063:                begin
                  DC_Filter_Add_12Ux9U_12U_4_2381_in1 = 9'd063;
               end
               
               9'd064:                begin
                  DC_Filter_Add_12Ux9U_12U_4_2381_in1 = 9'd064;
               end
               
               9'd065:                begin
                  DC_Filter_Add_12Ux9U_12U_4_2381_in1 = 9'd065;
               end
               
               9'd066:                begin
                  DC_Filter_Add_12Ux9U_12U_4_2381_in1 = 9'd066;
               end
               
               9'd067:                begin
                  DC_Filter_Add_12Ux9U_12U_4_2381_in1 = 9'd067;
               end
               
               9'd068:                begin
                  DC_Filter_Add_12Ux9U_12U_4_2381_in1 = 9'd068;
               end
               
               9'd069:                begin
                  DC_Filter_Add_12Ux9U_12U_4_2381_in1 = 9'd069;
               end
               
               9'd070:                begin
                  DC_Filter_Add_12Ux9U_12U_4_2381_in1 = 9'd070;
               end
               
               9'd071:                begin
                  DC_Filter_Add_12Ux9U_12U_4_2381_in1 = 9'd071;
               end
               
               9'd072:                begin
                  DC_Filter_Add_12Ux9U_12U_4_2381_in1 = 9'd072;
               end
               
               9'd073:                begin
                  DC_Filter_Add_12Ux9U_12U_4_2381_in1 = 9'd073;
               end
               
               9'd074:                begin
                  DC_Filter_Add_12Ux9U_12U_4_2381_in1 = 9'd074;
               end
               
               9'd075:                begin
                  DC_Filter_Add_12Ux9U_12U_4_2381_in1 = 9'd075;
               end
               
               9'd076:                begin
                  DC_Filter_Add_12Ux9U_12U_4_2381_in1 = 9'd076;
               end
               
               9'd077:                begin
                  DC_Filter_Add_12Ux9U_12U_4_2381_in1 = 9'd077;
               end
               
               9'd078:                begin
                  DC_Filter_Add_12Ux9U_12U_4_2381_in1 = 9'd078;
               end
               
               9'd079:                begin
                  DC_Filter_Add_12Ux9U_12U_4_2381_in1 = 9'd079;
               end
               
               9'd080:                begin
                  DC_Filter_Add_12Ux9U_12U_4_2381_in1 = 9'd080;
               end
               
               9'd081:                begin
                  DC_Filter_Add_12Ux9U_12U_4_2381_in1 = 9'd081;
               end
               
               9'd082:                begin
                  DC_Filter_Add_12Ux9U_12U_4_2381_in1 = 9'd082;
               end
               
               9'd083:                begin
                  DC_Filter_Add_12Ux9U_12U_4_2381_in1 = 9'd083;
               end
               
               9'd084:                begin
                  DC_Filter_Add_12Ux9U_12U_4_2381_in1 = 9'd084;
               end
               
               9'd085:                begin
                  DC_Filter_Add_12Ux9U_12U_4_2381_in1 = 9'd085;
               end
               
               9'd086:                begin
                  DC_Filter_Add_12Ux9U_12U_4_2381_in1 = 9'd086;
               end
               
               9'd087:                begin
                  DC_Filter_Add_12Ux9U_12U_4_2381_in1 = 9'd087;
               end
               
               9'd088:                begin
                  DC_Filter_Add_12Ux9U_12U_4_2381_in1 = 9'd088;
               end
               
               9'd089:                begin
                  DC_Filter_Add_12Ux9U_12U_4_2381_in1 = 9'd089;
               end
               
               9'd090:                begin
                  DC_Filter_Add_12Ux9U_12U_4_2381_in1 = 9'd090;
               end
               
               9'd091:                begin
                  DC_Filter_Add_12Ux9U_12U_4_2381_in1 = 9'd091;
               end
               
               9'd092:                begin
                  DC_Filter_Add_12Ux9U_12U_4_2381_in1 = 9'd092;
               end
               
               9'd093:                begin
                  DC_Filter_Add_12Ux9U_12U_4_2381_in1 = 9'd093;
               end
               
               9'd094:                begin
                  DC_Filter_Add_12Ux9U_12U_4_2381_in1 = 9'd094;
               end
               
               9'd095:                begin
                  DC_Filter_Add_12Ux9U_12U_4_2381_in1 = 9'd095;
               end
               
               9'd096:                begin
                  DC_Filter_Add_12Ux9U_12U_4_2381_in1 = 9'd096;
               end
               
               9'd097:                begin
                  DC_Filter_Add_12Ux9U_12U_4_2381_in1 = 9'd097;
               end
               
               9'd098:                begin
                  DC_Filter_Add_12Ux9U_12U_4_2381_in1 = 9'd098;
               end
               
               9'd099:                begin
                  DC_Filter_Add_12Ux9U_12U_4_2381_in1 = 9'd099;
               end
               
               9'd100:                begin
                  DC_Filter_Add_12Ux9U_12U_4_2381_in1 = 9'd100;
               end
               
               9'd101:                begin
                  DC_Filter_Add_12Ux9U_12U_4_2381_in1 = 9'd101;
               end
               
               9'd102:                begin
                  DC_Filter_Add_12Ux9U_12U_4_2381_in1 = 9'd102;
               end
               
               9'd103:                begin
                  DC_Filter_Add_12Ux9U_12U_4_2381_in1 = 9'd103;
               end
               
               9'd104:                begin
                  DC_Filter_Add_12Ux9U_12U_4_2381_in1 = 9'd104;
               end
               
               9'd105:                begin
                  DC_Filter_Add_12Ux9U_12U_4_2381_in1 = 9'd105;
               end
               
               9'd106:                begin
                  DC_Filter_Add_12Ux9U_12U_4_2381_in1 = 9'd106;
               end
               
               9'd107:                begin
                  DC_Filter_Add_12Ux9U_12U_4_2381_in1 = 9'd107;
               end
               
               9'd108:                begin
                  DC_Filter_Add_12Ux9U_12U_4_2381_in1 = 9'd108;
               end
               
               9'd109:                begin
                  DC_Filter_Add_12Ux9U_12U_4_2381_in1 = 9'd109;
               end
               
               9'd110:                begin
                  DC_Filter_Add_12Ux9U_12U_4_2381_in1 = 9'd110;
               end
               
               9'd111:                begin
                  DC_Filter_Add_12Ux9U_12U_4_2381_in1 = 9'd111;
               end
               
               9'd112:                begin
                  DC_Filter_Add_12Ux9U_12U_4_2381_in1 = 9'd112;
               end
               
               9'd113:                begin
                  DC_Filter_Add_12Ux9U_12U_4_2381_in1 = 9'd113;
               end
               
               9'd114:                begin
                  DC_Filter_Add_12Ux9U_12U_4_2381_in1 = 9'd114;
               end
               
               9'd115:                begin
                  DC_Filter_Add_12Ux9U_12U_4_2381_in1 = 9'd115;
               end
               
               9'd116:                begin
                  DC_Filter_Add_12Ux9U_12U_4_2381_in1 = 9'd116;
               end
               
               9'd117:                begin
                  DC_Filter_Add_12Ux9U_12U_4_2381_in1 = 9'd117;
               end
               
               9'd118:                begin
                  DC_Filter_Add_12Ux9U_12U_4_2381_in1 = 9'd118;
               end
               
               9'd119:                begin
                  DC_Filter_Add_12Ux9U_12U_4_2381_in1 = 9'd119;
               end
               
               9'd120:                begin
                  DC_Filter_Add_12Ux9U_12U_4_2381_in1 = 9'd120;
               end
               
               9'd121:                begin
                  DC_Filter_Add_12Ux9U_12U_4_2381_in1 = 9'd121;
               end
               
               9'd122:                begin
                  DC_Filter_Add_12Ux9U_12U_4_2381_in1 = 9'd122;
               end
               
               9'd123:                begin
                  DC_Filter_Add_12Ux9U_12U_4_2381_in1 = 9'd123;
               end
               
               9'd124:                begin
                  DC_Filter_Add_12Ux9U_12U_4_2381_in1 = 9'd124;
               end
               
               9'd125:                begin
                  DC_Filter_Add_12Ux9U_12U_4_2381_in1 = 9'd125;
               end
               
               9'd126:                begin
                  DC_Filter_Add_12Ux9U_12U_4_2381_in1 = 9'd126;
               end
               
               9'd127:                begin
                  DC_Filter_Add_12Ux9U_12U_4_2381_in1 = 9'd127;
               end
               
               9'd128:                begin
                  DC_Filter_Add_12Ux9U_12U_4_2381_in1 = 9'd128;
               end
               
               9'd129:                begin
                  DC_Filter_Add_12Ux9U_12U_4_2381_in1 = 9'd129;
               end
               
               9'd130:                begin
                  DC_Filter_Add_12Ux9U_12U_4_2381_in1 = 9'd130;
               end
               
               9'd131:                begin
                  DC_Filter_Add_12Ux9U_12U_4_2381_in1 = 9'd131;
               end
               
               9'd132:                begin
                  DC_Filter_Add_12Ux9U_12U_4_2381_in1 = 9'd132;
               end
               
               9'd133:                begin
                  DC_Filter_Add_12Ux9U_12U_4_2381_in1 = 9'd133;
               end
               
               9'd134:                begin
                  DC_Filter_Add_12Ux9U_12U_4_2381_in1 = 9'd134;
               end
               
               9'd135:                begin
                  DC_Filter_Add_12Ux9U_12U_4_2381_in1 = 9'd135;
               end
               
               9'd136:                begin
                  DC_Filter_Add_12Ux9U_12U_4_2381_in1 = 9'd136;
               end
               
               9'd137:                begin
                  DC_Filter_Add_12Ux9U_12U_4_2381_in1 = 9'd137;
               end
               
               9'd138:                begin
                  DC_Filter_Add_12Ux9U_12U_4_2381_in1 = 9'd138;
               end
               
               9'd139:                begin
                  DC_Filter_Add_12Ux9U_12U_4_2381_in1 = 9'd139;
               end
               
               9'd140:                begin
                  DC_Filter_Add_12Ux9U_12U_4_2381_in1 = 9'd140;
               end
               
               9'd141:                begin
                  DC_Filter_Add_12Ux9U_12U_4_2381_in1 = 9'd141;
               end
               
               9'd142:                begin
                  DC_Filter_Add_12Ux9U_12U_4_2381_in1 = 9'd142;
               end
               
               9'd143:                begin
                  DC_Filter_Add_12Ux9U_12U_4_2381_in1 = 9'd143;
               end
               
               9'd144:                begin
                  DC_Filter_Add_12Ux9U_12U_4_2381_in1 = 9'd144;
               end
               
               9'd145:                begin
                  DC_Filter_Add_12Ux9U_12U_4_2381_in1 = 9'd145;
               end
               
               9'd146:                begin
                  DC_Filter_Add_12Ux9U_12U_4_2381_in1 = 9'd146;
               end
               
               9'd147:                begin
                  DC_Filter_Add_12Ux9U_12U_4_2381_in1 = 9'd147;
               end
               
               9'd148:                begin
                  DC_Filter_Add_12Ux9U_12U_4_2381_in1 = 9'd148;
               end
               
               9'd149:                begin
                  DC_Filter_Add_12Ux9U_12U_4_2381_in1 = 9'd149;
               end
               
               9'd150:                begin
                  DC_Filter_Add_12Ux9U_12U_4_2381_in1 = 9'd150;
               end
               
               9'd151:                begin
                  DC_Filter_Add_12Ux9U_12U_4_2381_in1 = 9'd151;
               end
               
               9'd152:                begin
                  DC_Filter_Add_12Ux9U_12U_4_2381_in1 = 9'd152;
               end
               
               9'd153:                begin
                  DC_Filter_Add_12Ux9U_12U_4_2381_in1 = 9'd153;
               end
               
               9'd154:                begin
                  DC_Filter_Add_12Ux9U_12U_4_2381_in1 = 9'd154;
               end
               
               9'd155:                begin
                  DC_Filter_Add_12Ux9U_12U_4_2381_in1 = 9'd155;
               end
               
               9'd156:                begin
                  DC_Filter_Add_12Ux9U_12U_4_2381_in1 = 9'd156;
               end
               
               9'd157:                begin
                  DC_Filter_Add_12Ux9U_12U_4_2381_in1 = 9'd157;
               end
               
               9'd158:                begin
                  DC_Filter_Add_12Ux9U_12U_4_2381_in1 = 9'd158;
               end
               
               9'd159:                begin
                  DC_Filter_Add_12Ux9U_12U_4_2381_in1 = 9'd159;
               end
               
               9'd160:                begin
                  DC_Filter_Add_12Ux9U_12U_4_2381_in1 = 9'd160;
               end
               
               9'd161:                begin
                  DC_Filter_Add_12Ux9U_12U_4_2381_in1 = 9'd161;
               end
               
               9'd162:                begin
                  DC_Filter_Add_12Ux9U_12U_4_2381_in1 = 9'd162;
               end
               
               9'd163:                begin
                  DC_Filter_Add_12Ux9U_12U_4_2381_in1 = 9'd163;
               end
               
               9'd164:                begin
                  DC_Filter_Add_12Ux9U_12U_4_2381_in1 = 9'd164;
               end
               
               9'd165:                begin
                  DC_Filter_Add_12Ux9U_12U_4_2381_in1 = 9'd165;
               end
               
               9'd166:                begin
                  DC_Filter_Add_12Ux9U_12U_4_2381_in1 = 9'd166;
               end
               
               9'd167:                begin
                  DC_Filter_Add_12Ux9U_12U_4_2381_in1 = 9'd167;
               end
               
               9'd168:                begin
                  DC_Filter_Add_12Ux9U_12U_4_2381_in1 = 9'd168;
               end
               
               9'd169:                begin
                  DC_Filter_Add_12Ux9U_12U_4_2381_in1 = 9'd169;
               end
               
               9'd170:                begin
                  DC_Filter_Add_12Ux9U_12U_4_2381_in1 = 9'd170;
               end
               
               9'd171:                begin
                  DC_Filter_Add_12Ux9U_12U_4_2381_in1 = 9'd171;
               end
               
               9'd172:                begin
                  DC_Filter_Add_12Ux9U_12U_4_2381_in1 = 9'd172;
               end
               
               9'd173:                begin
                  DC_Filter_Add_12Ux9U_12U_4_2381_in1 = 9'd173;
               end
               
               9'd174:                begin
                  DC_Filter_Add_12Ux9U_12U_4_2381_in1 = 9'd174;
               end
               
               9'd175:                begin
                  DC_Filter_Add_12Ux9U_12U_4_2381_in1 = 9'd175;
               end
               
               9'd176:                begin
                  DC_Filter_Add_12Ux9U_12U_4_2381_in1 = 9'd176;
               end
               
               9'd177:                begin
                  DC_Filter_Add_12Ux9U_12U_4_2381_in1 = 9'd177;
               end
               
               9'd178:                begin
                  DC_Filter_Add_12Ux9U_12U_4_2381_in1 = 9'd178;
               end
               
               9'd179:                begin
                  DC_Filter_Add_12Ux9U_12U_4_2381_in1 = 9'd179;
               end
               
               9'd180:                begin
                  DC_Filter_Add_12Ux9U_12U_4_2381_in1 = 9'd180;
               end
               
               9'd181:                begin
                  DC_Filter_Add_12Ux9U_12U_4_2381_in1 = 9'd181;
               end
               
               9'd182:                begin
                  DC_Filter_Add_12Ux9U_12U_4_2381_in1 = 9'd182;
               end
               
               9'd183:                begin
                  DC_Filter_Add_12Ux9U_12U_4_2381_in1 = 9'd183;
               end
               
               9'd184:                begin
                  DC_Filter_Add_12Ux9U_12U_4_2381_in1 = 9'd184;
               end
               
               9'd185:                begin
                  DC_Filter_Add_12Ux9U_12U_4_2381_in1 = 9'd185;
               end
               
               9'd186:                begin
                  DC_Filter_Add_12Ux9U_12U_4_2381_in1 = 9'd186;
               end
               
               9'd187:                begin
                  DC_Filter_Add_12Ux9U_12U_4_2381_in1 = 9'd187;
               end
               
               9'd188:                begin
                  DC_Filter_Add_12Ux9U_12U_4_2381_in1 = 9'd188;
               end
               
               9'd189:                begin
                  DC_Filter_Add_12Ux9U_12U_4_2381_in1 = 9'd189;
               end
               
               9'd190:                begin
                  DC_Filter_Add_12Ux9U_12U_4_2381_in1 = 9'd190;
               end
               
               9'd191:                begin
                  DC_Filter_Add_12Ux9U_12U_4_2381_in1 = 9'd191;
               end
               
               9'd192:                begin
                  DC_Filter_Add_12Ux9U_12U_4_2381_in1 = 9'd192;
               end
               
               9'd193:                begin
                  DC_Filter_Add_12Ux9U_12U_4_2381_in1 = 9'd193;
               end
               
               9'd194:                begin
                  DC_Filter_Add_12Ux9U_12U_4_2381_in1 = 9'd194;
               end
               
               9'd195:                begin
                  DC_Filter_Add_12Ux9U_12U_4_2381_in1 = 9'd195;
               end
               
               9'd196:                begin
                  DC_Filter_Add_12Ux9U_12U_4_2381_in1 = 9'd196;
               end
               
               9'd197:                begin
                  DC_Filter_Add_12Ux9U_12U_4_2381_in1 = 9'd197;
               end
               
               9'd198:                begin
                  DC_Filter_Add_12Ux9U_12U_4_2381_in1 = 9'd198;
               end
               
               9'd199:                begin
                  DC_Filter_Add_12Ux9U_12U_4_2381_in1 = 9'd199;
               end
               
               9'd200:                begin
                  DC_Filter_Add_12Ux9U_12U_4_2381_in1 = 9'd200;
               end
               
               9'd201:                begin
                  DC_Filter_Add_12Ux9U_12U_4_2381_in1 = 9'd201;
               end
               
               9'd202:                begin
                  DC_Filter_Add_12Ux9U_12U_4_2381_in1 = 9'd202;
               end
               
               9'd203:                begin
                  DC_Filter_Add_12Ux9U_12U_4_2381_in1 = 9'd203;
               end
               
               9'd204:                begin
                  DC_Filter_Add_12Ux9U_12U_4_2381_in1 = 9'd204;
               end
               
               9'd205:                begin
                  DC_Filter_Add_12Ux9U_12U_4_2381_in1 = 9'd205;
               end
               
               9'd206:                begin
                  DC_Filter_Add_12Ux9U_12U_4_2381_in1 = 9'd206;
               end
               
               9'd207:                begin
                  DC_Filter_Add_12Ux9U_12U_4_2381_in1 = 9'd207;
               end
               
               9'd208:                begin
                  DC_Filter_Add_12Ux9U_12U_4_2381_in1 = 9'd208;
               end
               
               9'd209:                begin
                  DC_Filter_Add_12Ux9U_12U_4_2381_in1 = 9'd209;
               end
               
               9'd210:                begin
                  DC_Filter_Add_12Ux9U_12U_4_2381_in1 = 9'd210;
               end
               
               9'd211:                begin
                  DC_Filter_Add_12Ux9U_12U_4_2381_in1 = 9'd211;
               end
               
               9'd212:                begin
                  DC_Filter_Add_12Ux9U_12U_4_2381_in1 = 9'd212;
               end
               
               9'd213:                begin
                  DC_Filter_Add_12Ux9U_12U_4_2381_in1 = 9'd213;
               end
               
               9'd214:                begin
                  DC_Filter_Add_12Ux9U_12U_4_2381_in1 = 9'd214;
               end
               
               9'd215:                begin
                  DC_Filter_Add_12Ux9U_12U_4_2381_in1 = 9'd215;
               end
               
               9'd216:                begin
                  DC_Filter_Add_12Ux9U_12U_4_2381_in1 = 9'd216;
               end
               
               9'd217:                begin
                  DC_Filter_Add_12Ux9U_12U_4_2381_in1 = 9'd217;
               end
               
               9'd218:                begin
                  DC_Filter_Add_12Ux9U_12U_4_2381_in1 = 9'd218;
               end
               
               9'd219:                begin
                  DC_Filter_Add_12Ux9U_12U_4_2381_in1 = 9'd219;
               end
               
               9'd220:                begin
                  DC_Filter_Add_12Ux9U_12U_4_2381_in1 = 9'd220;
               end
               
               9'd221:                begin
                  DC_Filter_Add_12Ux9U_12U_4_2381_in1 = 9'd221;
               end
               
               9'd222:                begin
                  DC_Filter_Add_12Ux9U_12U_4_2381_in1 = 9'd222;
               end
               
               9'd223:                begin
                  DC_Filter_Add_12Ux9U_12U_4_2381_in1 = 9'd223;
               end
               
               9'd224:                begin
                  DC_Filter_Add_12Ux9U_12U_4_2381_in1 = 9'd224;
               end
               
               9'd225:                begin
                  DC_Filter_Add_12Ux9U_12U_4_2381_in1 = 9'd225;
               end
               
               9'd226:                begin
                  DC_Filter_Add_12Ux9U_12U_4_2381_in1 = 9'd226;
               end
               
               9'd227:                begin
                  DC_Filter_Add_12Ux9U_12U_4_2381_in1 = 9'd227;
               end
               
               9'd228:                begin
                  DC_Filter_Add_12Ux9U_12U_4_2381_in1 = 9'd228;
               end
               
               9'd229:                begin
                  DC_Filter_Add_12Ux9U_12U_4_2381_in1 = 9'd229;
               end
               
               9'd230:                begin
                  DC_Filter_Add_12Ux9U_12U_4_2381_in1 = 9'd230;
               end
               
               9'd231:                begin
                  DC_Filter_Add_12Ux9U_12U_4_2381_in1 = 9'd231;
               end
               
               9'd232:                begin
                  DC_Filter_Add_12Ux9U_12U_4_2381_in1 = 9'd232;
               end
               
               9'd233:                begin
                  DC_Filter_Add_12Ux9U_12U_4_2381_in1 = 9'd233;
               end
               
               9'd234:                begin
                  DC_Filter_Add_12Ux9U_12U_4_2381_in1 = 9'd234;
               end
               
               9'd235:                begin
                  DC_Filter_Add_12Ux9U_12U_4_2381_in1 = 9'd235;
               end
               
               9'd236:                begin
                  DC_Filter_Add_12Ux9U_12U_4_2381_in1 = 9'd236;
               end
               
               9'd237:                begin
                  DC_Filter_Add_12Ux9U_12U_4_2381_in1 = 9'd237;
               end
               
               9'd238:                begin
                  DC_Filter_Add_12Ux9U_12U_4_2381_in1 = 9'd238;
               end
               
               9'd239:                begin
                  DC_Filter_Add_12Ux9U_12U_4_2381_in1 = 9'd239;
               end
               
               9'd240:                begin
                  DC_Filter_Add_12Ux9U_12U_4_2381_in1 = 9'd240;
               end
               
               9'd241:                begin
                  DC_Filter_Add_12Ux9U_12U_4_2381_in1 = 9'd241;
               end
               
               9'd242:                begin
                  DC_Filter_Add_12Ux9U_12U_4_2381_in1 = 9'd242;
               end
               
               9'd243:                begin
                  DC_Filter_Add_12Ux9U_12U_4_2381_in1 = 9'd243;
               end
               
               9'd244:                begin
                  DC_Filter_Add_12Ux9U_12U_4_2381_in1 = 9'd244;
               end
               
               9'd245:                begin
                  DC_Filter_Add_12Ux9U_12U_4_2381_in1 = 9'd245;
               end
               
               9'd246:                begin
                  DC_Filter_Add_12Ux9U_12U_4_2381_in1 = 9'd246;
               end
               
               9'd247:                begin
                  DC_Filter_Add_12Ux9U_12U_4_2381_in1 = 9'd247;
               end
               
               9'd248:                begin
                  DC_Filter_Add_12Ux9U_12U_4_2381_in1 = 9'd248;
               end
               
               9'd249:                begin
                  DC_Filter_Add_12Ux9U_12U_4_2381_in1 = 9'd249;
               end
               
               9'd250:                begin
                  DC_Filter_Add_12Ux9U_12U_4_2381_in1 = 9'd250;
               end
               
               9'd251:                begin
                  DC_Filter_Add_12Ux9U_12U_4_2381_in1 = 9'd251;
               end
               
               9'd252:                begin
                  DC_Filter_Add_12Ux9U_12U_4_2381_in1 = 9'd252;
               end
               
               9'd253:                begin
                  DC_Filter_Add_12Ux9U_12U_4_2381_in1 = 9'd253;
               end
               
               9'd254:                begin
                  DC_Filter_Add_12Ux9U_12U_4_2381_in1 = 9'd254;
               end
               
               9'd255:                begin
                  DC_Filter_Add_12Ux9U_12U_4_2381_in1 = 9'd255;
               end
               
               9'd256:                begin
                  DC_Filter_Add_12Ux9U_12U_4_2381_in1 = 9'd256;
               end
               
               9'd257:                begin
                  if (DC_Filter_LessThan_12Ux9U_1U_4_4702_out1) begin
                     DC_Filter_Add_12Ux9U_12U_4_2381_in1 = 9'd001;
                  end
                  else begin
                     DC_Filter_Add_12Ux9U_12U_4_2381_in1 = DC_Filter_Add_8Ux2U_9U_4_4725_out1;
                  end
               end
               
               9'd258:                begin
                  case (DC_Filter_Add_2Ux1U_2U_4_4708_out1) 

                     2'd3:                      begin
                        case (DC_Filter_Add_12Ux1U_12U_4_2382_out1[8:0]) 

                           9'd257:                            begin
                              DC_Filter_Add_12Ux9U_12U_4_2381_in1 = DC_Filter_Add_8Ux2U_9U_4_4725_out1;
                           end
                           
                           default:                            begin
                              DC_Filter_Add_12Ux9U_12U_4_2381_in1 = DC_Filter_Add_12Ux1U_12U_4_2382_out1[8:0];
                           end
                           
                        endcase

                     end
                     
                     default:                      begin
                        DC_Filter_Add_12Ux9U_12U_4_2381_in1 = s_reg_3202;
                     end
                     
                  endcase

               end
               
               9'd259:                begin
                  DC_Filter_Add_12Ux9U_12U_4_2381_in1 = DC_Filter_Add_8Ux2U_9U_4_4725_out1;
               end
               
               default:                begin
                  DC_Filter_Add_12Ux9U_12U_4_2381_in1 = s_reg_3202;
               end
               
            endcase

         end

         // resource: DC_Filter_Add_12Ux9U_12U_4  instance: DC_Filter_Add_12Ux9U_12U_4_2381
         assign DC_Filter_Add_12Ux9U_12U_4_2381_out1 = DC_Filter_Add_12Ux9U_12U_4_2381_in2 + {3'b000, DC_Filter_Add_12Ux9U_12U_4_2381_in1};

         // resource: mux_12bx3i0c
         always @(s_reg_3202 or s_reg_3203 or gs_ctrl6)
          begin :drive_DC_Filter_Add_12Ux1U_12U_4_2382_in2
            case (gs_ctrl6) 

               2'd1:                begin
                  /* state530 */
                  DC_Filter_Add_12Ux1U_12U_4_2382_in2 = s_reg_3203;
               end
               
               2'd2:                begin
                  DC_Filter_Add_12Ux1U_12U_4_2382_in2 = {4'b0000, s_reg_3202[7:0]};
               end
               
               default:                begin
                  DC_Filter_Add_12Ux1U_12U_4_2382_in2 = {3'b000, s_reg_3202};
               end
               
            endcase

         end

         // resource: DC_Filter_Add_12Ux1U_12U_4  instance: DC_Filter_Add_12Ux1U_12U_4_2382
         assign DC_Filter_Add_12Ux1U_12U_4_2382_out1 = DC_Filter_Add_12Ux1U_12U_4_2382_in2 + 12'd0001;

         // resource: mux_12bx4i0c
         always @(s_reg_3208 or DC_Filter_Add_12Ux9U_12U_4_2381_out1 or DC_Filter_Add_12Ux12U_12U_4_2424_out1 or gs_ctrl7)
          begin :drive_f2_array_rgb_in1
            case (gs_ctrl7) 

               2'd1:                begin
                  f2_array_rgb_in1 = {1'b0, DC_Filter_Add_12Ux9U_12U_4_2381_out1[10:0]};
               end
               
               2'd2:                begin
                  f2_array_rgb_in1 = DC_Filter_Add_12Ux12U_12U_4_2424_out1;
               end
               
               2'd3:                begin
                  f2_array_rgb_in1 = s_reg_3208;
               end
               
               default:                begin
                  f2_array_rgb_in1 = DC_Filter_Add_12Ux9U_12U_4_2381_out1;
               end
               
            endcase

         end

         // resource: mux_8bx5i1c
         always @(i_rgb_inside_data[7:0] or o_result_data[23:8] or f2_array_rgb_out1 or gs_ctrl8)
          begin :drive_f2_array_rgb_DIN
            case (gs_ctrl8) 

               3'd1:                begin
                  f2_array_rgb_DIN = f2_array_rgb_out1;
               end
               
               3'd2:                begin
                  f2_array_rgb_DIN = i_rgb_inside_data[7:0];
               end
               
               3'd3:                begin
                  f2_array_rgb_DIN = o_result_data[15:8];
               end
               
               3'd4:                begin
                  f2_array_rgb_DIN = o_result_data[23:16];
               end
               
               default:                begin
                  f2_array_rgb_DIN = 8'd000;
               end
               
            endcase

         end

         // resource: mux_1bx2i2c
         always @(stall0 or s_reg_3207 or DC_Filter_Add_12Ux1U_12U_4_2382_out1[8:0] or DC_Filter_Add_1Ux1U_2U_4_4626_out1 or DC_Filter_Add_2Ux1U_2U_4_2441_out1 or DC_Filter_LessThan_12Ux9U_1U_4_4700_out1 or DC_Filter_Add_2Ux1U_2U_4_4701_out1 or DC_Filter_LessThan_12Ux9U_1U_4_4702_out1 or DC_Filter_Add_2Ux1U_2U_4_4708_out1 or DC_Filter_Add_2Ux1U_2U_4_4715_out1 or DC_Filter_Add_2Ux1U_2U_4_4729_out1 or DC_Filter_Add_2Ux1U_2U_4_4739_out1 or DC_Filter_Add_2Ux1U_2U_4_4740_out1 or gs_ctrl9)
          begin :drive_f2_array_rgb_CE
            if (stall0) begin
               f2_array_rgb_CE = 1'b0;
            end
            else begin
               case (gs_ctrl9) 

                  4'd01:                   begin
                     f2_array_rgb_CE = 1'b1;
                  end
                  
                  4'd02:                   begin
                     if (2'd2 == DC_Filter_Add_1Ux1U_2U_4_4626_out1 && (2'd3 == DC_Filter_Add_2Ux1U_2U_4_4701_out1 && !DC_Filter_LessThan_12Ux9U_1U_4_4700_out1)) begin
                        if (DC_Filter_LessThan_12Ux9U_1U_4_4702_out1) begin
                           f2_array_rgb_CE = 1'b1;
                        end
                        else begin
                           if (2'd3 == DC_Filter_Add_2Ux1U_2U_4_4715_out1) begin
                              f2_array_rgb_CE = 1'b1;
                           end
                           else begin
                              f2_array_rgb_CE = 1'b0;
                           end
                        end
                     end
                     else begin
                        f2_array_rgb_CE = 1'b0;
                     end
                  end
                  
                  4'd03:                   begin
                     case (DC_Filter_Add_2Ux1U_2U_4_4708_out1) 

                        2'd3:                         begin
                           case (DC_Filter_Add_12Ux1U_12U_4_2382_out1[8:0]) 

                              9'd257:                               begin
                                 if (2'd3 == DC_Filter_Add_2Ux1U_2U_4_4715_out1) begin
                                    f2_array_rgb_CE = 1'b1;
                                 end
                                 else begin
                                    f2_array_rgb_CE = 1'b0;
                                 end
                              end
                              
                              default:                               begin
                                 f2_array_rgb_CE = 1'b1;
                              end
                              
                           endcase

                        end
                        
                        default:                         begin
                           f2_array_rgb_CE = 1'b1;
                        end
                        
                     endcase

                  end
                  
                  4'd04:                   begin
                     if (9'd257 == s_reg_3207 && 2'd3 == DC_Filter_Add_2Ux1U_2U_4_4715_out1) begin
                        f2_array_rgb_CE = 1'b1;
                     end
                     else begin
                        f2_array_rgb_CE = 1'b0;
                     end
                  end
                  
                  4'd05:                   begin
                     if (9'd257 == s_reg_3207 && (2'd3 == DC_Filter_Add_2Ux1U_2U_4_2441_out1 && 2'd3 == DC_Filter_Add_2Ux1U_2U_4_4715_out1)) begin
                        f2_array_rgb_CE = 1'b1;
                     end
                     else begin
                        f2_array_rgb_CE = 1'b0;
                     end
                  end
                  
                  4'd06:                   begin
                     if (2'd3 == DC_Filter_Add_2Ux1U_2U_4_4715_out1) begin
                        f2_array_rgb_CE = 1'b1;
                     end
                     else begin
                        f2_array_rgb_CE = 1'b0;
                     end
                  end
                  
                  4'd07:                   begin
                     case (DC_Filter_Add_2Ux1U_2U_4_4729_out1) 

                        2'd3:                         begin
                           case (DC_Filter_Add_2Ux1U_2U_4_4739_out1) 

                              2'd3:                               begin
                                 if (2'd3 != DC_Filter_Add_2Ux1U_2U_4_4740_out1) begin
                                    f2_array_rgb_CE = 1'b1;
                                 end
                                 else begin
                                    f2_array_rgb_CE = 1'b0;
                                 end
                              end
                              
                              default:                               begin
                                 f2_array_rgb_CE = 1'b1;
                              end
                              
                           endcase

                        end
                        
                        default:                         begin
                           f2_array_rgb_CE = 1'b1;
                        end
                        
                     endcase

                  end
                  
                  4'd08:                   begin
                     if (9'd256 != DC_Filter_Add_12Ux1U_12U_4_2382_out1[8:0] && 2'd3 == DC_Filter_Add_2Ux1U_2U_4_4715_out1) begin
                        f2_array_rgb_CE = 1'b1;
                     end
                     else begin
                        f2_array_rgb_CE = 1'b0;
                     end
                  end
                  
                  default:                   begin
                     f2_array_rgb_CE = 1'b0;
                  end
                  
               endcase

            end
         end

         // resource: mux_1bx2i2c
         always @(stall0 or DC_Filter_Add_12Ux1U_12U_4_2382_out1[8:0] or DC_Filter_Add_1Ux1U_2U_4_4626_out1 or DC_Filter_LessThan_12Ux9U_1U_4_4700_out1 or DC_Filter_Add_2Ux1U_2U_4_4701_out1 or DC_Filter_LessThan_12Ux9U_1U_4_4702_out1 or DC_Filter_Add_2Ux1U_2U_4_4708_out1 or gs_ctrl10)
          begin :drive_f2_array_rgb_RW
            if (stall0) begin
               f2_array_rgb_RW = 1'b0;
            end
            else begin
               case (gs_ctrl10) 

                  2'd1:                   begin
                     f2_array_rgb_RW = 1'b1;
                  end
                  
                  2'd2:                   begin
                     if (2'd2 == DC_Filter_Add_1Ux1U_2U_4_4626_out1 && (2'd3 == DC_Filter_Add_2Ux1U_2U_4_4701_out1 && !DC_Filter_LessThan_12Ux9U_1U_4_4700_out1)) begin
                        if (DC_Filter_LessThan_12Ux9U_1U_4_4702_out1) begin
                           f2_array_rgb_RW = 1'b1;
                        end
                        else begin
                           f2_array_rgb_RW = 1'b0;
                        end
                     end
                     else begin
                        f2_array_rgb_RW = 1'b0;
                     end
                  end
                  
                  2'd3:                   begin
                     case (DC_Filter_Add_2Ux1U_2U_4_4708_out1) 

                        2'd3:                         begin
                           case (DC_Filter_Add_12Ux1U_12U_4_2382_out1[8:0]) 

                              9'd257:                               begin
                                 f2_array_rgb_RW = 1'b0;
                              end
                              
                              default:                               begin
                                 f2_array_rgb_RW = 1'b1;
                              end
                              
                           endcase

                        end
                        
                        default:                         begin
                           f2_array_rgb_RW = 1'b1;
                        end
                        
                     endcase

                  end
                  
                  default:                   begin
                     f2_array_rgb_RW = 1'b0;
                  end
                  
               endcase

            end
         end

         // resource: DC_Filter_Add_2Ux1U_2U_4  instance: DC_Filter_Add_2Ux1U_2U_4_2383
         assign DC_Filter_Add_2Ux1U_2U_4_2383_out1 = s_reg_3200 + 2'd1;

         // resource: DC_Filter_Add_2Ux1U_2U_4  instance: DC_Filter_Add_2Ux1U_2U_4_2384
         assign DC_Filter_Add_2Ux1U_2U_4_2384_out1 = s_reg_3201 + 2'd1;

         // resource: mux_2bx2i1c
         always @(DC_Filter_Add_2Ux1U_2U_4_4701_out1 or gs_ctrl11)
          begin :drive_DC_Filter_Mul_2Ux2U_4U_4_2385_in2
            if (gs_ctrl11) begin
               DC_Filter_Mul_2Ux2U_4U_4_2385_in2 = 2'd0;
            end
            else begin
               DC_Filter_Mul_2Ux2U_4U_4_2385_in2 = DC_Filter_Add_2Ux1U_2U_4_4701_out1;
            end
         end

         // resource: DC_Filter_Mul_2Ux2U_4U_4  instance: DC_Filter_Mul_2Ux2U_4U_4_2385
         assign DC_Filter_Mul_2Ux2U_4U_4_2385_out1 = {2'b00, DC_Filter_Mul_2Ux2U_4U_4_2385_in2}*4'd03;

         // resource: mux_2bx2i1c
         always @(DC_Filter_Add_2Ux1U_2U_4_2441_out1 or gs_ctrl12)
          begin :drive_DC_Filter_Add_3Ux2U_4U_4_2388_in1
            if (gs_ctrl12) begin
               DC_Filter_Add_3Ux2U_4U_4_2388_in1 = DC_Filter_Add_2Ux1U_2U_4_2441_out1;
            end
            else begin
               DC_Filter_Add_3Ux2U_4U_4_2388_in1 = 2'd1;
            end
         end

         // resource: DC_Filter_Add_3Ux2U_4U_4  instance: DC_Filter_Add_3Ux2U_4U_4_2388
         assign DC_Filter_Add_3Ux2U_4U_4_2388_out1 = {2'b00, DC_Filter_Add_3Ux2U_4U_4_2388_in1} + 4'd06;

         // resource: mux_1bx2i1c
         always @(DC_Filter_Add_1Ux1U_2U_4_4626_out1 or gs_ctrl11)
          begin :drive_DC_Filter_Add_1Ux1U_2U_4_2389_in2
            if (gs_ctrl11) begin
               DC_Filter_Add_1Ux1U_2U_4_2389_in2 = 1'b0;
            end
            else begin
               case (DC_Filter_Add_1Ux1U_2U_4_4626_out1) 

                  2'd2:                   begin
                     DC_Filter_Add_1Ux1U_2U_4_2389_in2 = 1'b0;
                  end
                  
                  default:                   begin
                     DC_Filter_Add_1Ux1U_2U_4_2389_in2 = DC_Filter_Add_1Ux1U_2U_4_4626_out1[0];
                  end
                  
               endcase

            end
         end

         // resource: DC_Filter_Add_1Ux1U_2U_4  instance: DC_Filter_Add_1Ux1U_2U_4_2389
         assign DC_Filter_Add_1Ux1U_2U_4_2389_out1 = {1'b0, DC_Filter_Add_1Ux1U_2U_4_2389_in2} + 2'd1;

         // resource: DC_Filter_Mul_2Ux2U_4U_4  instance: DC_Filter_Mul_2Ux2U_4U_4_4566
         assign DC_Filter_Mul_2Ux2U_4U_4_4566_out1 = {2'b00, s_reg_3200}*4'd03;

         // resource: DC_Filter_Add_1Ux1U_2U_4  instance: DC_Filter_Add_1Ux1U_2U_4_4626
         assign DC_Filter_Add_1Ux1U_2U_4_4626_out1 = {1'b0, s_reg_3201[0]} + 2'd1;

         // resource: mux_12bx2i0c
         always @(s_reg_3208 or DC_Filter_N_Mux_12_3_2_4_4731_out1 or gs_ctrl14)
          begin :drive_DC_Filter_Add_12Ux12U_12U_4_2424_in2
            if (gs_ctrl14) begin
               DC_Filter_Add_12Ux12U_12U_4_2424_in2 = DC_Filter_N_Mux_12_3_2_4_4731_out1;
            end
            else begin
               DC_Filter_Add_12Ux12U_12U_4_2424_in2 = s_reg_3208;
            end
         end

         // resource: mux_12bx2i0c
         always @(s_reg_3202 or DC_Filter_Mul_8Ux4U_12U_4_4734_out1 or gs_ctrl14)
          begin :drive_DC_Filter_Add_12Ux12U_12U_4_2424_in1
            if (gs_ctrl14) begin
               DC_Filter_Add_12Ux12U_12U_4_2424_in1 = DC_Filter_Mul_8Ux4U_12U_4_4734_out1;
            end
            else begin
               DC_Filter_Add_12Ux12U_12U_4_2424_in1 = {3'b000, s_reg_3202};
            end
         end

         // resource: DC_Filter_Add_12Ux12U_12U_4  instance: DC_Filter_Add_12Ux12U_12U_4_2424
         assign DC_Filter_Add_12Ux12U_12U_4_2424_out1 = DC_Filter_Add_12Ux12U_12U_4_2424_in2 + DC_Filter_Add_12Ux12U_12U_4_2424_in1;

         // resource: DC_Filter_Add_2Ux1U_2U_4  instance: DC_Filter_Add_2Ux1U_2U_4_2441
         assign DC_Filter_Add_2Ux1U_2U_4_2441_out1 = s_reg_3201 + 2'd1;

         // resource: DC_Filter_LessThan_12Ux9U_1U_4  instance: DC_Filter_LessThan_12Ux9U_1U_4_4700
         assign DC_Filter_LessThan_12Ux9U_1U_4_4700_out1 = s_reg_3203 < 12'd0257;

         // resource: DC_Filter_Add_2Ux1U_2U_4  instance: DC_Filter_Add_2Ux1U_2U_4_4701
         assign DC_Filter_Add_2Ux1U_2U_4_4701_out1 = s_reg_3200 + 2'd1;

         // resource: DC_Filter_LessThan_12Ux9U_1U_4  instance: DC_Filter_LessThan_12Ux9U_1U_4_4702
         assign DC_Filter_LessThan_12Ux9U_1U_4_4702_out1 = s_reg_3203 < 12'd0258;

         // resource: DC_Filter_Add_2Ux1U_2U_4  instance: DC_Filter_Add_2Ux1U_2U_4_4708
         assign DC_Filter_Add_2Ux1U_2U_4_4708_out1 = s_reg_3201 + 2'd1;

         // resource: mux_2bx2i1c
         always @(s_reg_3206 or gs_ctrl16)
          begin :drive_DC_Filter_Add_2Ux1U_2U_4_4715_in2
            if (gs_ctrl16) begin
               DC_Filter_Add_2Ux1U_2U_4_4715_in2 = s_reg_3206;
            end
            else begin
               DC_Filter_Add_2Ux1U_2U_4_4715_in2 = 2'd0;
            end
         end

         // resource: DC_Filter_Add_2Ux1U_2U_4  instance: DC_Filter_Add_2Ux1U_2U_4_4715
         assign DC_Filter_Add_2Ux1U_2U_4_4715_out1 = DC_Filter_Add_2Ux1U_2U_4_4715_in2 + 2'd1;

         // resource: mux_2bx2i1c
         always @(s_reg_3206 or gs_ctrl17)
          begin :drive_DC_Filter_Equal_2Ux2U_1U_4_4716_in2
            if (gs_ctrl17) begin
               DC_Filter_Equal_2Ux2U_1U_4_4716_in2 = s_reg_3206;
            end
            else begin
               DC_Filter_Equal_2Ux2U_1U_4_4716_in2 = 2'd0;
            end
         end

         // resource: DC_Filter_Equal_2Ux2U_1U_4  instance: DC_Filter_Equal_2Ux2U_1U_4_4716
         assign DC_Filter_Equal_2Ux2U_1U_4_4716_out1 = DC_Filter_Equal_2Ux2U_1U_4_4716_in2 == 2'd2;

         // resource: DC_Filter_Equal_2Ux1U_1U_4  instance: DC_Filter_Equal_2Ux1U_1U_4_4717
         assign DC_Filter_Equal_2Ux1U_1U_4_4717_out1 = DC_Filter_Add_2Ux1U_2U_4_4715_in2 == 2'd1;

         // resource: DC_Filter_OrReduction_2U_1U_4  instance: DC_Filter_OrReduction_2U_1U_4_4718
         assign DC_Filter_OrReduction_2U_1U_4_4718_out1 = (|DC_Filter_Add_2Ux1U_2U_4_4715_in2);

         // resource: DC_Filter_N_Mux_12_2_0_4
         always @(s_reg_3197 or DC_Filter_Equal_2Ux2U_1U_4_4716_out1)
          begin :DC_Filter_N_Mux_12_2_0_4_4719
            if (DC_Filter_Equal_2Ux2U_1U_4_4716_out1) begin
               DC_Filter_N_Mux_12_2_0_4_4719_out1 = 12'd0000;
            end
            else begin
               DC_Filter_N_Mux_12_2_0_4_4719_out1 = s_reg_3197;
            end
         end

         // resource: DC_Filter_N_Mux_12_2_0_4
         always @(s_reg_3198 or DC_Filter_Equal_2Ux1U_1U_4_4717_out1)
          begin :DC_Filter_N_Mux_12_2_0_4_4720
            if (DC_Filter_Equal_2Ux1U_1U_4_4717_out1) begin
               DC_Filter_N_Mux_12_2_0_4_4720_out1 = 12'd0000;
            end
            else begin
               DC_Filter_N_Mux_12_2_0_4_4720_out1 = s_reg_3198;
            end
         end

         // resource: DC_Filter_N_Mux_12_2_1_4
         always @(s_reg_3199 or DC_Filter_OrReduction_2U_1U_4_4718_out1)
          begin :DC_Filter_N_Mux_12_2_1_4_4721
            if (DC_Filter_OrReduction_2U_1U_4_4718_out1) begin
               DC_Filter_N_Mux_12_2_1_4_4721_out1 = s_reg_3199;
            end
            else begin
               DC_Filter_N_Mux_12_2_1_4_4721_out1 = 12'd0000;
            end
         end

         // resource: mux_2bx3i1c
         always @(s_reg_3201 or DC_Filter_Add_2Ux1U_2U_4_4729_out1 or DC_Filter_Add_2Ux1U_2U_4_4739_out1 or gs_ctrl14)
          begin :drive_DC_Filter_Mul_2Ux2U_4U_4_4724_in2
            if (gs_ctrl14) begin
               case (DC_Filter_Add_2Ux1U_2U_4_4729_out1) 

                  2'd3:                   begin
                     case (DC_Filter_Add_2Ux1U_2U_4_4739_out1) 

                        2'd3:                         begin
                           DC_Filter_Mul_2Ux2U_4U_4_4724_in2 = 2'd0;
                        end
                        
                        default:                         begin
                           DC_Filter_Mul_2Ux2U_4U_4_4724_in2 = DC_Filter_Add_2Ux1U_2U_4_4739_out1;
                        end
                        
                     endcase

                  end
                  
                  default:                   begin
                     DC_Filter_Mul_2Ux2U_4U_4_4724_in2 = s_reg_3201;
                  end
                  
               endcase

            end
            else begin
               DC_Filter_Mul_2Ux2U_4U_4_4724_in2 = 2'd0;
            end
         end

         // resource: DC_Filter_Mul_2Ux2U_4U_4  instance: DC_Filter_Mul_2Ux2U_4U_4_4724
         assign DC_Filter_Mul_2Ux2U_4U_4_4724_out1 = {2'b00, DC_Filter_Mul_2Ux2U_4U_4_4724_in2}*4'd03;

         // resource: mux_8bx3i1c
         always @(s_reg_3202[7:0] or DC_Filter_Add_12Ux1U_12U_4_2382_out1[7:0] or gs_ctrl21)
          begin :drive_DC_Filter_Add_8Ux2U_9U_4_4725_in2
            case (gs_ctrl21) 

               2'd1:                begin
                  DC_Filter_Add_8Ux2U_9U_4_4725_in2 = s_reg_3202[7:0];
               end
               
               2'd2:                begin
                  DC_Filter_Add_8Ux2U_9U_4_4725_in2 = DC_Filter_Add_12Ux1U_12U_4_2382_out1[7:0];
               end
               
               default:                begin
                  DC_Filter_Add_8Ux2U_9U_4_4725_in2 = 8'd000;
               end
               
            endcase

         end

         // resource: mux_2bx3i1c
         always @(s_reg_3200 or DC_Filter_Add_2Ux1U_2U_4_4729_out1 or DC_Filter_Add_2Ux1U_2U_4_4739_out1 or DC_Filter_Add_2Ux1U_2U_4_4740_out1 or gs_ctrl22)
          begin :drive_DC_Filter_Add_8Ux2U_9U_4_4725_in1
            case (gs_ctrl22) 

               2'd1:                begin
                  DC_Filter_Add_8Ux2U_9U_4_4725_in1 = s_reg_3200;
               end
               
               2'd2:                begin
                  case (DC_Filter_Add_2Ux1U_2U_4_4729_out1) 

                     2'd3:                      begin
                        case (DC_Filter_Add_2Ux1U_2U_4_4739_out1) 

                           2'd3:                            begin
                              DC_Filter_Add_8Ux2U_9U_4_4725_in1 = DC_Filter_Add_2Ux1U_2U_4_4740_out1;
                           end
                           
                           default:                            begin
                              DC_Filter_Add_8Ux2U_9U_4_4725_in1 = s_reg_3200;
                           end
                           
                        endcase

                     end
                     
                     default:                      begin
                        DC_Filter_Add_8Ux2U_9U_4_4725_in1 = s_reg_3200;
                     end
                     
                  endcase

               end
               
               default:                begin
                  DC_Filter_Add_8Ux2U_9U_4_4725_in1 = 2'd0;
               end
               
            endcase

         end

         // resource: DC_Filter_Add_8Ux2U_9U_4  instance: DC_Filter_Add_8Ux2U_9U_4_4725
         assign DC_Filter_Add_8Ux2U_9U_4_4725_out1 = {1'b0, DC_Filter_Add_8Ux2U_9U_4_4725_in2} + {7'b0000000, DC_Filter_Add_8Ux2U_9U_4_4725_in1};

         // resource: DC_Filter_Add_4Ux2U_4U_4  instance: DC_Filter_Add_4Ux2U_4U_4_4727
         assign DC_Filter_Add_4Ux2U_4U_4_4727_out1 = DC_Filter_Mul_2Ux2U_4U_4_4724_out1 + {2'b00, DC_Filter_Add_8Ux2U_9U_4_4725_in1};

         // resource: DC_Filter_Add_2Ux1U_2U_4  instance: DC_Filter_Add_2Ux1U_2U_4_4729
         assign DC_Filter_Add_2Ux1U_2U_4_4729_out1 = s_reg_3206 + 2'd1;

         // resource: DC_Filter_OrReduction_2U_1U_4  instance: DC_Filter_OrReduction_2U_1U_4_4730
         assign DC_Filter_OrReduction_2U_1U_4_4730_out1 = (|s_reg_3206);

         // resource: DC_Filter_N_Mux_12_3_2_4
         always @(s_reg_3197 or s_reg_3198 or s_reg_3199 or s_reg_3206)
          begin :DC_Filter_N_Mux_12_3_2_4_4731
            case (s_reg_3206) 

               2'd0:                begin
                  DC_Filter_N_Mux_12_3_2_4_4731_out1 = s_reg_3199;
               end
               
               2'd1:                begin
                  DC_Filter_N_Mux_12_3_2_4_4731_out1 = s_reg_3198;
               end
               
               default:                begin
                  DC_Filter_N_Mux_12_3_2_4_4731_out1 = s_reg_3197;
               end
               
            endcase

         end

         // resource: DC_Filter_Equal_2Ux1U_1U_4  instance: DC_Filter_Equal_2Ux1U_1U_4_4733
         assign DC_Filter_Equal_2Ux1U_1U_4_4733_out1 = s_reg_3206 == 2'd1;

         // instance: drive_mask2_in1
         assign mask2_in1 = DC_Filter_Add_4Ux2U_4U_4_4727_out1;

         // resource: DC_Filter_Mul_8Ux4U_12U_4  instance: DC_Filter_Mul_8Ux4U_12U_4_4734
         assign DC_Filter_Mul_8Ux4U_12U_4_4734_out1 = {4'b0000, f2_array_rgb_out1}*{8'b00000000, mask2_out1};

         // resource: DC_Filter_N_Mux_12_2_3_4
         always @(s_reg_3197 or DC_Filter_Add_12Ux12U_12U_4_2424_out1 or DC_Filter_Equal_2Ux2U_1U_4_4716_out1)
          begin :DC_Filter_N_Mux_12_2_3_4_4736
            if (DC_Filter_Equal_2Ux2U_1U_4_4716_out1) begin
               DC_Filter_N_Mux_12_2_3_4_4736_out1 = DC_Filter_Add_12Ux12U_12U_4_2424_out1;
            end
            else begin
               DC_Filter_N_Mux_12_2_3_4_4736_out1 = s_reg_3197;
            end
         end

         // resource: DC_Filter_N_Mux_12_2_3_4
         always @(s_reg_3198 or DC_Filter_Add_12Ux12U_12U_4_2424_out1 or DC_Filter_Equal_2Ux1U_1U_4_4733_out1)
          begin :DC_Filter_N_Mux_12_2_3_4_4737
            if (DC_Filter_Equal_2Ux1U_1U_4_4733_out1) begin
               DC_Filter_N_Mux_12_2_3_4_4737_out1 = DC_Filter_Add_12Ux12U_12U_4_2424_out1;
            end
            else begin
               DC_Filter_N_Mux_12_2_3_4_4737_out1 = s_reg_3198;
            end
         end

         // resource: DC_Filter_N_Mux_12_2_3_4
         always @(s_reg_3199 or DC_Filter_Add_12Ux12U_12U_4_2424_out1 or DC_Filter_OrReduction_2U_1U_4_4730_out1)
          begin :DC_Filter_N_Mux_12_2_3_4_4738
            if (DC_Filter_OrReduction_2U_1U_4_4730_out1) begin
               DC_Filter_N_Mux_12_2_3_4_4738_out1 = s_reg_3199;
            end
            else begin
               DC_Filter_N_Mux_12_2_3_4_4738_out1 = DC_Filter_Add_12Ux12U_12U_4_2424_out1;
            end
         end

         // resource: DC_Filter_Add_2Ux1U_2U_4  instance: DC_Filter_Add_2Ux1U_2U_4_4739
         assign DC_Filter_Add_2Ux1U_2U_4_4739_out1 = s_reg_3201 + 2'd1;

         // resource: DC_Filter_Add_2Ux1U_2U_4  instance: DC_Filter_Add_2Ux1U_2U_4_4740
         assign DC_Filter_Add_2Ux1U_2U_4_4740_out1 = s_reg_3200 + 2'd1;

         // resource: regr_en_sc_10
         always @(posedge i_clk)
          begin :drive_global_state
            if (i_rst == 1'b0) begin
               global_state <= 10'd0000;
            end
            else begin
               case (stall0) 

                  1'b1:                   begin
                  end
                  
                  1'b0:                   begin
                     global_state <= global_state_next;
                  end
                  
               endcase

            end
         end

         // resource: mux_10bx8i7c
         always @(s_reg_3203 or s_reg_3207 or DC_Filter_Add_12Ux1U_12U_4_2382_out1[8:0] or DC_Filter_Add_2Ux1U_2U_4_2383_out1 or DC_Filter_Add_2Ux1U_2U_4_2384_out1 or DC_Filter_Add_1Ux1U_2U_4_4626_out1 or DC_Filter_Add_2Ux1U_2U_4_2441_out1 or DC_Filter_LessThan_12Ux9U_1U_4_4700_out1 or DC_Filter_Add_2Ux1U_2U_4_4701_out1 or DC_Filter_LessThan_12Ux9U_1U_4_4702_out1 or DC_Filter_Add_2Ux1U_2U_4_4708_out1 or DC_Filter_Add_2Ux1U_2U_4_4715_out1 or DC_Filter_Add_2Ux1U_2U_4_4729_out1 or 
DC_Filter_Add_2Ux1U_2U_4_4739_out1
          or DC_Filter_Add_2Ux1U_2U_4_4740_out1 or global_state)
          begin :drive_global_state_next
            case (global_state) 

               10'd0001:                begin
                  case (DC_Filter_Add_12Ux1U_12U_4_2382_out1[8:0]) 

                     9'd258:                      begin
                        case (DC_Filter_Add_2Ux1U_2U_4_2384_out1) 

                           2'd3:                            begin
                              /* state6 */
                              case (DC_Filter_Add_2Ux1U_2U_4_2383_out1) 

                                 2'd3:                                  begin
                                    global_state_next = 10'd0520;
                                 end
                                 
                                 default:                                  begin
                                    global_state_next = 10'd0000;
                                 end
                                 
                              endcase

                           end
                           
                           default:                            begin
                              global_state_next = 10'd0000;
                           end
                           
                        endcase

                     end
                     
                     default:                      begin
                        global_state_next = 10'd0000;
                     end
                     
                  endcase

               end
               
               10'd0514:                begin
                  case (DC_Filter_Add_1Ux1U_2U_4_4626_out1) 

                     2'd2:                      begin
                        case (DC_Filter_Add_2Ux1U_2U_4_4701_out1) 

                           2'd3:                            begin
                              if (DC_Filter_LessThan_12Ux9U_1U_4_4700_out1) begin
                                 global_state_next = 10'd0516;
                              end
                              else begin
                                 if (DC_Filter_LessThan_12Ux9U_1U_4_4702_out1) begin
                                    global_state_next = global_state + 10'd0001;
                                 end
                                 else begin
                                    case (DC_Filter_Add_2Ux1U_2U_4_4715_out1) 

                                       2'd3:                                        begin
                                          global_state_next = 10'd0525;
                                       end
                                       
                                       default:                                        begin
                                          global_state_next = 10'd0524;
                                       end
                                       
                                    endcase

                                 end
                              end
                           end
                           
                           default:                            begin
                              global_state_next = 10'd0002;
                           end
                           
                        endcase

                     end
                     
                     default:                      begin
                        global_state_next = 10'd0002;
                     end
                     
                  endcase

               end
               
               10'd0515:                begin
                  case (DC_Filter_Add_2Ux1U_2U_4_4708_out1) 

                     2'd3:                      begin
                        case (DC_Filter_Add_12Ux1U_12U_4_2382_out1[8:0]) 

                           9'd257:                            begin
                              case (DC_Filter_Add_2Ux1U_2U_4_4715_out1) 

                                 2'd3:                                  begin
                                    global_state_next = 10'd0525;
                                 end
                                 
                                 default:                                  begin
                                    global_state_next = 10'd0524;
                                 end
                                 
                              endcase

                           end
                           
                           default:                            begin
                              global_state_next = 10'd0515;
                           end
                           
                        endcase

                     end
                     
                     default:                      begin
                        global_state_next = 10'd0515;
                     end
                     
                  endcase

               end
               
               10'd0519:                begin
                  case (s_reg_3207) 

                     9'd257:                      begin
                        case (DC_Filter_Add_2Ux1U_2U_4_4715_out1) 

                           2'd3:                            begin
                              global_state_next = 10'd0525;
                           end
                           
                           default:                            begin
                              global_state_next = 10'd0524;
                           end
                           
                        endcase

                     end
                     
                     default:                      begin
                        global_state_next = 10'd0516;
                     end
                     
                  endcase

               end
               
               10'd0523:                begin
                  case (s_reg_3207) 

                     9'd257:                      begin
                        case (DC_Filter_Add_2Ux1U_2U_4_2441_out1) 

                           2'd3:                            begin
                              case (DC_Filter_Add_2Ux1U_2U_4_4715_out1) 

                                 2'd3:                                  begin
                                    global_state_next = 10'd0525;
                                 end
                                 
                                 default:                                  begin
                                    global_state_next = global_state + 10'd0001;
                                 end
                                 
                              endcase

                           end
                           
                           default:                            begin
                              global_state_next = 10'd0520;
                           end
                           
                        endcase

                     end
                     
                     default:                      begin
                        global_state_next = 10'd0520;
                     end
                     
                  endcase

               end
               
               10'd0524:                begin
                  case (DC_Filter_Add_2Ux1U_2U_4_4715_out1) 

                     2'd3:                      begin
                        global_state_next = global_state + 10'd0001;
                     end
                     
                     default:                      begin
                        global_state_next = 10'd0524;
                     end
                     
                  endcase

               end
               
               10'd0525:                begin
                  case (DC_Filter_Add_2Ux1U_2U_4_4729_out1) 

                     2'd3:                      begin
                        case (DC_Filter_Add_2Ux1U_2U_4_4739_out1) 

                           2'd3:                            begin
                              case (DC_Filter_Add_2Ux1U_2U_4_4740_out1) 

                                 2'd3:                                  begin
                                    global_state_next = global_state + 10'd0001;
                                 end
                                 
                                 default:                                  begin
                                    global_state_next = 10'd0525;
                                 end
                                 
                              endcase

                           end
                           
                           default:                            begin
                              global_state_next = 10'd0525;
                           end
                           
                        endcase

                     end
                     
                     default:                      begin
                        global_state_next = 10'd0525;
                     end
                     
                  endcase

               end
               
               10'd0526:                begin
                  /* state578 */
                  case (DC_Filter_Add_12Ux1U_12U_4_2382_out1[8:0]) 

                     9'd256:                      begin
                        case (s_reg_3203) 

                           12'd0000:                            begin
                              global_state_next = 10'd0520;
                           end
                           
                           default:                            begin
                              global_state_next = 10'd0002;
                           end
                           
                        endcase

                     end
                     
                     default:                      begin
                        case (DC_Filter_Add_2Ux1U_2U_4_4715_out1) 

                           2'd3:                            begin
                              global_state_next = 10'd0525;
                           end
                           
                           default:                            begin
                              global_state_next = 10'd0524;
                           end
                           
                        endcase

                     end
                     
                  endcase

               end
               
               default:                begin
                  global_state_next = global_state + 10'd0001;
               end
               
            endcase

         end

         // resource: mux_2bx4i4c
         // resource: regr_en_sc_2
         always @(posedge i_clk)
          begin :drive_gs_ctrl0
            if (i_rst == 1'b0) begin
               gs_ctrl0 <= 2'd0;
            end
            else begin
               case (stall0) 

                  1'b1:                   begin
                  end
                  
                  1'b0:                   begin
                     case (global_state_next) 

                        10'd0514, 10'd0519, 10'd0523, 10'd0524, 10'd0526:                         begin
                           gs_ctrl0 <= 2'd1;
                        end
                        
                        10'd0515:                         begin
                           gs_ctrl0 <= 2'd2;
                        end
                        
                        10'd0525:                         begin
                           gs_ctrl0 <= 2'd3;
                        end
                        
                        default:                         begin
                           gs_ctrl0 <= 2'd0;
                        end
                        
                     endcase

                  end
                  
               endcase

            end
         end

         // resource: mux_2bx4i4c
         // resource: regr_en_sc_2
         always @(posedge i_clk)
          begin :drive_gs_ctrl1
            if (i_rst == 1'b0) begin
               gs_ctrl1 <= 2'd0;
            end
            else begin
               case (stall0) 

                  1'b1:                   begin
                  end
                  
                  1'b0:                   begin
                     case (global_state_next) 

                        10'd0002, 10'd0004:                         begin
                           gs_ctrl1 <= 2'd1;
                        end
                        
                        10'd0003, 10'd0005, 10'd0006, 10'd0007, 10'd0008, 10'd0009, 10'd0010, 10'd0011, 10'd0012, 10'd0013, 10'd0014, 10'd0015, 10'd0016, 10'd0017, 10'd0018, 10'd0019, 10'd0020, 10'd0021, 10'd0022, 10'd0023, 10'd0024, 10'd0025, 10'd0026, 10'd0027, 10'd0028, 10'd0029, 10'd0030, 10'd0031, 10'd0032, 10'd0033, 10'd0034, 10'd0035, 10'd0036, 10'd0037, 10'd0038, 10'd0039, 10'd0040, 10'd0041, 10'd0042, 10'd0043, 10'd0044, 10'd0045, 10'd0046, 10'd0047, 10'd0048, 10'd0049, 10'd0050, 
10'd0051
                        , 10'd0052, 10'd0053, 10'd0054, 10'd0055, 10'd0056, 10'd0057, 10'd0058, 10'd0059, 10'd0060, 10'd0061, 10'd0062, 10'd0063, 10'd0064, 10'd0065, 10'd0066, 10'd0067, 10'd0068, 10'd0069, 10'd0070, 10'd0071, 10'd0072, 10'd0073, 10'd0074, 10'd0075, 10'd0076, 10'd0077, 10'd0078, 10'd0079, 10'd0080, 10'd0081, 10'd0082, 10'd0083, 10'd0084, 10'd0085, 10'd0086, 10'd0087, 10'd0088, 10'd0089, 10'd0090, 10'd0091, 10'd0092, 10'd0093, 10'd0094, 10'd0095, 10'd0096, 10'd0097, 10'd0098, 
10'd0099
                        , 10'd0100, 10'd0101, 10'd0102, 10'd0103, 10'd0104, 10'd0105, 10'd0106, 10'd0107, 10'd0108, 10'd0109, 10'd0110, 10'd0111, 10'd0112, 10'd0113, 10'd0114, 10'd0115, 10'd0116, 10'd0117, 10'd0118, 10'd0119, 10'd0120, 10'd0121, 10'd0122, 10'd0123, 10'd0124, 10'd0125, 10'd0126, 10'd0127, 10'd0128, 10'd0129, 10'd0130, 10'd0131, 10'd0132, 10'd0133, 10'd0134, 10'd0135, 10'd0136, 10'd0137, 10'd0138, 10'd0139, 10'd0140, 10'd0141, 10'd0142, 10'd0143, 10'd0144, 10'd0145, 10'd0146, 
10'd0147
                        , 10'd0148, 10'd0149, 10'd0150, 10'd0151, 10'd0152, 10'd0153, 10'd0154, 10'd0155, 10'd0156, 10'd0157, 10'd0158, 10'd0159, 10'd0160, 10'd0161, 10'd0162, 10'd0163, 10'd0164, 10'd0165, 10'd0166, 10'd0167, 10'd0168, 10'd0169, 10'd0170, 10'd0171, 10'd0172, 10'd0173, 10'd0174, 10'd0175, 10'd0176, 10'd0177, 10'd0178, 10'd0179, 10'd0180, 10'd0181, 10'd0182, 10'd0183, 10'd0184, 10'd0185, 10'd0186, 10'd0187, 10'd0188, 10'd0189, 10'd0190, 10'd0191, 10'd0192, 10'd0193, 10'd0194, 
10'd0195
                        , 10'd0196, 10'd0197, 10'd0198, 10'd0199, 10'd0200, 10'd0201, 10'd0202, 10'd0203, 10'd0204, 10'd0205, 10'd0206, 10'd0207, 10'd0208, 10'd0209, 10'd0210, 10'd0211, 10'd0212, 10'd0213, 10'd0214, 10'd0215, 10'd0216, 10'd0217, 10'd0218, 10'd0219, 10'd0220, 10'd0221, 10'd0222, 10'd0223, 10'd0224, 10'd0225, 10'd0226, 10'd0227, 10'd0228, 10'd0229, 10'd0230, 10'd0231, 10'd0232, 10'd0233, 10'd0234, 10'd0235, 10'd0236, 10'd0237, 10'd0238, 10'd0239, 10'd0240, 10'd0241, 10'd0242, 
10'd0243
                        , 10'd0244, 10'd0245, 10'd0246, 10'd0247, 10'd0248, 10'd0249, 10'd0250, 10'd0251, 10'd0252, 10'd0253, 10'd0254, 10'd0255, 10'd0256, 10'd0257, 10'd0258, 10'd0259, 10'd0260, 10'd0261, 10'd0262, 10'd0263, 10'd0264, 10'd0265, 10'd0266, 10'd0267, 10'd0268, 10'd0269, 10'd0270, 10'd0271, 10'd0272, 10'd0273, 10'd0274, 10'd0275, 10'd0276, 10'd0277, 10'd0278, 10'd0279, 10'd0280, 10'd0281, 10'd0282, 10'd0283, 10'd0284, 10'd0285, 10'd0286, 10'd0287, 10'd0288, 10'd0289, 10'd0290, 
10'd0291
                        , 10'd0292, 10'd0293, 10'd0294, 10'd0295, 10'd0296, 10'd0297, 10'd0298, 10'd0299, 10'd0300, 10'd0301, 10'd0302, 10'd0303, 10'd0304, 10'd0305, 10'd0306, 10'd0307, 10'd0308, 10'd0309, 10'd0310, 10'd0311, 10'd0312, 10'd0313, 10'd0314, 10'd0315, 10'd0316, 10'd0317, 10'd0318, 10'd0319, 10'd0320, 10'd0321, 10'd0322, 10'd0323, 10'd0324, 10'd0325, 10'd0326, 10'd0327, 10'd0328, 10'd0329, 10'd0330, 10'd0331, 10'd0332, 10'd0333, 10'd0334, 10'd0335, 10'd0336, 10'd0337, 10'd0338, 
10'd0339
                        , 10'd0340, 10'd0341, 10'd0342, 10'd0343, 10'd0344, 10'd0345, 10'd0346, 10'd0347, 10'd0348, 10'd0349, 10'd0350, 10'd0351, 10'd0352, 10'd0353, 10'd0354, 10'd0355, 10'd0356, 10'd0357, 10'd0358, 10'd0359, 10'd0360, 10'd0361, 10'd0362, 10'd0363, 10'd0364, 10'd0365, 10'd0366, 10'd0367, 10'd0368, 10'd0369, 10'd0370, 10'd0371, 10'd0372, 10'd0373, 10'd0374, 10'd0375, 10'd0376, 10'd0377, 10'd0378, 10'd0379, 10'd0380, 10'd0381, 10'd0382, 10'd0383, 10'd0384, 10'd0385, 10'd0386, 
10'd0387
                        , 10'd0388, 10'd0389, 10'd0390, 10'd0391, 10'd0392, 10'd0393, 10'd0394, 10'd0395, 10'd0396, 10'd0397, 10'd0398, 10'd0399, 10'd0400, 10'd0401, 10'd0402, 10'd0403, 10'd0404, 10'd0405, 10'd0406, 10'd0407, 10'd0408, 10'd0409, 10'd0410, 10'd0411, 10'd0412, 10'd0413, 10'd0414, 10'd0415, 10'd0416, 10'd0417, 10'd0418, 10'd0419, 10'd0420, 10'd0421, 10'd0422, 10'd0423, 10'd0424, 10'd0425, 10'd0426, 10'd0427, 10'd0428, 10'd0429, 10'd0430, 10'd0431, 10'd0432, 10'd0433, 10'd0434, 
10'd0435
                        , 10'd0436, 10'd0437, 10'd0438, 10'd0439, 10'd0440, 10'd0441, 10'd0442, 10'd0443, 10'd0444, 10'd0445, 10'd0446, 10'd0447, 10'd0448, 10'd0449, 10'd0450, 10'd0451, 10'd0452, 10'd0453, 10'd0454, 10'd0455, 10'd0456, 10'd0457, 10'd0458, 10'd0459, 10'd0460, 10'd0461, 10'd0462, 10'd0463, 10'd0464, 10'd0465, 10'd0466, 10'd0467, 10'd0468, 10'd0469, 10'd0470, 10'd0471, 10'd0472, 10'd0473, 10'd0474, 10'd0475, 10'd0476, 10'd0477, 10'd0478, 10'd0479, 10'd0480, 10'd0481, 10'd0482, 
10'd0483
                        , 10'd0484, 10'd0485, 10'd0486, 10'd0487, 10'd0488, 10'd0489, 10'd0490, 10'd0491, 10'd0492, 10'd0493, 10'd0494, 10'd0495, 10'd0496, 10'd0497, 10'd0498, 10'd0499, 10'd0500, 10'd0501, 10'd0502, 10'd0503, 10'd0504, 10'd0505, 10'd0506, 10'd0507, 10'd0508, 10'd0509, 10'd0510, 10'd0511, 10'd0512, 10'd0513:                         begin
                           gs_ctrl1 <= 2'd2;
                        end
                        
                        10'd0520:                         begin
                           gs_ctrl1 <= 2'd3;
                        end
                        
                        default:                         begin
                           gs_ctrl1 <= 2'd0;
                        end
                        
                     endcase

                  end
                  
               endcase

            end
         end

         // resource: mux_3bx8i8c
         // resource: regr_en_sc_3
         always @(posedge i_clk)
          begin :drive_gs_ctrl2
            if (i_rst == 1'b0) begin
               gs_ctrl2 <= 3'd0;
            end
            else begin
               case (stall0) 

                  1'b1:                   begin
                  end
                  
                  1'b0:                   begin
                     case (global_state_next) 

                        10'd0002, 10'd0004, 10'd0006, 10'd0008, 10'd0010, 10'd0012, 10'd0014, 10'd0016, 10'd0018, 10'd0020, 10'd0022, 10'd0024, 10'd0026, 10'd0028, 10'd0030, 10'd0032, 10'd0034, 10'd0036, 10'd0038, 10'd0040, 10'd0042, 10'd0044, 10'd0046, 10'd0048, 10'd0050, 10'd0052, 10'd0054, 10'd0056, 10'd0058, 10'd0060, 10'd0062, 10'd0064, 10'd0066, 10'd0068, 10'd0070, 10'd0072, 10'd0074, 10'd0076, 10'd0078, 10'd0080, 10'd0082, 10'd0084, 10'd0086, 10'd0088, 10'd0090, 10'd0092, 10'd0094, 
10'd0096
                        , 10'd0098, 10'd0100, 10'd0102, 10'd0104, 10'd0106, 10'd0108, 10'd0110, 10'd0112, 10'd0114, 10'd0116, 10'd0118, 10'd0120, 10'd0122, 10'd0124, 10'd0126, 10'd0128, 10'd0130, 10'd0132, 10'd0134, 10'd0136, 10'd0138, 10'd0140, 10'd0142, 10'd0144, 10'd0146, 10'd0148, 10'd0150, 10'd0152, 10'd0154, 10'd0156, 10'd0158, 10'd0160, 10'd0162, 10'd0164, 10'd0166, 10'd0168, 10'd0170, 10'd0172, 10'd0174, 10'd0176, 10'd0178, 10'd0180, 10'd0182, 10'd0184, 10'd0186, 10'd0188, 10'd0190, 
10'd0192
                        , 10'd0194, 10'd0196, 10'd0198, 10'd0200, 10'd0202, 10'd0204, 10'd0206, 10'd0208, 10'd0210, 10'd0212, 10'd0214, 10'd0216, 10'd0218, 10'd0220, 10'd0222, 10'd0224, 10'd0226, 10'd0228, 10'd0230, 10'd0232, 10'd0234, 10'd0236, 10'd0238, 10'd0240, 10'd0242, 10'd0244, 10'd0246, 10'd0248, 10'd0250, 10'd0252, 10'd0254, 10'd0256, 10'd0258, 10'd0260, 10'd0262, 10'd0264, 10'd0266, 10'd0268, 10'd0270, 10'd0272, 10'd0274, 10'd0276, 10'd0278, 10'd0280, 10'd0282, 10'd0284, 10'd0286, 
10'd0288
                        , 10'd0290, 10'd0292, 10'd0294, 10'd0296, 10'd0298, 10'd0300, 10'd0302, 10'd0304, 10'd0306, 10'd0308, 10'd0310, 10'd0312, 10'd0314, 10'd0316, 10'd0318, 10'd0320, 10'd0322, 10'd0324, 10'd0326, 10'd0328, 10'd0330, 10'd0332, 10'd0334, 10'd0336, 10'd0338, 10'd0340, 10'd0342, 10'd0344, 10'd0346, 10'd0348, 10'd0350, 10'd0352, 10'd0354, 10'd0356, 10'd0358, 10'd0360, 10'd0362, 10'd0364, 10'd0366, 10'd0368, 10'd0370, 10'd0372, 10'd0374, 10'd0376, 10'd0378, 10'd0380, 10'd0382, 
10'd0384
                        , 10'd0386, 10'd0388, 10'd0390, 10'd0392, 10'd0394, 10'd0396, 10'd0398, 10'd0400, 10'd0402, 10'd0404, 10'd0406, 10'd0408, 10'd0410, 10'd0412, 10'd0414, 10'd0416, 10'd0418, 10'd0420, 10'd0422, 10'd0424, 10'd0426, 10'd0428, 10'd0430, 10'd0432, 10'd0434, 10'd0436, 10'd0438, 10'd0440, 10'd0442, 10'd0444, 10'd0446, 10'd0448, 10'd0450, 10'd0452, 10'd0454, 10'd0456, 10'd0458, 10'd0460, 10'd0462, 10'd0464, 10'd0466, 10'd0468, 10'd0470, 10'd0472, 10'd0474, 10'd0476, 10'd0478, 
10'd0480
                        , 10'd0482, 10'd0484, 10'd0486, 10'd0488, 10'd0490, 10'd0492, 10'd0494, 10'd0496, 10'd0498, 10'd0500, 10'd0502, 10'd0504, 10'd0506, 10'd0508, 10'd0510, 10'd0512:                         begin
                           gs_ctrl2 <= 3'd1;
                        end
                        
                        10'd0003, 10'd0005, 10'd0007, 10'd0009, 10'd0011, 10'd0013, 10'd0015, 10'd0017, 10'd0019, 10'd0021, 10'd0023, 10'd0025, 10'd0027, 10'd0029, 10'd0031, 10'd0033, 10'd0035, 10'd0037, 10'd0039, 10'd0041, 10'd0043, 10'd0045, 10'd0047, 10'd0049, 10'd0051, 10'd0053, 10'd0055, 10'd0057, 10'd0059, 10'd0061, 10'd0063, 10'd0065, 10'd0067, 10'd0069, 10'd0071, 10'd0073, 10'd0075, 10'd0077, 10'd0079, 10'd0081, 10'd0083, 10'd0085, 10'd0087, 10'd0089, 10'd0091, 10'd0093, 10'd0095, 
10'd0097
                        , 10'd0099, 10'd0101, 10'd0103, 10'd0105, 10'd0107, 10'd0109, 10'd0111, 10'd0113, 10'd0115, 10'd0117, 10'd0119, 10'd0121, 10'd0123, 10'd0125, 10'd0127, 10'd0129, 10'd0131, 10'd0133, 10'd0135, 10'd0137, 10'd0139, 10'd0141, 10'd0143, 10'd0145, 10'd0147, 10'd0149, 10'd0151, 10'd0153, 10'd0155, 10'd0157, 10'd0159, 10'd0161, 10'd0163, 10'd0165, 10'd0167, 10'd0169, 10'd0171, 10'd0173, 10'd0175, 10'd0177, 10'd0179, 10'd0181, 10'd0183, 10'd0185, 10'd0187, 10'd0189, 10'd0191, 
10'd0193
                        , 10'd0195, 10'd0197, 10'd0199, 10'd0201, 10'd0203, 10'd0205, 10'd0207, 10'd0209, 10'd0211, 10'd0213, 10'd0215, 10'd0217, 10'd0219, 10'd0221, 10'd0223, 10'd0225, 10'd0227, 10'd0229, 10'd0231, 10'd0233, 10'd0235, 10'd0237, 10'd0239, 10'd0241, 10'd0243, 10'd0245, 10'd0247, 10'd0249, 10'd0251, 10'd0253, 10'd0255, 10'd0257, 10'd0259, 10'd0261, 10'd0263, 10'd0265, 10'd0267, 10'd0269, 10'd0271, 10'd0273, 10'd0275, 10'd0277, 10'd0279, 10'd0281, 10'd0283, 10'd0285, 10'd0287, 
10'd0289
                        , 10'd0291, 10'd0293, 10'd0295, 10'd0297, 10'd0299, 10'd0301, 10'd0303, 10'd0305, 10'd0307, 10'd0309, 10'd0311, 10'd0313, 10'd0315, 10'd0317, 10'd0319, 10'd0321, 10'd0323, 10'd0325, 10'd0327, 10'd0329, 10'd0331, 10'd0333, 10'd0335, 10'd0337, 10'd0339, 10'd0341, 10'd0343, 10'd0345, 10'd0347, 10'd0349, 10'd0351, 10'd0353, 10'd0355, 10'd0357, 10'd0359, 10'd0361, 10'd0363, 10'd0365, 10'd0367, 10'd0369, 10'd0371, 10'd0373, 10'd0375, 10'd0377, 10'd0379, 10'd0381, 10'd0383, 
10'd0385
                        , 10'd0387, 10'd0389, 10'd0391, 10'd0393, 10'd0395, 10'd0397, 10'd0399, 10'd0401, 10'd0403, 10'd0405, 10'd0407, 10'd0409, 10'd0411, 10'd0413, 10'd0415, 10'd0417, 10'd0419, 10'd0421, 10'd0423, 10'd0425, 10'd0427, 10'd0429, 10'd0431, 10'd0433, 10'd0435, 10'd0437, 10'd0439, 10'd0441, 10'd0443, 10'd0445, 10'd0447, 10'd0449, 10'd0451, 10'd0453, 10'd0455, 10'd0457, 10'd0459, 10'd0461, 10'd0463, 10'd0465, 10'd0467, 10'd0469, 10'd0471, 10'd0473, 10'd0475, 10'd0477, 10'd0479, 
10'd0481
                        , 10'd0483, 10'd0485, 10'd0487, 10'd0489, 10'd0491, 10'd0493, 10'd0495, 10'd0497, 10'd0499, 10'd0501, 10'd0503, 10'd0505, 10'd0507, 10'd0509, 10'd0511, 10'd0513:                         begin
                           gs_ctrl2 <= 3'd2;
                        end
                        
                        10'd0514:                         begin
                           gs_ctrl2 <= 3'd3;
                        end
                        
                        10'd0515:                         begin
                           gs_ctrl2 <= 3'd4;
                        end
                        
                        10'd0519, 10'd0523, 10'd0524, 10'd0526:                         begin
                           gs_ctrl2 <= 3'd5;
                        end
                        
                        10'd0520:                         begin
                           gs_ctrl2 <= 3'd6;
                        end
                        
                        10'd0525:                         begin
                           gs_ctrl2 <= 3'd7;
                        end
                        
                        default:                         begin
                           gs_ctrl2 <= 3'd0;
                        end
                        
                     endcase

                  end
                  
               endcase

            end
         end

         // resource: mux_3bx6i6c
         // resource: regr_en_sc_3
         always @(posedge i_clk)
          begin :drive_gs_ctrl3
            if (i_rst == 1'b0) begin
               gs_ctrl3 <= 3'd0;
            end
            else begin
               case (stall0) 

                  1'b1:                   begin
                  end
                  
                  1'b0:                   begin
                     case (global_state_next) 

                        10'd0001:                         begin
                           gs_ctrl3 <= 3'd1;
                        end
                        
                        10'd0520:                         begin
                           gs_ctrl3 <= 3'd2;
                        end
                        
                        10'd0521:                         begin
                           gs_ctrl3 <= 3'd3;
                        end
                        
                        10'd0523:                         begin
                           gs_ctrl3 <= 3'd4;
                        end
                        
                        10'd0526:                         begin
                           gs_ctrl3 <= 3'd5;
                        end
                        
                        default:                         begin
                           gs_ctrl3 <= 3'd0;
                        end
                        
                     endcase

                  end
                  
               endcase

            end
         end

         // resource: mux_3bx5i5c
         // resource: regr_en_sc_3
         always @(posedge i_clk)
          begin :drive_gs_ctrl4
            if (i_rst == 1'b0) begin
               gs_ctrl4 <= 3'd0;
            end
            else begin
               case (stall0) 

                  1'b1:                   begin
                  end
                  
                  1'b0:                   begin
                     case (global_state_next) 

                        10'd0516:                         begin
                           gs_ctrl4 <= 3'd1;
                        end
                        
                        10'd0517:                         begin
                           gs_ctrl4 <= 3'd2;
                        end
                        
                        10'd0518:                         begin
                           gs_ctrl4 <= 3'd3;
                        end
                        
                        10'd0520:                         begin
                           gs_ctrl4 <= 3'd4;
                        end
                        
                        default:                         begin
                           gs_ctrl4 <= 3'd0;
                        end
                        
                     endcase

                  end
                  
               endcase

            end
         end

         // resource: mux_9bx260i260c
         // resource: regr_en_sc_9
         always @(posedge i_clk)
          begin :drive_gs_ctrl5
            if (i_rst == 1'b0) begin
               gs_ctrl5 <= 9'd000;
            end
            else begin
               case (stall0) 

                  1'b1:                   begin
                  end
                  
                  1'b0:                   begin
                     case (global_state_next) 

                        10'd0002, 10'd0003:                         begin
                           gs_ctrl5 <= 9'd001;
                        end
                        
                        10'd0004, 10'd0005:                         begin
                           gs_ctrl5 <= 9'd002;
                        end
                        
                        10'd0006, 10'd0007:                         begin
                           gs_ctrl5 <= 9'd003;
                        end
                        
                        10'd0008, 10'd0009:                         begin
                           gs_ctrl5 <= 9'd004;
                        end
                        
                        10'd0010, 10'd0011:                         begin
                           gs_ctrl5 <= 9'd005;
                        end
                        
                        10'd0012, 10'd0013:                         begin
                           gs_ctrl5 <= 9'd006;
                        end
                        
                        10'd0014, 10'd0015:                         begin
                           gs_ctrl5 <= 9'd007;
                        end
                        
                        10'd0016, 10'd0017:                         begin
                           gs_ctrl5 <= 9'd008;
                        end
                        
                        10'd0018, 10'd0019:                         begin
                           gs_ctrl5 <= 9'd009;
                        end
                        
                        10'd0020, 10'd0021:                         begin
                           gs_ctrl5 <= 9'd010;
                        end
                        
                        10'd0022, 10'd0023:                         begin
                           gs_ctrl5 <= 9'd011;
                        end
                        
                        10'd0024, 10'd0025:                         begin
                           gs_ctrl5 <= 9'd012;
                        end
                        
                        10'd0026, 10'd0027:                         begin
                           gs_ctrl5 <= 9'd013;
                        end
                        
                        10'd0028, 10'd0029:                         begin
                           gs_ctrl5 <= 9'd014;
                        end
                        
                        10'd0030, 10'd0031:                         begin
                           gs_ctrl5 <= 9'd015;
                        end
                        
                        10'd0032, 10'd0033:                         begin
                           gs_ctrl5 <= 9'd016;
                        end
                        
                        10'd0034, 10'd0035:                         begin
                           gs_ctrl5 <= 9'd017;
                        end
                        
                        10'd0036, 10'd0037:                         begin
                           gs_ctrl5 <= 9'd018;
                        end
                        
                        10'd0038, 10'd0039:                         begin
                           gs_ctrl5 <= 9'd019;
                        end
                        
                        10'd0040, 10'd0041:                         begin
                           gs_ctrl5 <= 9'd020;
                        end
                        
                        10'd0042, 10'd0043:                         begin
                           gs_ctrl5 <= 9'd021;
                        end
                        
                        10'd0044, 10'd0045:                         begin
                           gs_ctrl5 <= 9'd022;
                        end
                        
                        10'd0046, 10'd0047:                         begin
                           gs_ctrl5 <= 9'd023;
                        end
                        
                        10'd0048, 10'd0049:                         begin
                           gs_ctrl5 <= 9'd024;
                        end
                        
                        10'd0050, 10'd0051:                         begin
                           gs_ctrl5 <= 9'd025;
                        end
                        
                        10'd0052, 10'd0053:                         begin
                           gs_ctrl5 <= 9'd026;
                        end
                        
                        10'd0054, 10'd0055:                         begin
                           gs_ctrl5 <= 9'd027;
                        end
                        
                        10'd0056, 10'd0057:                         begin
                           gs_ctrl5 <= 9'd028;
                        end
                        
                        10'd0058, 10'd0059:                         begin
                           gs_ctrl5 <= 9'd029;
                        end
                        
                        10'd0060, 10'd0061:                         begin
                           gs_ctrl5 <= 9'd030;
                        end
                        
                        10'd0062, 10'd0063:                         begin
                           gs_ctrl5 <= 9'd031;
                        end
                        
                        10'd0064, 10'd0065:                         begin
                           gs_ctrl5 <= 9'd032;
                        end
                        
                        10'd0066, 10'd0067:                         begin
                           gs_ctrl5 <= 9'd033;
                        end
                        
                        10'd0068, 10'd0069:                         begin
                           gs_ctrl5 <= 9'd034;
                        end
                        
                        10'd0070, 10'd0071:                         begin
                           gs_ctrl5 <= 9'd035;
                        end
                        
                        10'd0072, 10'd0073:                         begin
                           gs_ctrl5 <= 9'd036;
                        end
                        
                        10'd0074, 10'd0075:                         begin
                           gs_ctrl5 <= 9'd037;
                        end
                        
                        10'd0076, 10'd0077:                         begin
                           gs_ctrl5 <= 9'd038;
                        end
                        
                        10'd0078, 10'd0079:                         begin
                           gs_ctrl5 <= 9'd039;
                        end
                        
                        10'd0080, 10'd0081:                         begin
                           gs_ctrl5 <= 9'd040;
                        end
                        
                        10'd0082, 10'd0083:                         begin
                           gs_ctrl5 <= 9'd041;
                        end
                        
                        10'd0084, 10'd0085:                         begin
                           gs_ctrl5 <= 9'd042;
                        end
                        
                        10'd0086, 10'd0087:                         begin
                           gs_ctrl5 <= 9'd043;
                        end
                        
                        10'd0088, 10'd0089:                         begin
                           gs_ctrl5 <= 9'd044;
                        end
                        
                        10'd0090, 10'd0091:                         begin
                           gs_ctrl5 <= 9'd045;
                        end
                        
                        10'd0092, 10'd0093:                         begin
                           gs_ctrl5 <= 9'd046;
                        end
                        
                        10'd0094, 10'd0095:                         begin
                           gs_ctrl5 <= 9'd047;
                        end
                        
                        10'd0096, 10'd0097:                         begin
                           gs_ctrl5 <= 9'd048;
                        end
                        
                        10'd0098, 10'd0099:                         begin
                           gs_ctrl5 <= 9'd049;
                        end
                        
                        10'd0100, 10'd0101:                         begin
                           gs_ctrl5 <= 9'd050;
                        end
                        
                        10'd0102, 10'd0103:                         begin
                           gs_ctrl5 <= 9'd051;
                        end
                        
                        10'd0104, 10'd0105:                         begin
                           gs_ctrl5 <= 9'd052;
                        end
                        
                        10'd0106, 10'd0107:                         begin
                           gs_ctrl5 <= 9'd053;
                        end
                        
                        10'd0108, 10'd0109:                         begin
                           gs_ctrl5 <= 9'd054;
                        end
                        
                        10'd0110, 10'd0111:                         begin
                           gs_ctrl5 <= 9'd055;
                        end
                        
                        10'd0112, 10'd0113:                         begin
                           gs_ctrl5 <= 9'd056;
                        end
                        
                        10'd0114, 10'd0115:                         begin
                           gs_ctrl5 <= 9'd057;
                        end
                        
                        10'd0116, 10'd0117:                         begin
                           gs_ctrl5 <= 9'd058;
                        end
                        
                        10'd0118, 10'd0119:                         begin
                           gs_ctrl5 <= 9'd059;
                        end
                        
                        10'd0120, 10'd0121:                         begin
                           gs_ctrl5 <= 9'd060;
                        end
                        
                        10'd0122, 10'd0123:                         begin
                           gs_ctrl5 <= 9'd061;
                        end
                        
                        10'd0124, 10'd0125:                         begin
                           gs_ctrl5 <= 9'd062;
                        end
                        
                        10'd0126, 10'd0127:                         begin
                           gs_ctrl5 <= 9'd063;
                        end
                        
                        10'd0128, 10'd0129:                         begin
                           gs_ctrl5 <= 9'd064;
                        end
                        
                        10'd0130, 10'd0131:                         begin
                           gs_ctrl5 <= 9'd065;
                        end
                        
                        10'd0132, 10'd0133:                         begin
                           gs_ctrl5 <= 9'd066;
                        end
                        
                        10'd0134, 10'd0135:                         begin
                           gs_ctrl5 <= 9'd067;
                        end
                        
                        10'd0136, 10'd0137:                         begin
                           gs_ctrl5 <= 9'd068;
                        end
                        
                        10'd0138, 10'd0139:                         begin
                           gs_ctrl5 <= 9'd069;
                        end
                        
                        10'd0140, 10'd0141:                         begin
                           gs_ctrl5 <= 9'd070;
                        end
                        
                        10'd0142, 10'd0143:                         begin
                           gs_ctrl5 <= 9'd071;
                        end
                        
                        10'd0144, 10'd0145:                         begin
                           gs_ctrl5 <= 9'd072;
                        end
                        
                        10'd0146, 10'd0147:                         begin
                           gs_ctrl5 <= 9'd073;
                        end
                        
                        10'd0148, 10'd0149:                         begin
                           gs_ctrl5 <= 9'd074;
                        end
                        
                        10'd0150, 10'd0151:                         begin
                           gs_ctrl5 <= 9'd075;
                        end
                        
                        10'd0152, 10'd0153:                         begin
                           gs_ctrl5 <= 9'd076;
                        end
                        
                        10'd0154, 10'd0155:                         begin
                           gs_ctrl5 <= 9'd077;
                        end
                        
                        10'd0156, 10'd0157:                         begin
                           gs_ctrl5 <= 9'd078;
                        end
                        
                        10'd0158, 10'd0159:                         begin
                           gs_ctrl5 <= 9'd079;
                        end
                        
                        10'd0160, 10'd0161:                         begin
                           gs_ctrl5 <= 9'd080;
                        end
                        
                        10'd0162, 10'd0163:                         begin
                           gs_ctrl5 <= 9'd081;
                        end
                        
                        10'd0164, 10'd0165:                         begin
                           gs_ctrl5 <= 9'd082;
                        end
                        
                        10'd0166, 10'd0167:                         begin
                           gs_ctrl5 <= 9'd083;
                        end
                        
                        10'd0168, 10'd0169:                         begin
                           gs_ctrl5 <= 9'd084;
                        end
                        
                        10'd0170, 10'd0171:                         begin
                           gs_ctrl5 <= 9'd085;
                        end
                        
                        10'd0172, 10'd0173:                         begin
                           gs_ctrl5 <= 9'd086;
                        end
                        
                        10'd0174, 10'd0175:                         begin
                           gs_ctrl5 <= 9'd087;
                        end
                        
                        10'd0176, 10'd0177:                         begin
                           gs_ctrl5 <= 9'd088;
                        end
                        
                        10'd0178, 10'd0179:                         begin
                           gs_ctrl5 <= 9'd089;
                        end
                        
                        10'd0180, 10'd0181:                         begin
                           gs_ctrl5 <= 9'd090;
                        end
                        
                        10'd0182, 10'd0183:                         begin
                           gs_ctrl5 <= 9'd091;
                        end
                        
                        10'd0184, 10'd0185:                         begin
                           gs_ctrl5 <= 9'd092;
                        end
                        
                        10'd0186, 10'd0187:                         begin
                           gs_ctrl5 <= 9'd093;
                        end
                        
                        10'd0188, 10'd0189:                         begin
                           gs_ctrl5 <= 9'd094;
                        end
                        
                        10'd0190, 10'd0191:                         begin
                           gs_ctrl5 <= 9'd095;
                        end
                        
                        10'd0192, 10'd0193:                         begin
                           gs_ctrl5 <= 9'd096;
                        end
                        
                        10'd0194, 10'd0195:                         begin
                           gs_ctrl5 <= 9'd097;
                        end
                        
                        10'd0196, 10'd0197:                         begin
                           gs_ctrl5 <= 9'd098;
                        end
                        
                        10'd0198, 10'd0199:                         begin
                           gs_ctrl5 <= 9'd099;
                        end
                        
                        10'd0200, 10'd0201:                         begin
                           gs_ctrl5 <= 9'd100;
                        end
                        
                        10'd0202, 10'd0203:                         begin
                           gs_ctrl5 <= 9'd101;
                        end
                        
                        10'd0204, 10'd0205:                         begin
                           gs_ctrl5 <= 9'd102;
                        end
                        
                        10'd0206, 10'd0207:                         begin
                           gs_ctrl5 <= 9'd103;
                        end
                        
                        10'd0208, 10'd0209:                         begin
                           gs_ctrl5 <= 9'd104;
                        end
                        
                        10'd0210, 10'd0211:                         begin
                           gs_ctrl5 <= 9'd105;
                        end
                        
                        10'd0212, 10'd0213:                         begin
                           gs_ctrl5 <= 9'd106;
                        end
                        
                        10'd0214, 10'd0215:                         begin
                           gs_ctrl5 <= 9'd107;
                        end
                        
                        10'd0216, 10'd0217:                         begin
                           gs_ctrl5 <= 9'd108;
                        end
                        
                        10'd0218, 10'd0219:                         begin
                           gs_ctrl5 <= 9'd109;
                        end
                        
                        10'd0220, 10'd0221:                         begin
                           gs_ctrl5 <= 9'd110;
                        end
                        
                        10'd0222, 10'd0223:                         begin
                           gs_ctrl5 <= 9'd111;
                        end
                        
                        10'd0224, 10'd0225:                         begin
                           gs_ctrl5 <= 9'd112;
                        end
                        
                        10'd0226, 10'd0227:                         begin
                           gs_ctrl5 <= 9'd113;
                        end
                        
                        10'd0228, 10'd0229:                         begin
                           gs_ctrl5 <= 9'd114;
                        end
                        
                        10'd0230, 10'd0231:                         begin
                           gs_ctrl5 <= 9'd115;
                        end
                        
                        10'd0232, 10'd0233:                         begin
                           gs_ctrl5 <= 9'd116;
                        end
                        
                        10'd0234, 10'd0235:                         begin
                           gs_ctrl5 <= 9'd117;
                        end
                        
                        10'd0236, 10'd0237:                         begin
                           gs_ctrl5 <= 9'd118;
                        end
                        
                        10'd0238, 10'd0239:                         begin
                           gs_ctrl5 <= 9'd119;
                        end
                        
                        10'd0240, 10'd0241:                         begin
                           gs_ctrl5 <= 9'd120;
                        end
                        
                        10'd0242, 10'd0243:                         begin
                           gs_ctrl5 <= 9'd121;
                        end
                        
                        10'd0244, 10'd0245:                         begin
                           gs_ctrl5 <= 9'd122;
                        end
                        
                        10'd0246, 10'd0247:                         begin
                           gs_ctrl5 <= 9'd123;
                        end
                        
                        10'd0248, 10'd0249:                         begin
                           gs_ctrl5 <= 9'd124;
                        end
                        
                        10'd0250, 10'd0251:                         begin
                           gs_ctrl5 <= 9'd125;
                        end
                        
                        10'd0252, 10'd0253:                         begin
                           gs_ctrl5 <= 9'd126;
                        end
                        
                        10'd0254, 10'd0255:                         begin
                           gs_ctrl5 <= 9'd127;
                        end
                        
                        10'd0256, 10'd0257:                         begin
                           gs_ctrl5 <= 9'd128;
                        end
                        
                        10'd0258, 10'd0259:                         begin
                           gs_ctrl5 <= 9'd129;
                        end
                        
                        10'd0260, 10'd0261:                         begin
                           gs_ctrl5 <= 9'd130;
                        end
                        
                        10'd0262, 10'd0263:                         begin
                           gs_ctrl5 <= 9'd131;
                        end
                        
                        10'd0264, 10'd0265:                         begin
                           gs_ctrl5 <= 9'd132;
                        end
                        
                        10'd0266, 10'd0267:                         begin
                           gs_ctrl5 <= 9'd133;
                        end
                        
                        10'd0268, 10'd0269:                         begin
                           gs_ctrl5 <= 9'd134;
                        end
                        
                        10'd0270, 10'd0271:                         begin
                           gs_ctrl5 <= 9'd135;
                        end
                        
                        10'd0272, 10'd0273:                         begin
                           gs_ctrl5 <= 9'd136;
                        end
                        
                        10'd0274, 10'd0275:                         begin
                           gs_ctrl5 <= 9'd137;
                        end
                        
                        10'd0276, 10'd0277:                         begin
                           gs_ctrl5 <= 9'd138;
                        end
                        
                        10'd0278, 10'd0279:                         begin
                           gs_ctrl5 <= 9'd139;
                        end
                        
                        10'd0280, 10'd0281:                         begin
                           gs_ctrl5 <= 9'd140;
                        end
                        
                        10'd0282, 10'd0283:                         begin
                           gs_ctrl5 <= 9'd141;
                        end
                        
                        10'd0284, 10'd0285:                         begin
                           gs_ctrl5 <= 9'd142;
                        end
                        
                        10'd0286, 10'd0287:                         begin
                           gs_ctrl5 <= 9'd143;
                        end
                        
                        10'd0288, 10'd0289:                         begin
                           gs_ctrl5 <= 9'd144;
                        end
                        
                        10'd0290, 10'd0291:                         begin
                           gs_ctrl5 <= 9'd145;
                        end
                        
                        10'd0292, 10'd0293:                         begin
                           gs_ctrl5 <= 9'd146;
                        end
                        
                        10'd0294, 10'd0295:                         begin
                           gs_ctrl5 <= 9'd147;
                        end
                        
                        10'd0296, 10'd0297:                         begin
                           gs_ctrl5 <= 9'd148;
                        end
                        
                        10'd0298, 10'd0299:                         begin
                           gs_ctrl5 <= 9'd149;
                        end
                        
                        10'd0300, 10'd0301:                         begin
                           gs_ctrl5 <= 9'd150;
                        end
                        
                        10'd0302, 10'd0303:                         begin
                           gs_ctrl5 <= 9'd151;
                        end
                        
                        10'd0304, 10'd0305:                         begin
                           gs_ctrl5 <= 9'd152;
                        end
                        
                        10'd0306, 10'd0307:                         begin
                           gs_ctrl5 <= 9'd153;
                        end
                        
                        10'd0308, 10'd0309:                         begin
                           gs_ctrl5 <= 9'd154;
                        end
                        
                        10'd0310, 10'd0311:                         begin
                           gs_ctrl5 <= 9'd155;
                        end
                        
                        10'd0312, 10'd0313:                         begin
                           gs_ctrl5 <= 9'd156;
                        end
                        
                        10'd0314, 10'd0315:                         begin
                           gs_ctrl5 <= 9'd157;
                        end
                        
                        10'd0316, 10'd0317:                         begin
                           gs_ctrl5 <= 9'd158;
                        end
                        
                        10'd0318, 10'd0319:                         begin
                           gs_ctrl5 <= 9'd159;
                        end
                        
                        10'd0320, 10'd0321:                         begin
                           gs_ctrl5 <= 9'd160;
                        end
                        
                        10'd0322, 10'd0323:                         begin
                           gs_ctrl5 <= 9'd161;
                        end
                        
                        10'd0324, 10'd0325:                         begin
                           gs_ctrl5 <= 9'd162;
                        end
                        
                        10'd0326, 10'd0327:                         begin
                           gs_ctrl5 <= 9'd163;
                        end
                        
                        10'd0328, 10'd0329:                         begin
                           gs_ctrl5 <= 9'd164;
                        end
                        
                        10'd0330, 10'd0331:                         begin
                           gs_ctrl5 <= 9'd165;
                        end
                        
                        10'd0332, 10'd0333:                         begin
                           gs_ctrl5 <= 9'd166;
                        end
                        
                        10'd0334, 10'd0335:                         begin
                           gs_ctrl5 <= 9'd167;
                        end
                        
                        10'd0336, 10'd0337:                         begin
                           gs_ctrl5 <= 9'd168;
                        end
                        
                        10'd0338, 10'd0339:                         begin
                           gs_ctrl5 <= 9'd169;
                        end
                        
                        10'd0340, 10'd0341:                         begin
                           gs_ctrl5 <= 9'd170;
                        end
                        
                        10'd0342, 10'd0343:                         begin
                           gs_ctrl5 <= 9'd171;
                        end
                        
                        10'd0344, 10'd0345:                         begin
                           gs_ctrl5 <= 9'd172;
                        end
                        
                        10'd0346, 10'd0347:                         begin
                           gs_ctrl5 <= 9'd173;
                        end
                        
                        10'd0348, 10'd0349:                         begin
                           gs_ctrl5 <= 9'd174;
                        end
                        
                        10'd0350, 10'd0351:                         begin
                           gs_ctrl5 <= 9'd175;
                        end
                        
                        10'd0352, 10'd0353:                         begin
                           gs_ctrl5 <= 9'd176;
                        end
                        
                        10'd0354, 10'd0355:                         begin
                           gs_ctrl5 <= 9'd177;
                        end
                        
                        10'd0356, 10'd0357:                         begin
                           gs_ctrl5 <= 9'd178;
                        end
                        
                        10'd0358, 10'd0359:                         begin
                           gs_ctrl5 <= 9'd179;
                        end
                        
                        10'd0360, 10'd0361:                         begin
                           gs_ctrl5 <= 9'd180;
                        end
                        
                        10'd0362, 10'd0363:                         begin
                           gs_ctrl5 <= 9'd181;
                        end
                        
                        10'd0364, 10'd0365:                         begin
                           gs_ctrl5 <= 9'd182;
                        end
                        
                        10'd0366, 10'd0367:                         begin
                           gs_ctrl5 <= 9'd183;
                        end
                        
                        10'd0368, 10'd0369:                         begin
                           gs_ctrl5 <= 9'd184;
                        end
                        
                        10'd0370, 10'd0371:                         begin
                           gs_ctrl5 <= 9'd185;
                        end
                        
                        10'd0372, 10'd0373:                         begin
                           gs_ctrl5 <= 9'd186;
                        end
                        
                        10'd0374, 10'd0375:                         begin
                           gs_ctrl5 <= 9'd187;
                        end
                        
                        10'd0376, 10'd0377:                         begin
                           gs_ctrl5 <= 9'd188;
                        end
                        
                        10'd0378, 10'd0379:                         begin
                           gs_ctrl5 <= 9'd189;
                        end
                        
                        10'd0380, 10'd0381:                         begin
                           gs_ctrl5 <= 9'd190;
                        end
                        
                        10'd0382, 10'd0383:                         begin
                           gs_ctrl5 <= 9'd191;
                        end
                        
                        10'd0384, 10'd0385:                         begin
                           gs_ctrl5 <= 9'd192;
                        end
                        
                        10'd0386, 10'd0387:                         begin
                           gs_ctrl5 <= 9'd193;
                        end
                        
                        10'd0388, 10'd0389:                         begin
                           gs_ctrl5 <= 9'd194;
                        end
                        
                        10'd0390, 10'd0391:                         begin
                           gs_ctrl5 <= 9'd195;
                        end
                        
                        10'd0392, 10'd0393:                         begin
                           gs_ctrl5 <= 9'd196;
                        end
                        
                        10'd0394, 10'd0395:                         begin
                           gs_ctrl5 <= 9'd197;
                        end
                        
                        10'd0396, 10'd0397:                         begin
                           gs_ctrl5 <= 9'd198;
                        end
                        
                        10'd0398, 10'd0399:                         begin
                           gs_ctrl5 <= 9'd199;
                        end
                        
                        10'd0400, 10'd0401:                         begin
                           gs_ctrl5 <= 9'd200;
                        end
                        
                        10'd0402, 10'd0403:                         begin
                           gs_ctrl5 <= 9'd201;
                        end
                        
                        10'd0404, 10'd0405:                         begin
                           gs_ctrl5 <= 9'd202;
                        end
                        
                        10'd0406, 10'd0407:                         begin
                           gs_ctrl5 <= 9'd203;
                        end
                        
                        10'd0408, 10'd0409:                         begin
                           gs_ctrl5 <= 9'd204;
                        end
                        
                        10'd0410, 10'd0411:                         begin
                           gs_ctrl5 <= 9'd205;
                        end
                        
                        10'd0412, 10'd0413:                         begin
                           gs_ctrl5 <= 9'd206;
                        end
                        
                        10'd0414, 10'd0415:                         begin
                           gs_ctrl5 <= 9'd207;
                        end
                        
                        10'd0416, 10'd0417:                         begin
                           gs_ctrl5 <= 9'd208;
                        end
                        
                        10'd0418, 10'd0419:                         begin
                           gs_ctrl5 <= 9'd209;
                        end
                        
                        10'd0420, 10'd0421:                         begin
                           gs_ctrl5 <= 9'd210;
                        end
                        
                        10'd0422, 10'd0423:                         begin
                           gs_ctrl5 <= 9'd211;
                        end
                        
                        10'd0424, 10'd0425:                         begin
                           gs_ctrl5 <= 9'd212;
                        end
                        
                        10'd0426, 10'd0427:                         begin
                           gs_ctrl5 <= 9'd213;
                        end
                        
                        10'd0428, 10'd0429:                         begin
                           gs_ctrl5 <= 9'd214;
                        end
                        
                        10'd0430, 10'd0431:                         begin
                           gs_ctrl5 <= 9'd215;
                        end
                        
                        10'd0432, 10'd0433:                         begin
                           gs_ctrl5 <= 9'd216;
                        end
                        
                        10'd0434, 10'd0435:                         begin
                           gs_ctrl5 <= 9'd217;
                        end
                        
                        10'd0436, 10'd0437:                         begin
                           gs_ctrl5 <= 9'd218;
                        end
                        
                        10'd0438, 10'd0439:                         begin
                           gs_ctrl5 <= 9'd219;
                        end
                        
                        10'd0440, 10'd0441:                         begin
                           gs_ctrl5 <= 9'd220;
                        end
                        
                        10'd0442, 10'd0443:                         begin
                           gs_ctrl5 <= 9'd221;
                        end
                        
                        10'd0444, 10'd0445:                         begin
                           gs_ctrl5 <= 9'd222;
                        end
                        
                        10'd0446, 10'd0447:                         begin
                           gs_ctrl5 <= 9'd223;
                        end
                        
                        10'd0448, 10'd0449:                         begin
                           gs_ctrl5 <= 9'd224;
                        end
                        
                        10'd0450, 10'd0451:                         begin
                           gs_ctrl5 <= 9'd225;
                        end
                        
                        10'd0452, 10'd0453:                         begin
                           gs_ctrl5 <= 9'd226;
                        end
                        
                        10'd0454, 10'd0455:                         begin
                           gs_ctrl5 <= 9'd227;
                        end
                        
                        10'd0456, 10'd0457:                         begin
                           gs_ctrl5 <= 9'd228;
                        end
                        
                        10'd0458, 10'd0459:                         begin
                           gs_ctrl5 <= 9'd229;
                        end
                        
                        10'd0460, 10'd0461:                         begin
                           gs_ctrl5 <= 9'd230;
                        end
                        
                        10'd0462, 10'd0463:                         begin
                           gs_ctrl5 <= 9'd231;
                        end
                        
                        10'd0464, 10'd0465:                         begin
                           gs_ctrl5 <= 9'd232;
                        end
                        
                        10'd0466, 10'd0467:                         begin
                           gs_ctrl5 <= 9'd233;
                        end
                        
                        10'd0468, 10'd0469:                         begin
                           gs_ctrl5 <= 9'd234;
                        end
                        
                        10'd0470, 10'd0471:                         begin
                           gs_ctrl5 <= 9'd235;
                        end
                        
                        10'd0472, 10'd0473:                         begin
                           gs_ctrl5 <= 9'd236;
                        end
                        
                        10'd0474, 10'd0475:                         begin
                           gs_ctrl5 <= 9'd237;
                        end
                        
                        10'd0476, 10'd0477:                         begin
                           gs_ctrl5 <= 9'd238;
                        end
                        
                        10'd0478, 10'd0479:                         begin
                           gs_ctrl5 <= 9'd239;
                        end
                        
                        10'd0480, 10'd0481:                         begin
                           gs_ctrl5 <= 9'd240;
                        end
                        
                        10'd0482, 10'd0483:                         begin
                           gs_ctrl5 <= 9'd241;
                        end
                        
                        10'd0484, 10'd0485:                         begin
                           gs_ctrl5 <= 9'd242;
                        end
                        
                        10'd0486, 10'd0487:                         begin
                           gs_ctrl5 <= 9'd243;
                        end
                        
                        10'd0488, 10'd0489:                         begin
                           gs_ctrl5 <= 9'd244;
                        end
                        
                        10'd0490, 10'd0491:                         begin
                           gs_ctrl5 <= 9'd245;
                        end
                        
                        10'd0492, 10'd0493:                         begin
                           gs_ctrl5 <= 9'd246;
                        end
                        
                        10'd0494, 10'd0495:                         begin
                           gs_ctrl5 <= 9'd247;
                        end
                        
                        10'd0496, 10'd0497:                         begin
                           gs_ctrl5 <= 9'd248;
                        end
                        
                        10'd0498, 10'd0499:                         begin
                           gs_ctrl5 <= 9'd249;
                        end
                        
                        10'd0500, 10'd0501:                         begin
                           gs_ctrl5 <= 9'd250;
                        end
                        
                        10'd0502, 10'd0503:                         begin
                           gs_ctrl5 <= 9'd251;
                        end
                        
                        10'd0504, 10'd0505:                         begin
                           gs_ctrl5 <= 9'd252;
                        end
                        
                        10'd0506, 10'd0507:                         begin
                           gs_ctrl5 <= 9'd253;
                        end
                        
                        10'd0508, 10'd0509:                         begin
                           gs_ctrl5 <= 9'd254;
                        end
                        
                        10'd0510, 10'd0511:                         begin
                           gs_ctrl5 <= 9'd255;
                        end
                        
                        10'd0512, 10'd0513:                         begin
                           gs_ctrl5 <= 9'd256;
                        end
                        
                        10'd0514:                         begin
                           gs_ctrl5 <= 9'd257;
                        end
                        
                        10'd0515:                         begin
                           gs_ctrl5 <= 9'd258;
                        end
                        
                        10'd0519, 10'd0523, 10'd0524, 10'd0525, 10'd0526:                         begin
                           gs_ctrl5 <= 9'd259;
                        end
                        
                        default:                         begin
                           gs_ctrl5 <= 9'd000;
                        end
                        
                     endcase

                  end
                  
               endcase

            end
         end

         // resource: mux_2bx3i3c
         // resource: regr_en_sc_2
         always @(posedge i_clk)
          begin :drive_gs_ctrl6
            if (i_rst == 1'b0) begin
               gs_ctrl6 <= 2'd0;
            end
            else begin
               case (stall0) 

                  1'b1:                   begin
                  end
                  
                  1'b0:                   begin
                     case (global_state_next) 

                        10'd0514, 10'd0519:                         begin
                           gs_ctrl6 <= 2'd1;
                        end
                        
                        10'd0526:                         begin
                           gs_ctrl6 <= 2'd2;
                        end
                        
                        default:                         begin
                           gs_ctrl6 <= 2'd0;
                        end
                        
                     endcase

                  end
                  
               endcase

            end
         end

         // resource: mux_2bx4i4c
         // resource: regr_en_sc_2
         always @(posedge i_clk)
          begin :drive_gs_ctrl7
            if (i_rst == 1'b0) begin
               gs_ctrl7 <= 2'd0;
            end
            else begin
               case (stall0) 

                  1'b1:                   begin
                  end
                  
                  1'b0:                   begin
                     case (global_state_next) 

                        10'd0516:                         begin
                           gs_ctrl7 <= 2'd1;
                        end
                        
                        10'd0521:                         begin
                           gs_ctrl7 <= 2'd2;
                        end
                        
                        10'd0522:                         begin
                           gs_ctrl7 <= 2'd3;
                        end
                        
                        default:                         begin
                           gs_ctrl7 <= 2'd0;
                        end
                        
                     endcase

                  end
                  
               endcase

            end
         end

         // resource: mux_3bx5i5c
         // resource: regr_en_sc_3
         always @(posedge i_clk)
          begin :drive_gs_ctrl8
            if (i_rst == 1'b0) begin
               gs_ctrl8 <= 3'd0;
            end
            else begin
               case (stall0) 

                  1'b1:                   begin
                  end
                  
                  1'b0:                   begin
                     case (global_state_next) 

                        10'd0003, 10'd0005, 10'd0007, 10'd0009, 10'd0011, 10'd0013, 10'd0015, 10'd0017, 10'd0019, 10'd0021, 10'd0023, 10'd0025, 10'd0027, 10'd0029, 10'd0031, 10'd0033, 10'd0035, 10'd0037, 10'd0039, 10'd0041, 10'd0043, 10'd0045, 10'd0047, 10'd0049, 10'd0051, 10'd0053, 10'd0055, 10'd0057, 10'd0059, 10'd0061, 10'd0063, 10'd0065, 10'd0067, 10'd0069, 10'd0071, 10'd0073, 10'd0075, 10'd0077, 10'd0079, 10'd0081, 10'd0083, 10'd0085, 10'd0087, 10'd0089, 10'd0091, 10'd0093, 10'd0095, 
10'd0097
                        , 10'd0099, 10'd0101, 10'd0103, 10'd0105, 10'd0107, 10'd0109, 10'd0111, 10'd0113, 10'd0115, 10'd0117, 10'd0119, 10'd0121, 10'd0123, 10'd0125, 10'd0127, 10'd0129, 10'd0131, 10'd0133, 10'd0135, 10'd0137, 10'd0139, 10'd0141, 10'd0143, 10'd0145, 10'd0147, 10'd0149, 10'd0151, 10'd0153, 10'd0155, 10'd0157, 10'd0159, 10'd0161, 10'd0163, 10'd0165, 10'd0167, 10'd0169, 10'd0171, 10'd0173, 10'd0175, 10'd0177, 10'd0179, 10'd0181, 10'd0183, 10'd0185, 10'd0187, 10'd0189, 10'd0191, 
10'd0193
                        , 10'd0195, 10'd0197, 10'd0199, 10'd0201, 10'd0203, 10'd0205, 10'd0207, 10'd0209, 10'd0211, 10'd0213, 10'd0215, 10'd0217, 10'd0219, 10'd0221, 10'd0223, 10'd0225, 10'd0227, 10'd0229, 10'd0231, 10'd0233, 10'd0235, 10'd0237, 10'd0239, 10'd0241, 10'd0243, 10'd0245, 10'd0247, 10'd0249, 10'd0251, 10'd0253, 10'd0255, 10'd0257, 10'd0259, 10'd0261, 10'd0263, 10'd0265, 10'd0267, 10'd0269, 10'd0271, 10'd0273, 10'd0275, 10'd0277, 10'd0279, 10'd0281, 10'd0283, 10'd0285, 10'd0287, 
10'd0289
                        , 10'd0291, 10'd0293, 10'd0295, 10'd0297, 10'd0299, 10'd0301, 10'd0303, 10'd0305, 10'd0307, 10'd0309, 10'd0311, 10'd0313, 10'd0315, 10'd0317, 10'd0319, 10'd0321, 10'd0323, 10'd0325, 10'd0327, 10'd0329, 10'd0331, 10'd0333, 10'd0335, 10'd0337, 10'd0339, 10'd0341, 10'd0343, 10'd0345, 10'd0347, 10'd0349, 10'd0351, 10'd0353, 10'd0355, 10'd0357, 10'd0359, 10'd0361, 10'd0363, 10'd0365, 10'd0367, 10'd0369, 10'd0371, 10'd0373, 10'd0375, 10'd0377, 10'd0379, 10'd0381, 10'd0383, 
10'd0385
                        , 10'd0387, 10'd0389, 10'd0391, 10'd0393, 10'd0395, 10'd0397, 10'd0399, 10'd0401, 10'd0403, 10'd0405, 10'd0407, 10'd0409, 10'd0411, 10'd0413, 10'd0415, 10'd0417, 10'd0419, 10'd0421, 10'd0423, 10'd0425, 10'd0427, 10'd0429, 10'd0431, 10'd0433, 10'd0435, 10'd0437, 10'd0439, 10'd0441, 10'd0443, 10'd0445, 10'd0447, 10'd0449, 10'd0451, 10'd0453, 10'd0455, 10'd0457, 10'd0459, 10'd0461, 10'd0463, 10'd0465, 10'd0467, 10'd0469, 10'd0471, 10'd0473, 10'd0475, 10'd0477, 10'd0479, 
10'd0481
                        , 10'd0483, 10'd0485, 10'd0487, 10'd0489, 10'd0491, 10'd0493, 10'd0495, 10'd0497, 10'd0499, 10'd0501, 10'd0503, 10'd0505, 10'd0507, 10'd0509, 10'd0511, 10'd0513:                         begin
                           gs_ctrl8 <= 3'd1;
                        end
                        
                        10'd0516, 10'd0520:                         begin
                           gs_ctrl8 <= 3'd2;
                        end
                        
                        10'd0517, 10'd0521:                         begin
                           gs_ctrl8 <= 3'd3;
                        end
                        
                        10'd0518, 10'd0522:                         begin
                           gs_ctrl8 <= 3'd4;
                        end
                        
                        default:                         begin
                           gs_ctrl8 <= 3'd0;
                        end
                        
                     endcase

                  end
                  
               endcase

            end
         end

         // resource: mux_4bx9i9c
         // resource: regr_en_ss_sc_4
         always @(posedge i_clk)
          begin :drive_gs_ctrl9
            if (i_rst == 1'b0) begin
               gs_ctrl9 <= 4'd01;
            end
            else begin
               case (stall0) 

                  1'b1:                   begin
                  end
                  
                  1'b0:                   begin
                     case (global_state_next) 

                        10'd0000, 10'd0002, 10'd0003, 10'd0004, 10'd0005, 10'd0006, 10'd0007, 10'd0008, 10'd0009, 10'd0010, 10'd0011, 10'd0012, 10'd0013, 10'd0014, 10'd0015, 10'd0016, 10'd0017, 10'd0018, 10'd0019, 10'd0020, 10'd0021, 10'd0022, 10'd0023, 10'd0024, 10'd0025, 10'd0026, 10'd0027, 10'd0028, 10'd0029, 10'd0030, 10'd0031, 10'd0032, 10'd0033, 10'd0034, 10'd0035, 10'd0036, 10'd0037, 10'd0038, 10'd0039, 10'd0040, 10'd0041, 10'd0042, 10'd0043, 10'd0044, 10'd0045, 10'd0046, 10'd0047, 
10'd0048
                        , 10'd0049, 10'd0050, 10'd0051, 10'd0052, 10'd0053, 10'd0054, 10'd0055, 10'd0056, 10'd0057, 10'd0058, 10'd0059, 10'd0060, 10'd0061, 10'd0062, 10'd0063, 10'd0064, 10'd0065, 10'd0066, 10'd0067, 10'd0068, 10'd0069, 10'd0070, 10'd0071, 10'd0072, 10'd0073, 10'd0074, 10'd0075, 10'd0076, 10'd0077, 10'd0078, 10'd0079, 10'd0080, 10'd0081, 10'd0082, 10'd0083, 10'd0084, 10'd0085, 10'd0086, 10'd0087, 10'd0088, 10'd0089, 10'd0090, 10'd0091, 10'd0092, 10'd0093, 10'd0094, 10'd0095, 
10'd0096
                        , 10'd0097, 10'd0098, 10'd0099, 10'd0100, 10'd0101, 10'd0102, 10'd0103, 10'd0104, 10'd0105, 10'd0106, 10'd0107, 10'd0108, 10'd0109, 10'd0110, 10'd0111, 10'd0112, 10'd0113, 10'd0114, 10'd0115, 10'd0116, 10'd0117, 10'd0118, 10'd0119, 10'd0120, 10'd0121, 10'd0122, 10'd0123, 10'd0124, 10'd0125, 10'd0126, 10'd0127, 10'd0128, 10'd0129, 10'd0130, 10'd0131, 10'd0132, 10'd0133, 10'd0134, 10'd0135, 10'd0136, 10'd0137, 10'd0138, 10'd0139, 10'd0140, 10'd0141, 10'd0142, 10'd0143, 
10'd0144
                        , 10'd0145, 10'd0146, 10'd0147, 10'd0148, 10'd0149, 10'd0150, 10'd0151, 10'd0152, 10'd0153, 10'd0154, 10'd0155, 10'd0156, 10'd0157, 10'd0158, 10'd0159, 10'd0160, 10'd0161, 10'd0162, 10'd0163, 10'd0164, 10'd0165, 10'd0166, 10'd0167, 10'd0168, 10'd0169, 10'd0170, 10'd0171, 10'd0172, 10'd0173, 10'd0174, 10'd0175, 10'd0176, 10'd0177, 10'd0178, 10'd0179, 10'd0180, 10'd0181, 10'd0182, 10'd0183, 10'd0184, 10'd0185, 10'd0186, 10'd0187, 10'd0188, 10'd0189, 10'd0190, 10'd0191, 
10'd0192
                        , 10'd0193, 10'd0194, 10'd0195, 10'd0196, 10'd0197, 10'd0198, 10'd0199, 10'd0200, 10'd0201, 10'd0202, 10'd0203, 10'd0204, 10'd0205, 10'd0206, 10'd0207, 10'd0208, 10'd0209, 10'd0210, 10'd0211, 10'd0212, 10'd0213, 10'd0214, 10'd0215, 10'd0216, 10'd0217, 10'd0218, 10'd0219, 10'd0220, 10'd0221, 10'd0222, 10'd0223, 10'd0224, 10'd0225, 10'd0226, 10'd0227, 10'd0228, 10'd0229, 10'd0230, 10'd0231, 10'd0232, 10'd0233, 10'd0234, 10'd0235, 10'd0236, 10'd0237, 10'd0238, 10'd0239, 
10'd0240
                        , 10'd0241, 10'd0242, 10'd0243, 10'd0244, 10'd0245, 10'd0246, 10'd0247, 10'd0248, 10'd0249, 10'd0250, 10'd0251, 10'd0252, 10'd0253, 10'd0254, 10'd0255, 10'd0256, 10'd0257, 10'd0258, 10'd0259, 10'd0260, 10'd0261, 10'd0262, 10'd0263, 10'd0264, 10'd0265, 10'd0266, 10'd0267, 10'd0268, 10'd0269, 10'd0270, 10'd0271, 10'd0272, 10'd0273, 10'd0274, 10'd0275, 10'd0276, 10'd0277, 10'd0278, 10'd0279, 10'd0280, 10'd0281, 10'd0282, 10'd0283, 10'd0284, 10'd0285, 10'd0286, 10'd0287, 
10'd0288
                        , 10'd0289, 10'd0290, 10'd0291, 10'd0292, 10'd0293, 10'd0294, 10'd0295, 10'd0296, 10'd0297, 10'd0298, 10'd0299, 10'd0300, 10'd0301, 10'd0302, 10'd0303, 10'd0304, 10'd0305, 10'd0306, 10'd0307, 10'd0308, 10'd0309, 10'd0310, 10'd0311, 10'd0312, 10'd0313, 10'd0314, 10'd0315, 10'd0316, 10'd0317, 10'd0318, 10'd0319, 10'd0320, 10'd0321, 10'd0322, 10'd0323, 10'd0324, 10'd0325, 10'd0326, 10'd0327, 10'd0328, 10'd0329, 10'd0330, 10'd0331, 10'd0332, 10'd0333, 10'd0334, 10'd0335, 
10'd0336
                        , 10'd0337, 10'd0338, 10'd0339, 10'd0340, 10'd0341, 10'd0342, 10'd0343, 10'd0344, 10'd0345, 10'd0346, 10'd0347, 10'd0348, 10'd0349, 10'd0350, 10'd0351, 10'd0352, 10'd0353, 10'd0354, 10'd0355, 10'd0356, 10'd0357, 10'd0358, 10'd0359, 10'd0360, 10'd0361, 10'd0362, 10'd0363, 10'd0364, 10'd0365, 10'd0366, 10'd0367, 10'd0368, 10'd0369, 10'd0370, 10'd0371, 10'd0372, 10'd0373, 10'd0374, 10'd0375, 10'd0376, 10'd0377, 10'd0378, 10'd0379, 10'd0380, 10'd0381, 10'd0382, 10'd0383, 
10'd0384
                        , 10'd0385, 10'd0386, 10'd0387, 10'd0388, 10'd0389, 10'd0390, 10'd0391, 10'd0392, 10'd0393, 10'd0394, 10'd0395, 10'd0396, 10'd0397, 10'd0398, 10'd0399, 10'd0400, 10'd0401, 10'd0402, 10'd0403, 10'd0404, 10'd0405, 10'd0406, 10'd0407, 10'd0408, 10'd0409, 10'd0410, 10'd0411, 10'd0412, 10'd0413, 10'd0414, 10'd0415, 10'd0416, 10'd0417, 10'd0418, 10'd0419, 10'd0420, 10'd0421, 10'd0422, 10'd0423, 10'd0424, 10'd0425, 10'd0426, 10'd0427, 10'd0428, 10'd0429, 10'd0430, 10'd0431, 
10'd0432
                        , 10'd0433, 10'd0434, 10'd0435, 10'd0436, 10'd0437, 10'd0438, 10'd0439, 10'd0440, 10'd0441, 10'd0442, 10'd0443, 10'd0444, 10'd0445, 10'd0446, 10'd0447, 10'd0448, 10'd0449, 10'd0450, 10'd0451, 10'd0452, 10'd0453, 10'd0454, 10'd0455, 10'd0456, 10'd0457, 10'd0458, 10'd0459, 10'd0460, 10'd0461, 10'd0462, 10'd0463, 10'd0464, 10'd0465, 10'd0466, 10'd0467, 10'd0468, 10'd0469, 10'd0470, 10'd0471, 10'd0472, 10'd0473, 10'd0474, 10'd0475, 10'd0476, 10'd0477, 10'd0478, 10'd0479, 
10'd0480
                        , 10'd0481, 10'd0482, 10'd0483, 10'd0484, 10'd0485, 10'd0486, 10'd0487, 10'd0488, 10'd0489, 10'd0490, 10'd0491, 10'd0492, 10'd0493, 10'd0494, 10'd0495, 10'd0496, 10'd0497, 10'd0498, 10'd0499, 10'd0500, 10'd0501, 10'd0502, 10'd0503, 10'd0504, 10'd0505, 10'd0506, 10'd0507, 10'd0508, 10'd0509, 10'd0510, 10'd0511, 10'd0512, 10'd0513, 10'd0516, 10'd0517, 10'd0518, 10'd0520, 10'd0521, 10'd0522:                         begin
                           gs_ctrl9 <= 4'd01;
                        end
                        
                        10'd0514:                         begin
                           gs_ctrl9 <= 4'd02;
                        end
                        
                        10'd0515:                         begin
                           gs_ctrl9 <= 4'd03;
                        end
                        
                        10'd0519:                         begin
                           gs_ctrl9 <= 4'd04;
                        end
                        
                        10'd0523:                         begin
                           gs_ctrl9 <= 4'd05;
                        end
                        
                        10'd0524:                         begin
                           gs_ctrl9 <= 4'd06;
                        end
                        
                        10'd0525:                         begin
                           gs_ctrl9 <= 4'd07;
                        end
                        
                        10'd0526:                         begin
                           gs_ctrl9 <= 4'd08;
                        end
                        
                        default:                         begin
                           gs_ctrl9 <= 4'd00;
                        end
                        
                     endcase

                  end
                  
               endcase

            end
         end

         // resource: mux_2bx4i4c
         // resource: regr_en_ss_sc_2
         always @(posedge i_clk)
          begin :drive_gs_ctrl10
            if (i_rst == 1'b0) begin
               gs_ctrl10 <= 2'd1;
            end
            else begin
               case (stall0) 

                  1'b1:                   begin
                  end
                  
                  1'b0:                   begin
                     case (global_state_next) 

                        10'd0000, 10'd0003, 10'd0005, 10'd0007, 10'd0009, 10'd0011, 10'd0013, 10'd0015, 10'd0017, 10'd0019, 10'd0021, 10'd0023, 10'd0025, 10'd0027, 10'd0029, 10'd0031, 10'd0033, 10'd0035, 10'd0037, 10'd0039, 10'd0041, 10'd0043, 10'd0045, 10'd0047, 10'd0049, 10'd0051, 10'd0053, 10'd0055, 10'd0057, 10'd0059, 10'd0061, 10'd0063, 10'd0065, 10'd0067, 10'd0069, 10'd0071, 10'd0073, 10'd0075, 10'd0077, 10'd0079, 10'd0081, 10'd0083, 10'd0085, 10'd0087, 10'd0089, 10'd0091, 10'd0093, 
10'd0095
                        , 10'd0097, 10'd0099, 10'd0101, 10'd0103, 10'd0105, 10'd0107, 10'd0109, 10'd0111, 10'd0113, 10'd0115, 10'd0117, 10'd0119, 10'd0121, 10'd0123, 10'd0125, 10'd0127, 10'd0129, 10'd0131, 10'd0133, 10'd0135, 10'd0137, 10'd0139, 10'd0141, 10'd0143, 10'd0145, 10'd0147, 10'd0149, 10'd0151, 10'd0153, 10'd0155, 10'd0157, 10'd0159, 10'd0161, 10'd0163, 10'd0165, 10'd0167, 10'd0169, 10'd0171, 10'd0173, 10'd0175, 10'd0177, 10'd0179, 10'd0181, 10'd0183, 10'd0185, 10'd0187, 10'd0189, 
10'd0191
                        , 10'd0193, 10'd0195, 10'd0197, 10'd0199, 10'd0201, 10'd0203, 10'd0205, 10'd0207, 10'd0209, 10'd0211, 10'd0213, 10'd0215, 10'd0217, 10'd0219, 10'd0221, 10'd0223, 10'd0225, 10'd0227, 10'd0229, 10'd0231, 10'd0233, 10'd0235, 10'd0237, 10'd0239, 10'd0241, 10'd0243, 10'd0245, 10'd0247, 10'd0249, 10'd0251, 10'd0253, 10'd0255, 10'd0257, 10'd0259, 10'd0261, 10'd0263, 10'd0265, 10'd0267, 10'd0269, 10'd0271, 10'd0273, 10'd0275, 10'd0277, 10'd0279, 10'd0281, 10'd0283, 10'd0285, 
10'd0287
                        , 10'd0289, 10'd0291, 10'd0293, 10'd0295, 10'd0297, 10'd0299, 10'd0301, 10'd0303, 10'd0305, 10'd0307, 10'd0309, 10'd0311, 10'd0313, 10'd0315, 10'd0317, 10'd0319, 10'd0321, 10'd0323, 10'd0325, 10'd0327, 10'd0329, 10'd0331, 10'd0333, 10'd0335, 10'd0337, 10'd0339, 10'd0341, 10'd0343, 10'd0345, 10'd0347, 10'd0349, 10'd0351, 10'd0353, 10'd0355, 10'd0357, 10'd0359, 10'd0361, 10'd0363, 10'd0365, 10'd0367, 10'd0369, 10'd0371, 10'd0373, 10'd0375, 10'd0377, 10'd0379, 10'd0381, 
10'd0383
                        , 10'd0385, 10'd0387, 10'd0389, 10'd0391, 10'd0393, 10'd0395, 10'd0397, 10'd0399, 10'd0401, 10'd0403, 10'd0405, 10'd0407, 10'd0409, 10'd0411, 10'd0413, 10'd0415, 10'd0417, 10'd0419, 10'd0421, 10'd0423, 10'd0425, 10'd0427, 10'd0429, 10'd0431, 10'd0433, 10'd0435, 10'd0437, 10'd0439, 10'd0441, 10'd0443, 10'd0445, 10'd0447, 10'd0449, 10'd0451, 10'd0453, 10'd0455, 10'd0457, 10'd0459, 10'd0461, 10'd0463, 10'd0465, 10'd0467, 10'd0469, 10'd0471, 10'd0473, 10'd0475, 10'd0477, 
10'd0479
                        , 10'd0481, 10'd0483, 10'd0485, 10'd0487, 10'd0489, 10'd0491, 10'd0493, 10'd0495, 10'd0497, 10'd0499, 10'd0501, 10'd0503, 10'd0505, 10'd0507, 10'd0509, 10'd0511, 10'd0513, 10'd0516, 10'd0517, 10'd0518, 10'd0520, 10'd0521, 10'd0522:                         begin
                           gs_ctrl10 <= 2'd1;
                        end
                        
                        10'd0514:                         begin
                           gs_ctrl10 <= 2'd2;
                        end
                        
                        10'd0515:                         begin
                           gs_ctrl10 <= 2'd3;
                        end
                        
                        default:                         begin
                           gs_ctrl10 <= 2'd0;
                        end
                        
                     endcase

                  end
                  
               endcase

            end
         end

         // resource: mux_1bx2i2c
         // resource: regr_en_sc_1
         always @(posedge i_clk)
          begin :drive_gs_ctrl11
            if (i_rst == 1'b0) begin
               gs_ctrl11 <= 1'b0;
            end
            else begin
               case (stall0) 

                  1'b1:                   begin
                  end
                  
                  1'b0:                   begin
                     case (global_state_next) 

                        10'd0526:                         begin
                           gs_ctrl11 <= 1'b1;
                        end
                        
                        default:                         begin
                           gs_ctrl11 <= 1'b0;
                        end
                        
                     endcase

                  end
                  
               endcase

            end
         end

         // resource: mux_1bx2i2c
         // resource: regr_en_sc_1
         always @(posedge i_clk)
          begin :drive_gs_ctrl12
            if (i_rst == 1'b0) begin
               gs_ctrl12 <= 1'b0;
            end
            else begin
               case (stall0) 

                  1'b1:                   begin
                  end
                  
                  1'b0:                   begin
                     case (global_state_next) 

                        10'd0523:                         begin
                           gs_ctrl12 <= 1'b1;
                        end
                        
                        default:                         begin
                           gs_ctrl12 <= 1'b0;
                        end
                        
                     endcase

                  end
                  
               endcase

            end
         end

         // resource: mux_1bx2i2c
         // resource: regr_en_sc_1
         always @(posedge i_clk)
          begin :drive_gs_ctrl14
            if (i_rst == 1'b0) begin
               gs_ctrl14 <= 1'b0;
            end
            else begin
               case (stall0) 

                  1'b1:                   begin
                  end
                  
                  1'b0:                   begin
                     case (global_state_next) 

                        10'd0525:                         begin
                           gs_ctrl14 <= 1'b1;
                        end
                        
                        default:                         begin
                           gs_ctrl14 <= 1'b0;
                        end
                        
                     endcase

                  end
                  
               endcase

            end
         end

         // resource: mux_1bx2i2c
         // resource: regr_en_sc_1
         always @(posedge i_clk)
          begin :drive_gs_ctrl16
            if (i_rst == 1'b0) begin
               gs_ctrl16 <= 1'b0;
            end
            else begin
               case (stall0) 

                  1'b1:                   begin
                  end
                  
                  1'b0:                   begin
                     case (global_state_next) 

                        10'd0524:                         begin
                           gs_ctrl16 <= 1'b1;
                        end
                        
                        default:                         begin
                           gs_ctrl16 <= 1'b0;
                        end
                        
                     endcase

                  end
                  
               endcase

            end
         end

         // resource: mux_1bx2i2c
         // resource: regr_en_sc_1
         always @(posedge i_clk)
          begin :drive_gs_ctrl17
            if (i_rst == 1'b0) begin
               gs_ctrl17 <= 1'b0;
            end
            else begin
               case (stall0) 

                  1'b1:                   begin
                  end
                  
                  1'b0:                   begin
                     case (global_state_next) 

                        10'd0524, 10'd0525:                         begin
                           gs_ctrl17 <= 1'b1;
                        end
                        
                        default:                         begin
                           gs_ctrl17 <= 1'b0;
                        end
                        
                     endcase

                  end
                  
               endcase

            end
         end

         // resource: mux_2bx3i3c
         // resource: regr_en_sc_2
         always @(posedge i_clk)
          begin :drive_gs_ctrl21
            if (i_rst == 1'b0) begin
               gs_ctrl21 <= 2'd0;
            end
            else begin
               case (stall0) 

                  1'b1:                   begin
                  end
                  
                  1'b0:                   begin
                     case (global_state_next) 

                        10'd0524, 10'd0525:                         begin
                           gs_ctrl21 <= 2'd1;
                        end
                        
                        10'd0526:                         begin
                           gs_ctrl21 <= 2'd2;
                        end
                        
                        default:                         begin
                           gs_ctrl21 <= 2'd0;
                        end
                        
                     endcase

                  end
                  
               endcase

            end
         end

         // resource: mux_2bx3i3c
         // resource: regr_en_sc_2
         always @(posedge i_clk)
          begin :drive_gs_ctrl22
            if (i_rst == 1'b0) begin
               gs_ctrl22 <= 2'd0;
            end
            else begin
               case (stall0) 

                  1'b1:                   begin
                  end
                  
                  1'b0:                   begin
                     case (global_state_next) 

                        10'd0524:                         begin
                           gs_ctrl22 <= 2'd1;
                        end
                        
                        10'd0525:                         begin
                           gs_ctrl22 <= 2'd2;
                        end
                        
                        default:                         begin
                           gs_ctrl22 <= 2'd0;
                        end
                        
                     endcase

                  end
                  
               endcase

            end
         end

         // resource: mux_24bx2i0c
         // resource: regr_en_24
         always @(posedge i_clk)
          begin :drive_o_rgb_inside_data
            case (stall1) 

               1'b1:                begin
               end
               
               1'b0:                begin
                  case (global_state1) 

                     10'd0516, 10'd0520:                      begin
                        o_rgb_inside_data <= i_rgb_data;
                     end
                     
                     10'd0525:                      begin
                        if (2'd3 == DC_Filter_Add_2Ux1U_2U_4_2360_out1 && (2'd3 == DC_Filter_Add_2Ux1U_2U_4_2370_out1 && 2'd3 == DC_Filter_Add_2Ux1U_2U_4_2371_out1)) begin
                           o_rgb_inside_data <= {DC_Filter_N_Mux_12_2_3_4_2367_out1[11:4], {DC_Filter_N_Mux_12_2_3_4_2368_out1[11:4], DC_Filter_N_Mux_12_2_3_4_2369_out1[11:4]}};
                        end
                     end
                     
                  endcase

               end
               
            endcase

         end

         // resource: mux_1bx2i2c
         // resource: regr_en_ss_1
         always @(posedge i_clk)
          begin :drive_i_rgb_m_busy_req_0
            if (i_rst == 1'b0) begin
               i_rgb_m_busy_req_0 <= 1'd1;
            end
            else begin
               case (stall1) 

                  1'b1:                   begin
                  end
                  
                  1'b0:                   begin
                     case (global_state1) 

                        10'd0001:                         begin
                           if (9'd258 == s_reg_1600 && (2'd3 == DC_Filter_Add_2Ux1U_2U_4_15_out1 && 2'd3 == DC_Filter_Add_2Ux1U_2U_4_14_out1)) begin
                              i_rgb_m_busy_req_0 <= 1'd0;
                           end
                        end
                        
                        10'd0514:                         begin
                           if (2'd2 == DC_Filter_Add_1Ux1U_2U_4_2120_out1 && (2'd3 == DC_Filter_Add_2Ux1U_2U_4_2332_out1 && DC_Filter_LessThan_12Ux9U_1U_4_2331_out1)) begin
                              i_rgb_m_busy_req_0 <= 1'd0;
                           end
                        end
                        
                        10'd0516, 10'd0520:                         begin
                           i_rgb_m_busy_req_0 <= 1'd1;
                        end
                        
                        10'd0519:                         begin
                           if (9'd257 != s_reg_1600) begin
                              i_rgb_m_busy_req_0 <= 1'd0;
                           end
                        end
                        
                        10'd0523:                         begin
                           case (s_reg_1600) 

                              9'd257:                               begin
                                 if (2'd3 != DC_Filter_Add_2Ux1U_2U_4_72_out1) begin
                                    i_rgb_m_busy_req_0 <= 1'd0;
                                 end
                              end
                              
                              default:                               begin
                                 i_rgb_m_busy_req_0 <= 1'd0;
                              end
                              
                           endcase

                        end
                        
                        10'd0526:                         begin
                           if (9'd256 == DC_Filter_Add_9Ux1U_9U_4_10_out1 && 12'd0000 == s_reg_1601) begin
                              i_rgb_m_busy_req_0 <= 1'd0;
                           end
                        end
                        
                     endcase

                  end
                  
               endcase

            end
         end

         // resource: regr_en_sc_1
         always @(posedge i_clk)
          begin :drive_o_rgb_inside_m_req_m_trig_req
            if (i_rst == 1'b0) begin
               o_rgb_inside_m_req_m_trig_req <= 1'd0;
            end
            else begin
               case (stall1) 

                  1'b1:                   begin
                  end
                  
                  1'b0:                   begin
                     case (global_state1) 

                        10'd0525:                         begin
                           if (2'd3 == DC_Filter_Add_2Ux1U_2U_4_2360_out1 && (2'd3 == DC_Filter_Add_2Ux1U_2U_4_2370_out1 && 2'd3 == DC_Filter_Add_2Ux1U_2U_4_2371_out1)) begin
                              o_rgb_inside_m_req_m_trig_req <= DC_Filter_Not_1U_1U_1_6_out1;
                           end
                        end
                        
                     endcase

                  end
                  
               endcase

            end
         end

         // resource: mux_1bx3i1c
         always @(DC_Filter_And_1Ux1U_1U_4_2373_out1 or DC_Filter_gen_busy_r_4_4743_out1[0] or global_state1)
          begin :drive_stall1
            case (global_state1) 

               10'd0516, 10'd0520:                begin
                  stall1 = DC_Filter_gen_busy_r_4_4743_out1[0];
               end
               
               10'd0526:                begin
                  stall1 = DC_Filter_And_1Ux1U_1U_4_2373_out1;
               end
               
               default:                begin
                  stall1 = 1'b0;
               end
               
            endcase

         end

         // resource: mux_12bx2i0c
         // resource: regr_en_sc_12
         always @(posedge i_clk)
          begin :drive_s_reg_1595
            if (i_rst == 1'b0) begin
               s_reg_1595 <= 12'd0000;
            end
            else begin
               case (stall1) 

                  1'b1:                   begin
                  end
                  
                  1'b0:                   begin
                     case (global_state1) 

                        10'd0514:                         begin
                           if (2'd2 == DC_Filter_Add_1Ux1U_2U_4_2120_out1 && (2'd3 == DC_Filter_Add_2Ux1U_2U_4_2332_out1 && (!DC_Filter_LessThan_12Ux9U_1U_4_2331_out1 && !DC_Filter_LessThan_12Ux9U_1U_4_2333_out1))) begin
                              /* state557 */
                              s_reg_1595 <= DC_Filter_N_Mux_12_2_0_4_2350_out1;
                           end
                        end
                        
                        10'd0515:                         begin
                           if (2'd3 == DC_Filter_Add_2Ux1U_2U_4_2340_out1 && 9'd257 == s_reg_1602[8:0]) begin
                              /* state561 */
                              s_reg_1595 <= DC_Filter_N_Mux_12_2_0_4_2350_out1;
                           end
                        end
                        
                        10'd0519:                         begin
                           if (9'd257 == s_reg_1600) begin
                              /* state560 */
                              s_reg_1595 <= DC_Filter_N_Mux_12_2_0_4_2350_out1;
                           end
                        end
                        
                        10'd0523:                         begin
                           if (9'd257 == s_reg_1600 && 2'd3 == DC_Filter_Add_2Ux1U_2U_4_72_out1) begin
                              /* state558 */
                              s_reg_1595 <= DC_Filter_N_Mux_12_2_0_4_2350_out1;
                           end
                        end
                        
                        10'd0524:                         begin
                           /* state562 */
                           s_reg_1595 <= DC_Filter_N_Mux_12_2_0_4_2350_out1;
                        end
                        
                        10'd0525:                         begin
                           s_reg_1595 <= DC_Filter_N_Mux_12_2_3_4_2367_out1;
                        end
                        
                        10'd0526:                         begin
                           if (9'd256 != DC_Filter_Add_9Ux1U_9U_4_10_out1) begin
                              /* state559 */
                              s_reg_1595 <= DC_Filter_N_Mux_12_2_0_4_2350_out1;
                           end
                        end
                        
                     endcase

                  end
                  
               endcase

            end
         end

         // resource: mux_12bx2i0c
         // resource: regr_en_sc_12
         always @(posedge i_clk)
          begin :drive_s_reg_1596
            if (i_rst == 1'b0) begin
               s_reg_1596 <= 12'd0000;
            end
            else begin
               case (stall1) 

                  1'b1:                   begin
                  end
                  
                  1'b0:                   begin
                     case (global_state1) 

                        10'd0514:                         begin
                           if (2'd2 == DC_Filter_Add_1Ux1U_2U_4_2120_out1 && (2'd3 == DC_Filter_Add_2Ux1U_2U_4_2332_out1 && (!DC_Filter_LessThan_12Ux9U_1U_4_2331_out1 && !DC_Filter_LessThan_12Ux9U_1U_4_2333_out1))) begin
                              s_reg_1596 <= DC_Filter_N_Mux_12_2_0_4_2351_out1;
                           end
                        end
                        
                        10'd0515:                         begin
                           if (2'd3 == DC_Filter_Add_2Ux1U_2U_4_2340_out1 && 9'd257 == s_reg_1602[8:0]) begin
                              s_reg_1596 <= DC_Filter_N_Mux_12_2_0_4_2351_out1;
                           end
                        end
                        
                        10'd0519:                         begin
                           if (9'd257 == s_reg_1600) begin
                              s_reg_1596 <= DC_Filter_N_Mux_12_2_0_4_2351_out1;
                           end
                        end
                        
                        10'd0523:                         begin
                           if (9'd257 == s_reg_1600 && 2'd3 == DC_Filter_Add_2Ux1U_2U_4_72_out1) begin
                              s_reg_1596 <= DC_Filter_N_Mux_12_2_0_4_2351_out1;
                           end
                        end
                        
                        10'd0524:                         begin
                           s_reg_1596 <= DC_Filter_N_Mux_12_2_0_4_2351_out1;
                        end
                        
                        10'd0525:                         begin
                           s_reg_1596 <= DC_Filter_N_Mux_12_2_3_4_2368_out1;
                        end
                        
                        10'd0526:                         begin
                           if (9'd256 != DC_Filter_Add_9Ux1U_9U_4_10_out1) begin
                              s_reg_1596 <= DC_Filter_N_Mux_12_2_0_4_2351_out1;
                           end
                        end
                        
                     endcase

                  end
                  
               endcase

            end
         end

         // resource: mux_12bx2i0c
         // resource: regr_en_sc_12
         always @(posedge i_clk)
          begin :drive_s_reg_1597
            if (i_rst == 1'b0) begin
               s_reg_1597 <= 12'd0000;
            end
            else begin
               case (stall1) 

                  1'b1:                   begin
                  end
                  
                  1'b0:                   begin
                     case (global_state1) 

                        10'd0514:                         begin
                           if (2'd2 == DC_Filter_Add_1Ux1U_2U_4_2120_out1 && (2'd3 == DC_Filter_Add_2Ux1U_2U_4_2332_out1 && (!DC_Filter_LessThan_12Ux9U_1U_4_2331_out1 && !DC_Filter_LessThan_12Ux9U_1U_4_2333_out1))) begin
                              s_reg_1597 <= DC_Filter_N_Mux_12_2_1_4_2352_out1;
                           end
                        end
                        
                        10'd0515:                         begin
                           if (2'd3 == DC_Filter_Add_2Ux1U_2U_4_2340_out1 && 9'd257 == s_reg_1602[8:0]) begin
                              s_reg_1597 <= DC_Filter_N_Mux_12_2_1_4_2352_out1;
                           end
                        end
                        
                        10'd0519:                         begin
                           if (9'd257 == s_reg_1600) begin
                              s_reg_1597 <= DC_Filter_N_Mux_12_2_1_4_2352_out1;
                           end
                        end
                        
                        10'd0523:                         begin
                           if (9'd257 == s_reg_1600 && 2'd3 == DC_Filter_Add_2Ux1U_2U_4_72_out1) begin
                              s_reg_1597 <= DC_Filter_N_Mux_12_2_1_4_2352_out1;
                           end
                        end
                        
                        10'd0524:                         begin
                           s_reg_1597 <= DC_Filter_N_Mux_12_2_1_4_2352_out1;
                        end
                        
                        10'd0525:                         begin
                           s_reg_1597 <= DC_Filter_N_Mux_12_2_3_4_2369_out1;
                        end
                        
                        10'd0526:                         begin
                           if (9'd256 != DC_Filter_Add_9Ux1U_9U_4_10_out1) begin
                              s_reg_1597 <= DC_Filter_N_Mux_12_2_1_4_2352_out1;
                           end
                        end
                        
                     endcase

                  end
                  
               endcase

            end
         end

         // resource: mux_2bx4i1c
         // resource: regr_en_sc_2
         always @(posedge i_clk)
          begin :drive_s_reg_1598
            if (i_rst == 1'b0) begin
               s_reg_1598 <= 2'd0;
            end
            else begin
               case (stall1) 

                  1'b1:                   begin
                  end
                  
                  1'b0:                   begin
                     case (global_state1) 

                        10'd0001:                         begin
                           if (9'd258 == s_reg_1600 && (2'd3 == DC_Filter_Add_2Ux1U_2U_4_15_out1 && 2'd3 != DC_Filter_Add_2Ux1U_2U_4_14_out1)) begin
                              s_reg_1598 <= DC_Filter_Add_2Ux1U_2U_4_14_out1;
                           end
                        end
                        
                        10'd0514:                         begin
                           if (2'd2 == DC_Filter_Add_1Ux1U_2U_4_2120_out1) begin
                              case (DC_Filter_Add_2Ux1U_2U_4_2332_out1) 

                                 2'd3:                                  begin
                                    s_reg_1598 <= 2'd0;
                                 end
                                 
                                 default:                                  begin
                                    s_reg_1598 <= DC_Filter_Add_2Ux1U_2U_4_2332_out1;
                                 end
                                 
                              endcase

                           end
                        end
                        
                        10'd0515, 10'd0519, 10'd0523, 10'd0524:                         begin
                           s_reg_1598 <= 2'd0;
                        end
                        
                        10'd0525:                         begin
                           if (2'd3 == DC_Filter_Add_2Ux1U_2U_4_2360_out1) begin
                              case (DC_Filter_Add_2Ux1U_2U_4_2370_out1) 

                                 2'd3:                                  begin
                                    if (2'd3 != DC_Filter_Add_2Ux1U_2U_4_2371_out1) begin
                                       s_reg_1598 <= 2'd0;
                                    end
                                 end
                                 
                                 default:                                  begin
                                    s_reg_1598 <= DC_Filter_Add_2Ux1U_2U_4_2370_out1;
                                 end
                                 
                              endcase

                           end
                        end
                        
                        10'd0526:                         begin
                           /* state578 */
                           case (DC_Filter_Add_9Ux1U_9U_4_10_out1) 

                              9'd256:                               begin
                                 if (12'd0000 != s_reg_1601) begin
                                    s_reg_1598 <= 2'd0;
                                 end
                              end
                              
                              default:                               begin
                                 s_reg_1598 <= 2'd0;
                              end
                              
                           endcase

                        end
                        
                     endcase

                  end
                  
               endcase

            end
         end

         // resource: mux_2bx7i2c
         // resource: regr_en_sc_2
         always @(posedge i_clk)
          begin :drive_s_reg_1599
            if (i_rst == 1'b0) begin
               s_reg_1599 <= 2'd0;
            end
            else begin
               case (stall1) 

                  1'b1:                   begin
                  end
                  
                  1'b0:                   begin
                     case (global_state1) 

                        10'd0001:                         begin
                           if (9'd258 == s_reg_1600) begin
                              case (DC_Filter_Add_2Ux1U_2U_4_15_out1) 

                                 2'd3:                                  begin
                                    /* state6 */
                                    case (DC_Filter_Add_2Ux1U_2U_4_14_out1) 

                                       2'd3:                                        begin
                                          s_reg_1599 <= 2'd1;
                                       end
                                       
                                       default:                                        begin
                                          s_reg_1599 <= 2'd0;
                                       end
                                       
                                    endcase

                                 end
                                 
                                 default:                                  begin
                                    s_reg_1599 <= DC_Filter_Add_2Ux1U_2U_4_15_out1;
                                 end
                                 
                              endcase

                           end
                        end
                        
                        10'd0514:                         begin
                           case (DC_Filter_Add_1Ux1U_2U_4_2120_out1) 

                              2'd2:                               begin
                                 s_reg_1599 <= 2'd0;
                              end
                              
                              default:                               begin
                                 s_reg_1599 <= DC_Filter_Add_1Ux1U_2U_4_2120_out1;
                              end
                              
                           endcase

                        end
                        
                        10'd0515:                         begin
                           case (DC_Filter_Add_2Ux1U_2U_4_2340_out1) 

                              2'd3:                               begin
                                 s_reg_1599 <= 2'd0;
                              end
                              
                              default:                               begin
                                 s_reg_1599 <= DC_Filter_Add_2Ux1U_2U_4_2340_out1;
                              end
                              
                           endcase

                        end
                        
                        10'd0519:                         begin
                           s_reg_1599 <= 2'd0;
                        end
                        
                        10'd0523:                         begin
                           if (9'd257 == s_reg_1600) begin
                              case (DC_Filter_Add_2Ux1U_2U_4_72_out1) 

                                 2'd3:                                  begin
                                    s_reg_1599 <= 2'd0;
                                 end
                                 
                                 default:                                  begin
                                    s_reg_1599 <= DC_Filter_Add_2Ux1U_2U_4_72_out1;
                                 end
                                 
                              endcase

                           end
                        end
                        
                        10'd0525:                         begin
                           if (2'd3 == DC_Filter_Add_2Ux1U_2U_4_2360_out1 && (2'd3 == DC_Filter_Add_2Ux1U_2U_4_2370_out1 && 2'd3 != DC_Filter_Add_2Ux1U_2U_4_2371_out1)) begin
                              s_reg_1599 <= DC_Filter_Add_2Ux1U_2U_4_2371_out1;
                           end
                        end
                        
                        10'd0526:                         begin
                           /* state578 */
                           case (DC_Filter_Add_9Ux1U_9U_4_10_out1) 

                              9'd256:                               begin
                                 case (s_reg_1601) 

                                    12'd0000:                                     begin
                                       s_reg_1599 <= 2'd1;
                                    end
                                    
                                    default:                                     begin
                                       s_reg_1599 <= 2'd0;
                                    end
                                    
                                 endcase

                              end
                              
                              default:                               begin
                                 s_reg_1599 <= 2'd0;
                              end
                              
                           endcase

                        end
                        
                     endcase

                  end
                  
               endcase

            end
         end

         // resource: mux_9bx6i2c
         // resource: regr_en_sc_9
         always @(posedge i_clk)
          begin :drive_s_reg_1600
            if (i_rst == 1'b0) begin
               s_reg_1600 <= 9'd000;
            end
            else begin
               case (stall1) 

                  1'b1:                   begin
                  end
                  
                  1'b0:                   begin
                     case (global_state1) 

                        10'd0000, 10'd0518, 10'd0522:                         begin
                           s_reg_1600 <= DC_Filter_Add_9Ux1U_9U_4_10_out1;
                        end
                        
                        10'd0001:                         begin
                           if (9'd258 == s_reg_1600) begin
                              case (DC_Filter_Add_2Ux1U_2U_4_15_out1) 

                                 2'd3:                                  begin
                                    /* state6 */
                                    case (DC_Filter_Add_2Ux1U_2U_4_14_out1) 

                                       2'd3:                                        begin
                                          s_reg_1600 <= 9'd001;
                                       end
                                       
                                       default:                                        begin
                                          s_reg_1600 <= 9'd000;
                                       end
                                       
                                    endcase

                                 end
                                 
                                 default:                                  begin
                                    s_reg_1600 <= 9'd000;
                                 end
                                 
                              endcase

                           end
                        end
                        
                        10'd0514:                         begin
                           if (2'd2 == DC_Filter_Add_1Ux1U_2U_4_2120_out1) begin
                              case (DC_Filter_Add_2Ux1U_2U_4_2332_out1) 

                                 2'd3:                                  begin
                                    if (DC_Filter_LessThan_12Ux9U_1U_4_2331_out1) begin
                                       s_reg_1600 <= 9'd001;
                                    end
                                    else begin
                                       s_reg_1600 <= {8'b00000000, DC_Filter_LessThan_12Ux9U_1U_4_2333_out1};
                                    end
                                 end
                                 
                                 default:                                  begin
                                    s_reg_1600 <= {5'b00000, DC_Filter_Mul_2Ux2U_4U_4_16_out1};
                                 end
                                 
                              endcase

                           end
                        end
                        
                        10'd0515:                         begin
                           if (2'd3 == DC_Filter_Add_2Ux1U_2U_4_2340_out1) begin
                              /* state533 */
                              case (s_reg_1602[8:0]) 

                                 9'd257:                                  begin
                                    s_reg_1600 <= 9'd000;
                                 end
                                 
                                 default:                                  begin
                                    s_reg_1600 <= s_reg_1602[8:0];
                                 end
                                 
                              endcase

                           end
                        end
                        
                        10'd0519:                         begin
                           if (9'd257 == s_reg_1600) begin
                              s_reg_1600 <= 9'd000;
                           end
                        end
                        
                        10'd0523:                         begin
                           if (9'd257 == s_reg_1600) begin
                              case (DC_Filter_Add_2Ux1U_2U_4_72_out1) 

                                 2'd3:                                  begin
                                    s_reg_1600 <= 9'd000;
                                 end
                                 
                                 default:                                  begin
                                    s_reg_1600 <= 9'd001;
                                 end
                                 
                              endcase

                           end
                        end
                        
                        10'd0526:                         begin
                           /* state578 */
                           case (DC_Filter_Add_9Ux1U_9U_4_10_out1) 

                              9'd256:                               begin
                                 case (s_reg_1601) 

                                    12'd0000:                                     begin
                                       s_reg_1600 <= 9'd001;
                                    end
                                    
                                    default:                                     begin
                                       s_reg_1600 <= {5'b00000, DC_Filter_Mul_2Ux2U_4U_4_16_out1};
                                    end
                                    
                                 endcase

                              end
                              
                              default:                               begin
                                 s_reg_1600 <= DC_Filter_Add_9Ux1U_9U_4_10_out1;
                              end
                              
                           endcase

                        end
                        
                     endcase

                  end
                  
               endcase

            end
         end

         // resource: mux_12bx3i1c
         // resource: regr_en_12
         always @(posedge i_clk)
          begin :drive_s_reg_1601
            case (stall1) 

               1'b1:                begin
               end
               
               1'b0:                begin
                  case (global_state1) 

                     10'd0515:                      begin
                        if (2'd3 == DC_Filter_Add_2Ux1U_2U_4_2340_out1 && 9'd257 == s_reg_1602[8:0]) begin
                           s_reg_1601 <= DC_Filter_Add_12Ux1U_12U_4_2334_out1;
                        end
                     end
                     
                     10'd0519:                      begin
                        s_reg_1601 <= s_reg_1605;
                     end
                     
                     10'd0523:                      begin
                        s_reg_1601 <= 12'd0003;
                     end
                     
                  endcase

               end
               
            endcase

         end

         // resource: mux_11bx2i0c
         // resource: regr_en_11
         always @(posedge i_clk)
          begin :drive_s_reg_1602
            case (stall1) 

               1'b1:                begin
               end
               
               1'b0:                begin
                  case (global_state1) 

                     10'd0001, 10'd0526:                      begin
                        s_reg_1602 <= DC_Filter_Mul_9Ux4U_12U_4_12_out1[10:0];
                     end
                     
                     10'd0514:                      begin
                        s_reg_1602 <= {2'b00, DC_Filter_Add_9Ux1U_9U_4_10_out1};
                     end
                     
                     10'd0515:                      begin
                        if (2'd3 == DC_Filter_Add_2Ux1U_2U_4_2340_out1 && 9'd257 != s_reg_1602[8:0]) begin
                           s_reg_1602 <= {2'b00, DC_Filter_Add_9Ux1U_9U_4_10_out1};
                        end
                     end
                     
                     10'd0523:                      begin
                        if (9'd257 == s_reg_1600 && 2'd3 != DC_Filter_Add_2Ux1U_2U_4_72_out1) begin
                           s_reg_1602 <= DC_Filter_Mul_9Ux4U_12U_4_12_out1[10:0];
                        end
                     end
                     
                  endcase

               end
               
            endcase

         end

         // resource: regr_en_4
         always @(posedge i_clk)
          begin :drive_s_reg_1603
            case (stall1) 

               1'b1:                begin
               end
               
               1'b0:                begin
                  case (global_state1) 

                     10'd0002, 10'd0004, 10'd0005, 10'd0006, 10'd0007, 10'd0008, 10'd0009, 10'd0010, 10'd0011, 10'd0012, 10'd0013, 10'd0014, 10'd0015, 10'd0016, 10'd0017, 10'd0018, 10'd0019, 10'd0020, 10'd0021, 10'd0022, 10'd0023, 10'd0024, 10'd0025, 10'd0026, 10'd0027, 10'd0028, 10'd0029, 10'd0030, 10'd0031, 10'd0032, 10'd0033, 10'd0034, 10'd0035, 10'd0036, 10'd0037, 10'd0038, 10'd0039, 10'd0040, 10'd0041, 10'd0042, 10'd0043, 10'd0044, 10'd0045, 10'd0046, 10'd0047, 10'd0048, 10'd0049, 10'd0050
, 
                     10'd0051, 10'd0052, 10'd0053, 10'd0054, 10'd0055, 10'd0056, 10'd0057, 10'd0058, 10'd0059, 10'd0060, 10'd0061, 10'd0062, 10'd0063, 10'd0064, 10'd0065, 10'd0066, 10'd0067, 10'd0068, 10'd0069, 10'd0070, 10'd0071, 10'd0072, 10'd0073, 10'd0074, 10'd0075, 10'd0076, 10'd0077, 10'd0078, 10'd0079, 10'd0080, 10'd0081, 10'd0082, 10'd0083, 10'd0084, 10'd0085, 10'd0086, 10'd0087, 10'd0088, 10'd0089, 10'd0090, 10'd0091, 10'd0092, 10'd0093, 10'd0094, 10'd0095, 10'd0096, 10'd0097, 10'd0098
, 
                     10'd0099, 10'd0100, 10'd0101, 10'd0102, 10'd0103, 10'd0104, 10'd0105, 10'd0106, 10'd0107, 10'd0108, 10'd0109, 10'd0110, 10'd0111, 10'd0112, 10'd0113, 10'd0114, 10'd0115, 10'd0116, 10'd0117, 10'd0118, 10'd0119, 10'd0120, 10'd0121, 10'd0122, 10'd0123, 10'd0124, 10'd0125, 10'd0126, 10'd0127, 10'd0128, 10'd0129, 10'd0130, 10'd0131, 10'd0132, 10'd0133, 10'd0134, 10'd0135, 10'd0136, 10'd0137, 10'd0138, 10'd0139, 10'd0140, 10'd0141, 10'd0142, 10'd0143, 10'd0144, 10'd0145, 10'd0146
, 
                     10'd0147, 10'd0148, 10'd0149, 10'd0150, 10'd0151, 10'd0152, 10'd0153, 10'd0154, 10'd0155, 10'd0156, 10'd0157, 10'd0158, 10'd0159, 10'd0160, 10'd0161, 10'd0162, 10'd0163, 10'd0164, 10'd0165, 10'd0166, 10'd0167, 10'd0168, 10'd0169, 10'd0170, 10'd0171, 10'd0172, 10'd0173, 10'd0174, 10'd0175, 10'd0176, 10'd0177, 10'd0178, 10'd0179, 10'd0180, 10'd0181, 10'd0182, 10'd0183, 10'd0184, 10'd0185, 10'd0186, 10'd0187, 10'd0188, 10'd0189, 10'd0190, 10'd0191, 10'd0192, 10'd0193, 10'd0194
, 
                     10'd0195, 10'd0196, 10'd0197, 10'd0198, 10'd0199, 10'd0200, 10'd0201, 10'd0202, 10'd0203, 10'd0204, 10'd0205, 10'd0206, 10'd0207, 10'd0208, 10'd0209, 10'd0210, 10'd0211, 10'd0212, 10'd0213, 10'd0214, 10'd0215, 10'd0216, 10'd0217, 10'd0218, 10'd0219, 10'd0220, 10'd0221, 10'd0222, 10'd0223, 10'd0224, 10'd0225, 10'd0226, 10'd0227, 10'd0228, 10'd0229, 10'd0230, 10'd0231, 10'd0232, 10'd0233, 10'd0234, 10'd0235, 10'd0236, 10'd0237, 10'd0238, 10'd0239, 10'd0240, 10'd0241, 10'd0242
, 
                     10'd0243, 10'd0244, 10'd0245, 10'd0246, 10'd0247, 10'd0248, 10'd0249, 10'd0250, 10'd0251, 10'd0252, 10'd0253, 10'd0254, 10'd0255, 10'd0256, 10'd0257, 10'd0258, 10'd0259, 10'd0260, 10'd0261, 10'd0262, 10'd0263, 10'd0264, 10'd0265, 10'd0266, 10'd0267, 10'd0268, 10'd0269, 10'd0270, 10'd0271, 10'd0272, 10'd0273, 10'd0274, 10'd0275, 10'd0276, 10'd0277, 10'd0278, 10'd0279, 10'd0280, 10'd0281, 10'd0282, 10'd0283, 10'd0284, 10'd0285, 10'd0286, 10'd0287, 10'd0288, 10'd0289, 10'd0290
, 
                     10'd0291, 10'd0292, 10'd0293, 10'd0294, 10'd0295, 10'd0296, 10'd0297, 10'd0298, 10'd0299, 10'd0300, 10'd0301, 10'd0302, 10'd0303, 10'd0304, 10'd0305, 10'd0306, 10'd0307, 10'd0308, 10'd0309, 10'd0310, 10'd0311, 10'd0312, 10'd0313, 10'd0314, 10'd0315, 10'd0316, 10'd0317, 10'd0318, 10'd0319, 10'd0320, 10'd0321, 10'd0322, 10'd0323, 10'd0324, 10'd0325, 10'd0326, 10'd0327, 10'd0328, 10'd0329, 10'd0330, 10'd0331, 10'd0332, 10'd0333, 10'd0334, 10'd0335, 10'd0336, 10'd0337, 10'd0338
, 
                     10'd0339, 10'd0340, 10'd0341, 10'd0342, 10'd0343, 10'd0344, 10'd0345, 10'd0346, 10'd0347, 10'd0348, 10'd0349, 10'd0350, 10'd0351, 10'd0352, 10'd0353, 10'd0354, 10'd0355, 10'd0356, 10'd0357, 10'd0358, 10'd0359, 10'd0360, 10'd0361, 10'd0362, 10'd0363, 10'd0364, 10'd0365, 10'd0366, 10'd0367, 10'd0368, 10'd0369, 10'd0370, 10'd0371, 10'd0372, 10'd0373, 10'd0374, 10'd0375, 10'd0376, 10'd0377, 10'd0378, 10'd0379, 10'd0380, 10'd0381, 10'd0382, 10'd0383, 10'd0384, 10'd0385, 10'd0386
, 
                     10'd0387, 10'd0388, 10'd0389, 10'd0390, 10'd0391, 10'd0392, 10'd0393, 10'd0394, 10'd0395, 10'd0396, 10'd0397, 10'd0398, 10'd0399, 10'd0400, 10'd0401, 10'd0402, 10'd0403, 10'd0404, 10'd0405, 10'd0406, 10'd0407, 10'd0408, 10'd0409, 10'd0410, 10'd0411, 10'd0412, 10'd0413, 10'd0414, 10'd0415, 10'd0416, 10'd0417, 10'd0418, 10'd0419, 10'd0420, 10'd0421, 10'd0422, 10'd0423, 10'd0424, 10'd0425, 10'd0426, 10'd0427, 10'd0428, 10'd0429, 10'd0430, 10'd0431, 10'd0432, 10'd0433, 10'd0434
, 
                     10'd0435, 10'd0436, 10'd0437, 10'd0438, 10'd0439, 10'd0440, 10'd0441, 10'd0442, 10'd0443, 10'd0444, 10'd0445, 10'd0446, 10'd0447, 10'd0448, 10'd0449, 10'd0450, 10'd0451, 10'd0452, 10'd0453, 10'd0454, 10'd0455, 10'd0456, 10'd0457, 10'd0458, 10'd0459, 10'd0460, 10'd0461, 10'd0462, 10'd0463, 10'd0464, 10'd0465, 10'd0466, 10'd0467, 10'd0468, 10'd0469, 10'd0470, 10'd0471, 10'd0472, 10'd0473, 10'd0474, 10'd0475, 10'd0476, 10'd0477, 10'd0478, 10'd0479, 10'd0480, 10'd0481, 10'd0482
, 
                     10'd0483, 10'd0484, 10'd0485, 10'd0486, 10'd0487, 10'd0488, 10'd0489, 10'd0490, 10'd0491, 10'd0492, 10'd0493, 10'd0494, 10'd0495, 10'd0496, 10'd0497, 10'd0498, 10'd0499, 10'd0500, 10'd0501, 10'd0502, 10'd0503, 10'd0504, 10'd0505, 10'd0506, 10'd0507, 10'd0508, 10'd0509, 10'd0510, 10'd0511, 10'd0512:                      begin
                        s_reg_1603 <= DC_Filter_Mul_2Ux2U_4U_4_2149_out1;
                     end
                     
                  endcase

               end
               
            endcase

         end

         // resource: mux_2bx5i1c
         // resource: regr_en_2
         always @(posedge i_clk)
          begin :drive_s_reg_1604
            case (stall1) 

               1'b1:                begin
               end
               
               1'b0:                begin
                  case (global_state1) 

                     10'd0003, 10'd0005, 10'd0007, 10'd0009, 10'd0011, 10'd0013, 10'd0015, 10'd0017, 10'd0019, 10'd0021, 10'd0023, 10'd0025, 10'd0027, 10'd0029, 10'd0031, 10'd0033, 10'd0035, 10'd0037, 10'd0039, 10'd0041, 10'd0043, 10'd0045, 10'd0047, 10'd0049, 10'd0051, 10'd0053, 10'd0055, 10'd0057, 10'd0059, 10'd0061, 10'd0063, 10'd0065, 10'd0067, 10'd0069, 10'd0071, 10'd0073, 10'd0075, 10'd0077, 10'd0079, 10'd0081, 10'd0083, 10'd0085, 10'd0087, 10'd0089, 10'd0091, 10'd0093, 10'd0095, 10'd0097
, 
                     10'd0099, 10'd0101, 10'd0103, 10'd0105, 10'd0107, 10'd0109, 10'd0111, 10'd0113, 10'd0115, 10'd0117, 10'd0119, 10'd0121, 10'd0123, 10'd0125, 10'd0127, 10'd0129, 10'd0131, 10'd0133, 10'd0135, 10'd0136, 10'd0139, 10'd0141, 10'd0143, 10'd0145, 10'd0147, 10'd0149, 10'd0151, 10'd0153, 10'd0155, 10'd0157, 10'd0159, 10'd0161, 10'd0163, 10'd0165, 10'd0167, 10'd0169, 10'd0171, 10'd0173, 10'd0175, 10'd0177, 10'd0179, 10'd0181, 10'd0183, 10'd0185, 10'd0187, 10'd0189, 10'd0191, 10'd0193
, 
                     10'd0195, 10'd0197, 10'd0199, 10'd0201, 10'd0203, 10'd0205, 10'd0207, 10'd0209, 10'd0211, 10'd0213, 10'd0215, 10'd0217, 10'd0219, 10'd0221, 10'd0223, 10'd0225, 10'd0227, 10'd0229, 10'd0231, 10'd0233, 10'd0235, 10'd0237, 10'd0239, 10'd0241, 10'd0243, 10'd0245, 10'd0247, 10'd0249, 10'd0251, 10'd0253, 10'd0255, 10'd0256, 10'd0259, 10'd0261, 10'd0263, 10'd0265, 10'd0267, 10'd0269, 10'd0271, 10'd0273, 10'd0275, 10'd0277, 10'd0279, 10'd0281, 10'd0283, 10'd0285, 10'd0287, 10'd0289
, 
                     10'd0291, 10'd0293, 10'd0295, 10'd0297, 10'd0299, 10'd0301, 10'd0303, 10'd0305, 10'd0307, 10'd0309, 10'd0311, 10'd0313, 10'd0315, 10'd0317, 10'd0319, 10'd0321, 10'd0323, 10'd0325, 10'd0327, 10'd0329, 10'd0331, 10'd0333, 10'd0335, 10'd0337, 10'd0339, 10'd0341, 10'd0343, 10'd0345, 10'd0347, 10'd0349, 10'd0351, 10'd0353, 10'd0355, 10'd0357, 10'd0359, 10'd0361, 10'd0363, 10'd0365, 10'd0367, 10'd0369, 10'd0371, 10'd0373, 10'd0375, 10'd0376, 10'd0379, 10'd0381, 10'd0383, 10'd0385
, 
                     10'd0387, 10'd0389, 10'd0391, 10'd0393, 10'd0395, 10'd0397, 10'd0399, 10'd0401, 10'd0403, 10'd0405, 10'd0407, 10'd0409, 10'd0411, 10'd0413, 10'd0415, 10'd0417, 10'd0419, 10'd0421, 10'd0423, 10'd0425, 10'd0427, 10'd0429, 10'd0431, 10'd0433, 10'd0435, 10'd0437, 10'd0439, 10'd0441, 10'd0443, 10'd0445, 10'd0447, 10'd0449, 10'd0451, 10'd0453, 10'd0455, 10'd0457, 10'd0459, 10'd0461, 10'd0463, 10'd0465, 10'd0467, 10'd0469, 10'd0471, 10'd0473, 10'd0475, 10'd0477, 10'd0479, 10'd0481
, 
                     10'd0483, 10'd0485, 10'd0487, 10'd0489, 10'd0491, 10'd0493, 10'd0495, 10'd0496, 10'd0499, 10'd0501, 10'd0503, 10'd0505, 10'd0507, 10'd0509, 10'd0511:                      begin
                        s_reg_1604 <= DC_Filter_Add_1Ux1U_2U_4_2120_out1;
                     end
                     
                     10'd0514:                      begin
                        case (DC_Filter_Add_1Ux1U_2U_4_2120_out1) 

                           2'd2:                            begin
                              case (DC_Filter_Add_2Ux1U_2U_4_2332_out1) 

                                 2'd3:                                  begin
                                    case (DC_Filter_Add_2Ux1U_2U_4_2346_out1) 

                                       2'd3:                                        begin
                                          s_reg_1604 <= 2'd0;
                                       end
                                       
                                       default:                                        begin
                                          s_reg_1604 <= DC_Filter_Add_2Ux1U_2U_4_2346_out1;
                                       end
                                       
                                    endcase

                                 end
                                 
                                 default:                                  begin
                                    s_reg_1604 <= DC_Filter_Add_1Ux1U_2U_4_19_out1;
                                 end
                                 
                              endcase

                           end
                           
                           default:                            begin
                              s_reg_1604 <= DC_Filter_Add_1Ux1U_2U_4_19_out1;
                           end
                           
                        endcase

                     end
                     
                     10'd0515, 10'd0519, 10'd0523, 10'd0524:                      begin
                        case (DC_Filter_Add_2Ux1U_2U_4_2346_out1) 

                           2'd3:                            begin
                              s_reg_1604 <= 2'd0;
                           end
                           
                           default:                            begin
                              s_reg_1604 <= DC_Filter_Add_2Ux1U_2U_4_2346_out1;
                           end
                           
                        endcase

                     end
                     
                     10'd0525:                      begin
                        case (DC_Filter_Add_2Ux1U_2U_4_2360_out1) 

                           2'd3:                            begin
                              case (DC_Filter_Add_2Ux1U_2U_4_2370_out1) 

                                 2'd3:                                  begin
                                    if (2'd3 != DC_Filter_Add_2Ux1U_2U_4_2371_out1) begin
                                       s_reg_1604 <= 2'd0;
                                    end
                                 end
                                 
                                 default:                                  begin
                                    s_reg_1604 <= 2'd0;
                                 end
                                 
                              endcase

                           end
                           
                           default:                            begin
                              s_reg_1604 <= DC_Filter_Add_2Ux1U_2U_4_2360_out1;
                           end
                           
                        endcase

                     end
                     
                     10'd0526:                      begin
                        /* state578 */
                        case (DC_Filter_Add_9Ux1U_9U_4_10_out1) 

                           9'd256:                            begin
                              if (12'd0000 != s_reg_1601) begin
                                 s_reg_1604 <= DC_Filter_Add_1Ux1U_2U_4_19_out1;
                              end
                           end
                           
                           default:                            begin
                              case (DC_Filter_Add_2Ux1U_2U_4_2346_out1) 

                                 2'd3:                                  begin
                                    s_reg_1604 <= 2'd0;
                                 end
                                 
                                 default:                                  begin
                                    s_reg_1604 <= DC_Filter_Add_2Ux1U_2U_4_2346_out1;
                                 end
                                 
                              endcase

                           end
                           
                        endcase

                     end
                     
                  endcase

               end
               
            endcase

         end

         // resource: mux_12bx2i0c
         // resource: regr_en_12
         always @(posedge i_clk)
          begin :drive_s_reg_1605
            case (stall1) 

               1'b1:                begin
               end
               
               1'b0:                begin
                  case (global_state1) 

                     10'd0514:                      begin
                        s_reg_1605 <= DC_Filter_Add_12Ux1U_12U_4_2334_out1;
                     end
                     
                     10'd0520, 10'd0521:                      begin
                        s_reg_1605 <= DC_Filter_Mul_9Ux4U_12U_4_12_out1;
                     end
                     
                  endcase

               end
               
            endcase

         end

         // resource: mux_2bx3i1c
         always @(s_reg_1598 or DC_Filter_Add_2Ux1U_2U_4_2340_out1 or gs_ctrl24)
          begin :drive_DC_Filter_Mul_2Ux2U_4U_4_9_in2
            case (gs_ctrl24) 

               2'd1:                begin
                  DC_Filter_Mul_2Ux2U_4U_4_9_in2 = 2'd0;
               end
               
               2'd2:                begin
                  case (DC_Filter_Add_2Ux1U_2U_4_2340_out1) 

                     2'd3:                      begin
                        DC_Filter_Mul_2Ux2U_4U_4_9_in2 = 2'd0;
                     end
                     
                     default:                      begin
                        DC_Filter_Mul_2Ux2U_4U_4_9_in2 = DC_Filter_Add_2Ux1U_2U_4_2340_out1;
                     end
                     
                  endcase

               end
               
               default:                begin
                  DC_Filter_Mul_2Ux2U_4U_4_9_in2 = s_reg_1598;
               end
               
            endcase

         end

         // resource: DC_Filter_Mul_2Ux2U_4U_4  instance: DC_Filter_Mul_2Ux2U_4U_4_9
         assign DC_Filter_Mul_2Ux2U_4U_4_9_out1 = {2'b00, DC_Filter_Mul_2Ux2U_4U_4_9_in2}*4'd03;

         // resource: mux_9bx4i1c
         always @(s_reg_1600 or s_reg_1602[8:0] or gs_ctrl25)
          begin :drive_DC_Filter_Add_9Ux1U_9U_4_10_in2
            case (gs_ctrl25) 

               2'd1:                begin
                  DC_Filter_Add_9Ux1U_9U_4_10_in2 = 9'd001;
               end
               
               2'd2:                begin
                  DC_Filter_Add_9Ux1U_9U_4_10_in2 = s_reg_1602[8:0];
               end
               
               2'd3:                begin
                  DC_Filter_Add_9Ux1U_9U_4_10_in2 = {1'b0, s_reg_1600[7:0]};
               end
               
               default:                begin
                  DC_Filter_Add_9Ux1U_9U_4_10_in2 = s_reg_1600;
               end
               
            endcase

         end

         // resource: DC_Filter_Add_9Ux1U_9U_4  instance: DC_Filter_Add_9Ux1U_9U_4_10
         assign DC_Filter_Add_9Ux1U_9U_4_10_out1 = DC_Filter_Add_9Ux1U_9U_4_10_in2 + 9'd001;

         // resource: mux_4bx5i1c
         always @(s_reg_1599 or s_reg_1600[3:0] or s_reg_1603 or DC_Filter_Mul_2Ux2U_4U_4_9_out1 or gs_ctrl26)
          begin :drive_DC_Filter_Add_4Ux2U_4U_4_11_in2
            case (gs_ctrl26) 

               3'd1:                begin
                  DC_Filter_Add_4Ux2U_4U_4_11_in2 = s_reg_1600[3:0];
               end
               
               3'd2:                begin
                  DC_Filter_Add_4Ux2U_4U_4_11_in2 = s_reg_1603;
               end
               
               3'd3:                begin
                  DC_Filter_Add_4Ux2U_4U_4_11_in2 = {2'b00, s_reg_1599};
               end
               
               3'd4:                begin
                  DC_Filter_Add_4Ux2U_4U_4_11_in2 = 4'd06;
               end
               
               default:                begin
                  DC_Filter_Add_4Ux2U_4U_4_11_in2 = DC_Filter_Mul_2Ux2U_4U_4_9_out1;
               end
               
            endcase

         end

         // resource: mux_2bx5i2c
         always @(s_reg_1599 or s_reg_1604 or gs_ctrl27)
          begin :drive_DC_Filter_Add_4Ux2U_4U_4_11_in1
            case (gs_ctrl27) 

               3'd1:                begin
                  DC_Filter_Add_4Ux2U_4U_4_11_in1 = s_reg_1604;
               end
               
               3'd2:                begin
                  DC_Filter_Add_4Ux2U_4U_4_11_in1 = {1'b0, s_reg_1599[0]};
               end
               
               3'd3:                begin
                  DC_Filter_Add_4Ux2U_4U_4_11_in1 = 2'd2;
               end
               
               3'd4:                begin
                  DC_Filter_Add_4Ux2U_4U_4_11_in1 = 2'd3;
               end
               
               default:                begin
                  DC_Filter_Add_4Ux2U_4U_4_11_in1 = s_reg_1599;
               end
               
            endcase

         end

         // resource: DC_Filter_Add_4Ux2U_4U_4  instance: DC_Filter_Add_4Ux2U_4U_4_11
         assign DC_Filter_Add_4Ux2U_4U_4_11_out1 = DC_Filter_Add_4Ux2U_4U_4_11_in2 + {2'b00, DC_Filter_Add_4Ux2U_4U_4_11_in1};

         // resource: mux_9bx2i1c
         always @(f1_array_rgb_out1 or gs_ctrl28)
          begin :drive_DC_Filter_Mul_9Ux4U_12U_4_12_in2
            if (gs_ctrl28) begin
               DC_Filter_Mul_9Ux4U_12U_4_12_in2 = {1'b0, f1_array_rgb_out1};
            end
            else begin
               DC_Filter_Mul_9Ux4U_12U_4_12_in2 = 9'd258;
            end
         end

         // resource: mux_4bx5i1c
         always @(DC_Filter_Add_4Ux2U_4U_4_11_out1 or DC_Filter_Add_2Ux1U_2U_4_72_out1 or mask1_out1 or gs_ctrl29)
          begin :drive_DC_Filter_Mul_9Ux4U_12U_4_12_in1
            case (gs_ctrl29) 

               3'd1:                begin
                  DC_Filter_Mul_9Ux4U_12U_4_12_in1 = 4'd01;
               end
               
               3'd2:                begin
                  DC_Filter_Mul_9Ux4U_12U_4_12_in1 = {1'b0, DC_Filter_Add_4Ux2U_4U_4_11_out1[2:0]};
               end
               
               3'd3:                begin
                  DC_Filter_Mul_9Ux4U_12U_4_12_in1 = {2'b00, DC_Filter_Add_2Ux1U_2U_4_72_out1};
               end
               
               3'd4:                begin
                  DC_Filter_Mul_9Ux4U_12U_4_12_in1 = mask1_out1;
               end
               
               default:                begin
                  DC_Filter_Mul_9Ux4U_12U_4_12_in1 = DC_Filter_Add_4Ux2U_4U_4_11_out1;
               end
               
            endcase

         end

         // resource: DC_Filter_Mul_9Ux4U_12U_4  instance: DC_Filter_Mul_9Ux4U_12U_4_12
         assign DC_Filter_Mul_9Ux4U_12U_4_12_out1 = {3'b000, DC_Filter_Mul_9Ux4U_12U_4_12_in2}*{8'b00000000, DC_Filter_Mul_9Ux4U_12U_4_12_in1};

         // resource: mux_12bx7i3c
         always @(s_reg_1602 or s_reg_1605 or DC_Filter_Mul_9Ux4U_12U_4_12_out1 or DC_Filter_N_Mux_12_3_2_4_2362_out1 or gs_ctrl30)
          begin :drive_DC_Filter_Add_12Ux12U_12U_4_13_in2
            case (gs_ctrl30) 

               3'd1:                begin
                  DC_Filter_Add_12Ux12U_12U_4_13_in2 = 12'd0516;
               end
               
               3'd2:                begin
                  DC_Filter_Add_12Ux12U_12U_4_13_in2 = 12'd1290;
               end
               
               3'd3:                begin
                  DC_Filter_Add_12Ux12U_12U_4_13_in2 = 12'd2064;
               end
               
               3'd4:                begin
                  DC_Filter_Add_12Ux12U_12U_4_13_in2 = {1'b0, s_reg_1602};
               end
               
               3'd5:                begin
                  DC_Filter_Add_12Ux12U_12U_4_13_in2 = s_reg_1605;
               end
               
               3'd6:                begin
                  DC_Filter_Add_12Ux12U_12U_4_13_in2 = DC_Filter_N_Mux_12_3_2_4_2362_out1;
               end
               
               default:                begin
                  DC_Filter_Add_12Ux12U_12U_4_13_in2 = DC_Filter_Mul_9Ux4U_12U_4_12_out1;
               end
               
            endcase

         end

         // resource: mux_12bx259i256c
         always @(s_reg_1600 or s_reg_1602[8:0] or DC_Filter_Mul_9Ux4U_12U_4_12_out1 or DC_Filter_Add_2Ux1U_2U_4_2340_out1 or gs_ctrl31)
          begin :drive_DC_Filter_Add_12Ux12U_12U_4_13_in1
            case (gs_ctrl31) 

               9'd001:                begin
                  DC_Filter_Add_12Ux12U_12U_4_13_in1 = 12'd0001;
               end
               
               9'd002:                begin
                  DC_Filter_Add_12Ux12U_12U_4_13_in1 = 12'd0002;
               end
               
               9'd003:                begin
                  DC_Filter_Add_12Ux12U_12U_4_13_in1 = 12'd0003;
               end
               
               9'd004:                begin
                  DC_Filter_Add_12Ux12U_12U_4_13_in1 = 12'd0004;
               end
               
               9'd005:                begin
                  DC_Filter_Add_12Ux12U_12U_4_13_in1 = 12'd0005;
               end
               
               9'd006:                begin
                  DC_Filter_Add_12Ux12U_12U_4_13_in1 = 12'd0006;
               end
               
               9'd007:                begin
                  DC_Filter_Add_12Ux12U_12U_4_13_in1 = 12'd0007;
               end
               
               9'd008:                begin
                  DC_Filter_Add_12Ux12U_12U_4_13_in1 = 12'd0008;
               end
               
               9'd009:                begin
                  DC_Filter_Add_12Ux12U_12U_4_13_in1 = 12'd0009;
               end
               
               9'd010:                begin
                  DC_Filter_Add_12Ux12U_12U_4_13_in1 = 12'd0010;
               end
               
               9'd011:                begin
                  DC_Filter_Add_12Ux12U_12U_4_13_in1 = 12'd0011;
               end
               
               9'd012:                begin
                  DC_Filter_Add_12Ux12U_12U_4_13_in1 = 12'd0012;
               end
               
               9'd013:                begin
                  DC_Filter_Add_12Ux12U_12U_4_13_in1 = 12'd0013;
               end
               
               9'd014:                begin
                  DC_Filter_Add_12Ux12U_12U_4_13_in1 = 12'd0014;
               end
               
               9'd015:                begin
                  DC_Filter_Add_12Ux12U_12U_4_13_in1 = 12'd0015;
               end
               
               9'd016:                begin
                  DC_Filter_Add_12Ux12U_12U_4_13_in1 = 12'd0016;
               end
               
               9'd017:                begin
                  DC_Filter_Add_12Ux12U_12U_4_13_in1 = 12'd0017;
               end
               
               9'd018:                begin
                  DC_Filter_Add_12Ux12U_12U_4_13_in1 = 12'd0018;
               end
               
               9'd019:                begin
                  DC_Filter_Add_12Ux12U_12U_4_13_in1 = 12'd0019;
               end
               
               9'd020:                begin
                  DC_Filter_Add_12Ux12U_12U_4_13_in1 = 12'd0020;
               end
               
               9'd021:                begin
                  DC_Filter_Add_12Ux12U_12U_4_13_in1 = 12'd0021;
               end
               
               9'd022:                begin
                  DC_Filter_Add_12Ux12U_12U_4_13_in1 = 12'd0022;
               end
               
               9'd023:                begin
                  DC_Filter_Add_12Ux12U_12U_4_13_in1 = 12'd0023;
               end
               
               9'd024:                begin
                  DC_Filter_Add_12Ux12U_12U_4_13_in1 = 12'd0024;
               end
               
               9'd025:                begin
                  DC_Filter_Add_12Ux12U_12U_4_13_in1 = 12'd0025;
               end
               
               9'd026:                begin
                  DC_Filter_Add_12Ux12U_12U_4_13_in1 = 12'd0026;
               end
               
               9'd027:                begin
                  DC_Filter_Add_12Ux12U_12U_4_13_in1 = 12'd0027;
               end
               
               9'd028:                begin
                  DC_Filter_Add_12Ux12U_12U_4_13_in1 = 12'd0028;
               end
               
               9'd029:                begin
                  DC_Filter_Add_12Ux12U_12U_4_13_in1 = 12'd0029;
               end
               
               9'd030:                begin
                  DC_Filter_Add_12Ux12U_12U_4_13_in1 = 12'd0030;
               end
               
               9'd031:                begin
                  DC_Filter_Add_12Ux12U_12U_4_13_in1 = 12'd0031;
               end
               
               9'd032:                begin
                  DC_Filter_Add_12Ux12U_12U_4_13_in1 = 12'd0032;
               end
               
               9'd033:                begin
                  DC_Filter_Add_12Ux12U_12U_4_13_in1 = 12'd0033;
               end
               
               9'd034:                begin
                  DC_Filter_Add_12Ux12U_12U_4_13_in1 = 12'd0034;
               end
               
               9'd035:                begin
                  DC_Filter_Add_12Ux12U_12U_4_13_in1 = 12'd0035;
               end
               
               9'd036:                begin
                  DC_Filter_Add_12Ux12U_12U_4_13_in1 = 12'd0036;
               end
               
               9'd037:                begin
                  DC_Filter_Add_12Ux12U_12U_4_13_in1 = 12'd0037;
               end
               
               9'd038:                begin
                  DC_Filter_Add_12Ux12U_12U_4_13_in1 = 12'd0038;
               end
               
               9'd039:                begin
                  DC_Filter_Add_12Ux12U_12U_4_13_in1 = 12'd0039;
               end
               
               9'd040:                begin
                  DC_Filter_Add_12Ux12U_12U_4_13_in1 = 12'd0040;
               end
               
               9'd041:                begin
                  DC_Filter_Add_12Ux12U_12U_4_13_in1 = 12'd0041;
               end
               
               9'd042:                begin
                  DC_Filter_Add_12Ux12U_12U_4_13_in1 = 12'd0042;
               end
               
               9'd043:                begin
                  DC_Filter_Add_12Ux12U_12U_4_13_in1 = 12'd0043;
               end
               
               9'd044:                begin
                  DC_Filter_Add_12Ux12U_12U_4_13_in1 = 12'd0044;
               end
               
               9'd045:                begin
                  DC_Filter_Add_12Ux12U_12U_4_13_in1 = 12'd0045;
               end
               
               9'd046:                begin
                  DC_Filter_Add_12Ux12U_12U_4_13_in1 = 12'd0046;
               end
               
               9'd047:                begin
                  DC_Filter_Add_12Ux12U_12U_4_13_in1 = 12'd0047;
               end
               
               9'd048:                begin
                  DC_Filter_Add_12Ux12U_12U_4_13_in1 = 12'd0048;
               end
               
               9'd049:                begin
                  DC_Filter_Add_12Ux12U_12U_4_13_in1 = 12'd0049;
               end
               
               9'd050:                begin
                  DC_Filter_Add_12Ux12U_12U_4_13_in1 = 12'd0050;
               end
               
               9'd051:                begin
                  DC_Filter_Add_12Ux12U_12U_4_13_in1 = 12'd0051;
               end
               
               9'd052:                begin
                  DC_Filter_Add_12Ux12U_12U_4_13_in1 = 12'd0052;
               end
               
               9'd053:                begin
                  DC_Filter_Add_12Ux12U_12U_4_13_in1 = 12'd0053;
               end
               
               9'd054:                begin
                  DC_Filter_Add_12Ux12U_12U_4_13_in1 = 12'd0054;
               end
               
               9'd055:                begin
                  DC_Filter_Add_12Ux12U_12U_4_13_in1 = 12'd0055;
               end
               
               9'd056:                begin
                  DC_Filter_Add_12Ux12U_12U_4_13_in1 = 12'd0056;
               end
               
               9'd057:                begin
                  DC_Filter_Add_12Ux12U_12U_4_13_in1 = 12'd0057;
               end
               
               9'd058:                begin
                  DC_Filter_Add_12Ux12U_12U_4_13_in1 = 12'd0058;
               end
               
               9'd059:                begin
                  DC_Filter_Add_12Ux12U_12U_4_13_in1 = 12'd0059;
               end
               
               9'd060:                begin
                  DC_Filter_Add_12Ux12U_12U_4_13_in1 = 12'd0060;
               end
               
               9'd061:                begin
                  DC_Filter_Add_12Ux12U_12U_4_13_in1 = 12'd0061;
               end
               
               9'd062:                begin
                  DC_Filter_Add_12Ux12U_12U_4_13_in1 = 12'd0062;
               end
               
               9'd063:                begin
                  DC_Filter_Add_12Ux12U_12U_4_13_in1 = 12'd0063;
               end
               
               9'd064:                begin
                  DC_Filter_Add_12Ux12U_12U_4_13_in1 = 12'd0064;
               end
               
               9'd065:                begin
                  DC_Filter_Add_12Ux12U_12U_4_13_in1 = 12'd0065;
               end
               
               9'd066:                begin
                  DC_Filter_Add_12Ux12U_12U_4_13_in1 = 12'd0066;
               end
               
               9'd067:                begin
                  DC_Filter_Add_12Ux12U_12U_4_13_in1 = 12'd0067;
               end
               
               9'd068:                begin
                  DC_Filter_Add_12Ux12U_12U_4_13_in1 = 12'd0068;
               end
               
               9'd069:                begin
                  DC_Filter_Add_12Ux12U_12U_4_13_in1 = 12'd0069;
               end
               
               9'd070:                begin
                  DC_Filter_Add_12Ux12U_12U_4_13_in1 = 12'd0070;
               end
               
               9'd071:                begin
                  DC_Filter_Add_12Ux12U_12U_4_13_in1 = 12'd0071;
               end
               
               9'd072:                begin
                  DC_Filter_Add_12Ux12U_12U_4_13_in1 = 12'd0072;
               end
               
               9'd073:                begin
                  DC_Filter_Add_12Ux12U_12U_4_13_in1 = 12'd0073;
               end
               
               9'd074:                begin
                  DC_Filter_Add_12Ux12U_12U_4_13_in1 = 12'd0074;
               end
               
               9'd075:                begin
                  DC_Filter_Add_12Ux12U_12U_4_13_in1 = 12'd0075;
               end
               
               9'd076:                begin
                  DC_Filter_Add_12Ux12U_12U_4_13_in1 = 12'd0076;
               end
               
               9'd077:                begin
                  DC_Filter_Add_12Ux12U_12U_4_13_in1 = 12'd0077;
               end
               
               9'd078:                begin
                  DC_Filter_Add_12Ux12U_12U_4_13_in1 = 12'd0078;
               end
               
               9'd079:                begin
                  DC_Filter_Add_12Ux12U_12U_4_13_in1 = 12'd0079;
               end
               
               9'd080:                begin
                  DC_Filter_Add_12Ux12U_12U_4_13_in1 = 12'd0080;
               end
               
               9'd081:                begin
                  DC_Filter_Add_12Ux12U_12U_4_13_in1 = 12'd0081;
               end
               
               9'd082:                begin
                  DC_Filter_Add_12Ux12U_12U_4_13_in1 = 12'd0082;
               end
               
               9'd083:                begin
                  DC_Filter_Add_12Ux12U_12U_4_13_in1 = 12'd0083;
               end
               
               9'd084:                begin
                  DC_Filter_Add_12Ux12U_12U_4_13_in1 = 12'd0084;
               end
               
               9'd085:                begin
                  DC_Filter_Add_12Ux12U_12U_4_13_in1 = 12'd0085;
               end
               
               9'd086:                begin
                  DC_Filter_Add_12Ux12U_12U_4_13_in1 = 12'd0086;
               end
               
               9'd087:                begin
                  DC_Filter_Add_12Ux12U_12U_4_13_in1 = 12'd0087;
               end
               
               9'd088:                begin
                  DC_Filter_Add_12Ux12U_12U_4_13_in1 = 12'd0088;
               end
               
               9'd089:                begin
                  DC_Filter_Add_12Ux12U_12U_4_13_in1 = 12'd0089;
               end
               
               9'd090:                begin
                  DC_Filter_Add_12Ux12U_12U_4_13_in1 = 12'd0090;
               end
               
               9'd091:                begin
                  DC_Filter_Add_12Ux12U_12U_4_13_in1 = 12'd0091;
               end
               
               9'd092:                begin
                  DC_Filter_Add_12Ux12U_12U_4_13_in1 = 12'd0092;
               end
               
               9'd093:                begin
                  DC_Filter_Add_12Ux12U_12U_4_13_in1 = 12'd0093;
               end
               
               9'd094:                begin
                  DC_Filter_Add_12Ux12U_12U_4_13_in1 = 12'd0094;
               end
               
               9'd095:                begin
                  DC_Filter_Add_12Ux12U_12U_4_13_in1 = 12'd0095;
               end
               
               9'd096:                begin
                  DC_Filter_Add_12Ux12U_12U_4_13_in1 = 12'd0096;
               end
               
               9'd097:                begin
                  DC_Filter_Add_12Ux12U_12U_4_13_in1 = 12'd0097;
               end
               
               9'd098:                begin
                  DC_Filter_Add_12Ux12U_12U_4_13_in1 = 12'd0098;
               end
               
               9'd099:                begin
                  DC_Filter_Add_12Ux12U_12U_4_13_in1 = 12'd0099;
               end
               
               9'd100:                begin
                  DC_Filter_Add_12Ux12U_12U_4_13_in1 = 12'd0100;
               end
               
               9'd101:                begin
                  DC_Filter_Add_12Ux12U_12U_4_13_in1 = 12'd0101;
               end
               
               9'd102:                begin
                  DC_Filter_Add_12Ux12U_12U_4_13_in1 = 12'd0102;
               end
               
               9'd103:                begin
                  DC_Filter_Add_12Ux12U_12U_4_13_in1 = 12'd0103;
               end
               
               9'd104:                begin
                  DC_Filter_Add_12Ux12U_12U_4_13_in1 = 12'd0104;
               end
               
               9'd105:                begin
                  DC_Filter_Add_12Ux12U_12U_4_13_in1 = 12'd0105;
               end
               
               9'd106:                begin
                  DC_Filter_Add_12Ux12U_12U_4_13_in1 = 12'd0106;
               end
               
               9'd107:                begin
                  DC_Filter_Add_12Ux12U_12U_4_13_in1 = 12'd0107;
               end
               
               9'd108:                begin
                  DC_Filter_Add_12Ux12U_12U_4_13_in1 = 12'd0108;
               end
               
               9'd109:                begin
                  DC_Filter_Add_12Ux12U_12U_4_13_in1 = 12'd0109;
               end
               
               9'd110:                begin
                  DC_Filter_Add_12Ux12U_12U_4_13_in1 = 12'd0110;
               end
               
               9'd111:                begin
                  DC_Filter_Add_12Ux12U_12U_4_13_in1 = 12'd0111;
               end
               
               9'd112:                begin
                  DC_Filter_Add_12Ux12U_12U_4_13_in1 = 12'd0112;
               end
               
               9'd113:                begin
                  DC_Filter_Add_12Ux12U_12U_4_13_in1 = 12'd0113;
               end
               
               9'd114:                begin
                  DC_Filter_Add_12Ux12U_12U_4_13_in1 = 12'd0114;
               end
               
               9'd115:                begin
                  DC_Filter_Add_12Ux12U_12U_4_13_in1 = 12'd0115;
               end
               
               9'd116:                begin
                  DC_Filter_Add_12Ux12U_12U_4_13_in1 = 12'd0116;
               end
               
               9'd117:                begin
                  DC_Filter_Add_12Ux12U_12U_4_13_in1 = 12'd0117;
               end
               
               9'd118:                begin
                  DC_Filter_Add_12Ux12U_12U_4_13_in1 = 12'd0118;
               end
               
               9'd119:                begin
                  DC_Filter_Add_12Ux12U_12U_4_13_in1 = 12'd0119;
               end
               
               9'd120:                begin
                  DC_Filter_Add_12Ux12U_12U_4_13_in1 = 12'd0120;
               end
               
               9'd121:                begin
                  DC_Filter_Add_12Ux12U_12U_4_13_in1 = 12'd0121;
               end
               
               9'd122:                begin
                  DC_Filter_Add_12Ux12U_12U_4_13_in1 = 12'd0122;
               end
               
               9'd123:                begin
                  DC_Filter_Add_12Ux12U_12U_4_13_in1 = 12'd0123;
               end
               
               9'd124:                begin
                  DC_Filter_Add_12Ux12U_12U_4_13_in1 = 12'd0124;
               end
               
               9'd125:                begin
                  DC_Filter_Add_12Ux12U_12U_4_13_in1 = 12'd0125;
               end
               
               9'd126:                begin
                  DC_Filter_Add_12Ux12U_12U_4_13_in1 = 12'd0126;
               end
               
               9'd127:                begin
                  DC_Filter_Add_12Ux12U_12U_4_13_in1 = 12'd0127;
               end
               
               9'd128:                begin
                  DC_Filter_Add_12Ux12U_12U_4_13_in1 = 12'd0128;
               end
               
               9'd129:                begin
                  DC_Filter_Add_12Ux12U_12U_4_13_in1 = 12'd0129;
               end
               
               9'd130:                begin
                  DC_Filter_Add_12Ux12U_12U_4_13_in1 = 12'd0130;
               end
               
               9'd131:                begin
                  DC_Filter_Add_12Ux12U_12U_4_13_in1 = 12'd0131;
               end
               
               9'd132:                begin
                  DC_Filter_Add_12Ux12U_12U_4_13_in1 = 12'd0132;
               end
               
               9'd133:                begin
                  DC_Filter_Add_12Ux12U_12U_4_13_in1 = 12'd0133;
               end
               
               9'd134:                begin
                  DC_Filter_Add_12Ux12U_12U_4_13_in1 = 12'd0134;
               end
               
               9'd135:                begin
                  DC_Filter_Add_12Ux12U_12U_4_13_in1 = 12'd0135;
               end
               
               9'd136:                begin
                  DC_Filter_Add_12Ux12U_12U_4_13_in1 = 12'd0136;
               end
               
               9'd137:                begin
                  DC_Filter_Add_12Ux12U_12U_4_13_in1 = 12'd0137;
               end
               
               9'd138:                begin
                  DC_Filter_Add_12Ux12U_12U_4_13_in1 = 12'd0138;
               end
               
               9'd139:                begin
                  DC_Filter_Add_12Ux12U_12U_4_13_in1 = 12'd0139;
               end
               
               9'd140:                begin
                  DC_Filter_Add_12Ux12U_12U_4_13_in1 = 12'd0140;
               end
               
               9'd141:                begin
                  DC_Filter_Add_12Ux12U_12U_4_13_in1 = 12'd0141;
               end
               
               9'd142:                begin
                  DC_Filter_Add_12Ux12U_12U_4_13_in1 = 12'd0142;
               end
               
               9'd143:                begin
                  DC_Filter_Add_12Ux12U_12U_4_13_in1 = 12'd0143;
               end
               
               9'd144:                begin
                  DC_Filter_Add_12Ux12U_12U_4_13_in1 = 12'd0144;
               end
               
               9'd145:                begin
                  DC_Filter_Add_12Ux12U_12U_4_13_in1 = 12'd0145;
               end
               
               9'd146:                begin
                  DC_Filter_Add_12Ux12U_12U_4_13_in1 = 12'd0146;
               end
               
               9'd147:                begin
                  DC_Filter_Add_12Ux12U_12U_4_13_in1 = 12'd0147;
               end
               
               9'd148:                begin
                  DC_Filter_Add_12Ux12U_12U_4_13_in1 = 12'd0148;
               end
               
               9'd149:                begin
                  DC_Filter_Add_12Ux12U_12U_4_13_in1 = 12'd0149;
               end
               
               9'd150:                begin
                  DC_Filter_Add_12Ux12U_12U_4_13_in1 = 12'd0150;
               end
               
               9'd151:                begin
                  DC_Filter_Add_12Ux12U_12U_4_13_in1 = 12'd0151;
               end
               
               9'd152:                begin
                  DC_Filter_Add_12Ux12U_12U_4_13_in1 = 12'd0152;
               end
               
               9'd153:                begin
                  DC_Filter_Add_12Ux12U_12U_4_13_in1 = 12'd0153;
               end
               
               9'd154:                begin
                  DC_Filter_Add_12Ux12U_12U_4_13_in1 = 12'd0154;
               end
               
               9'd155:                begin
                  DC_Filter_Add_12Ux12U_12U_4_13_in1 = 12'd0155;
               end
               
               9'd156:                begin
                  DC_Filter_Add_12Ux12U_12U_4_13_in1 = 12'd0156;
               end
               
               9'd157:                begin
                  DC_Filter_Add_12Ux12U_12U_4_13_in1 = 12'd0157;
               end
               
               9'd158:                begin
                  DC_Filter_Add_12Ux12U_12U_4_13_in1 = 12'd0158;
               end
               
               9'd159:                begin
                  DC_Filter_Add_12Ux12U_12U_4_13_in1 = 12'd0159;
               end
               
               9'd160:                begin
                  DC_Filter_Add_12Ux12U_12U_4_13_in1 = 12'd0160;
               end
               
               9'd161:                begin
                  DC_Filter_Add_12Ux12U_12U_4_13_in1 = 12'd0161;
               end
               
               9'd162:                begin
                  DC_Filter_Add_12Ux12U_12U_4_13_in1 = 12'd0162;
               end
               
               9'd163:                begin
                  DC_Filter_Add_12Ux12U_12U_4_13_in1 = 12'd0163;
               end
               
               9'd164:                begin
                  DC_Filter_Add_12Ux12U_12U_4_13_in1 = 12'd0164;
               end
               
               9'd165:                begin
                  DC_Filter_Add_12Ux12U_12U_4_13_in1 = 12'd0165;
               end
               
               9'd166:                begin
                  DC_Filter_Add_12Ux12U_12U_4_13_in1 = 12'd0166;
               end
               
               9'd167:                begin
                  DC_Filter_Add_12Ux12U_12U_4_13_in1 = 12'd0167;
               end
               
               9'd168:                begin
                  DC_Filter_Add_12Ux12U_12U_4_13_in1 = 12'd0168;
               end
               
               9'd169:                begin
                  DC_Filter_Add_12Ux12U_12U_4_13_in1 = 12'd0169;
               end
               
               9'd170:                begin
                  DC_Filter_Add_12Ux12U_12U_4_13_in1 = 12'd0170;
               end
               
               9'd171:                begin
                  DC_Filter_Add_12Ux12U_12U_4_13_in1 = 12'd0171;
               end
               
               9'd172:                begin
                  DC_Filter_Add_12Ux12U_12U_4_13_in1 = 12'd0172;
               end
               
               9'd173:                begin
                  DC_Filter_Add_12Ux12U_12U_4_13_in1 = 12'd0173;
               end
               
               9'd174:                begin
                  DC_Filter_Add_12Ux12U_12U_4_13_in1 = 12'd0174;
               end
               
               9'd175:                begin
                  DC_Filter_Add_12Ux12U_12U_4_13_in1 = 12'd0175;
               end
               
               9'd176:                begin
                  DC_Filter_Add_12Ux12U_12U_4_13_in1 = 12'd0176;
               end
               
               9'd177:                begin
                  DC_Filter_Add_12Ux12U_12U_4_13_in1 = 12'd0177;
               end
               
               9'd178:                begin
                  DC_Filter_Add_12Ux12U_12U_4_13_in1 = 12'd0178;
               end
               
               9'd179:                begin
                  DC_Filter_Add_12Ux12U_12U_4_13_in1 = 12'd0179;
               end
               
               9'd180:                begin
                  DC_Filter_Add_12Ux12U_12U_4_13_in1 = 12'd0180;
               end
               
               9'd181:                begin
                  DC_Filter_Add_12Ux12U_12U_4_13_in1 = 12'd0181;
               end
               
               9'd182:                begin
                  DC_Filter_Add_12Ux12U_12U_4_13_in1 = 12'd0182;
               end
               
               9'd183:                begin
                  DC_Filter_Add_12Ux12U_12U_4_13_in1 = 12'd0183;
               end
               
               9'd184:                begin
                  DC_Filter_Add_12Ux12U_12U_4_13_in1 = 12'd0184;
               end
               
               9'd185:                begin
                  DC_Filter_Add_12Ux12U_12U_4_13_in1 = 12'd0185;
               end
               
               9'd186:                begin
                  DC_Filter_Add_12Ux12U_12U_4_13_in1 = 12'd0186;
               end
               
               9'd187:                begin
                  DC_Filter_Add_12Ux12U_12U_4_13_in1 = 12'd0187;
               end
               
               9'd188:                begin
                  DC_Filter_Add_12Ux12U_12U_4_13_in1 = 12'd0188;
               end
               
               9'd189:                begin
                  DC_Filter_Add_12Ux12U_12U_4_13_in1 = 12'd0189;
               end
               
               9'd190:                begin
                  DC_Filter_Add_12Ux12U_12U_4_13_in1 = 12'd0190;
               end
               
               9'd191:                begin
                  DC_Filter_Add_12Ux12U_12U_4_13_in1 = 12'd0191;
               end
               
               9'd192:                begin
                  DC_Filter_Add_12Ux12U_12U_4_13_in1 = 12'd0192;
               end
               
               9'd193:                begin
                  DC_Filter_Add_12Ux12U_12U_4_13_in1 = 12'd0193;
               end
               
               9'd194:                begin
                  DC_Filter_Add_12Ux12U_12U_4_13_in1 = 12'd0194;
               end
               
               9'd195:                begin
                  DC_Filter_Add_12Ux12U_12U_4_13_in1 = 12'd0195;
               end
               
               9'd196:                begin
                  DC_Filter_Add_12Ux12U_12U_4_13_in1 = 12'd0196;
               end
               
               9'd197:                begin
                  DC_Filter_Add_12Ux12U_12U_4_13_in1 = 12'd0197;
               end
               
               9'd198:                begin
                  DC_Filter_Add_12Ux12U_12U_4_13_in1 = 12'd0198;
               end
               
               9'd199:                begin
                  DC_Filter_Add_12Ux12U_12U_4_13_in1 = 12'd0199;
               end
               
               9'd200:                begin
                  DC_Filter_Add_12Ux12U_12U_4_13_in1 = 12'd0200;
               end
               
               9'd201:                begin
                  DC_Filter_Add_12Ux12U_12U_4_13_in1 = 12'd0201;
               end
               
               9'd202:                begin
                  DC_Filter_Add_12Ux12U_12U_4_13_in1 = 12'd0202;
               end
               
               9'd203:                begin
                  DC_Filter_Add_12Ux12U_12U_4_13_in1 = 12'd0203;
               end
               
               9'd204:                begin
                  DC_Filter_Add_12Ux12U_12U_4_13_in1 = 12'd0204;
               end
               
               9'd205:                begin
                  DC_Filter_Add_12Ux12U_12U_4_13_in1 = 12'd0205;
               end
               
               9'd206:                begin
                  DC_Filter_Add_12Ux12U_12U_4_13_in1 = 12'd0206;
               end
               
               9'd207:                begin
                  DC_Filter_Add_12Ux12U_12U_4_13_in1 = 12'd0207;
               end
               
               9'd208:                begin
                  DC_Filter_Add_12Ux12U_12U_4_13_in1 = 12'd0208;
               end
               
               9'd209:                begin
                  DC_Filter_Add_12Ux12U_12U_4_13_in1 = 12'd0209;
               end
               
               9'd210:                begin
                  DC_Filter_Add_12Ux12U_12U_4_13_in1 = 12'd0210;
               end
               
               9'd211:                begin
                  DC_Filter_Add_12Ux12U_12U_4_13_in1 = 12'd0211;
               end
               
               9'd212:                begin
                  DC_Filter_Add_12Ux12U_12U_4_13_in1 = 12'd0212;
               end
               
               9'd213:                begin
                  DC_Filter_Add_12Ux12U_12U_4_13_in1 = 12'd0213;
               end
               
               9'd214:                begin
                  DC_Filter_Add_12Ux12U_12U_4_13_in1 = 12'd0214;
               end
               
               9'd215:                begin
                  DC_Filter_Add_12Ux12U_12U_4_13_in1 = 12'd0215;
               end
               
               9'd216:                begin
                  DC_Filter_Add_12Ux12U_12U_4_13_in1 = 12'd0216;
               end
               
               9'd217:                begin
                  DC_Filter_Add_12Ux12U_12U_4_13_in1 = 12'd0217;
               end
               
               9'd218:                begin
                  DC_Filter_Add_12Ux12U_12U_4_13_in1 = 12'd0218;
               end
               
               9'd219:                begin
                  DC_Filter_Add_12Ux12U_12U_4_13_in1 = 12'd0219;
               end
               
               9'd220:                begin
                  DC_Filter_Add_12Ux12U_12U_4_13_in1 = 12'd0220;
               end
               
               9'd221:                begin
                  DC_Filter_Add_12Ux12U_12U_4_13_in1 = 12'd0221;
               end
               
               9'd222:                begin
                  DC_Filter_Add_12Ux12U_12U_4_13_in1 = 12'd0222;
               end
               
               9'd223:                begin
                  DC_Filter_Add_12Ux12U_12U_4_13_in1 = 12'd0223;
               end
               
               9'd224:                begin
                  DC_Filter_Add_12Ux12U_12U_4_13_in1 = 12'd0224;
               end
               
               9'd225:                begin
                  DC_Filter_Add_12Ux12U_12U_4_13_in1 = 12'd0225;
               end
               
               9'd226:                begin
                  DC_Filter_Add_12Ux12U_12U_4_13_in1 = 12'd0226;
               end
               
               9'd227:                begin
                  DC_Filter_Add_12Ux12U_12U_4_13_in1 = 12'd0227;
               end
               
               9'd228:                begin
                  DC_Filter_Add_12Ux12U_12U_4_13_in1 = 12'd0228;
               end
               
               9'd229:                begin
                  DC_Filter_Add_12Ux12U_12U_4_13_in1 = 12'd0229;
               end
               
               9'd230:                begin
                  DC_Filter_Add_12Ux12U_12U_4_13_in1 = 12'd0230;
               end
               
               9'd231:                begin
                  DC_Filter_Add_12Ux12U_12U_4_13_in1 = 12'd0231;
               end
               
               9'd232:                begin
                  DC_Filter_Add_12Ux12U_12U_4_13_in1 = 12'd0232;
               end
               
               9'd233:                begin
                  DC_Filter_Add_12Ux12U_12U_4_13_in1 = 12'd0233;
               end
               
               9'd234:                begin
                  DC_Filter_Add_12Ux12U_12U_4_13_in1 = 12'd0234;
               end
               
               9'd235:                begin
                  DC_Filter_Add_12Ux12U_12U_4_13_in1 = 12'd0235;
               end
               
               9'd236:                begin
                  DC_Filter_Add_12Ux12U_12U_4_13_in1 = 12'd0236;
               end
               
               9'd237:                begin
                  DC_Filter_Add_12Ux12U_12U_4_13_in1 = 12'd0237;
               end
               
               9'd238:                begin
                  DC_Filter_Add_12Ux12U_12U_4_13_in1 = 12'd0238;
               end
               
               9'd239:                begin
                  DC_Filter_Add_12Ux12U_12U_4_13_in1 = 12'd0239;
               end
               
               9'd240:                begin
                  DC_Filter_Add_12Ux12U_12U_4_13_in1 = 12'd0240;
               end
               
               9'd241:                begin
                  DC_Filter_Add_12Ux12U_12U_4_13_in1 = 12'd0241;
               end
               
               9'd242:                begin
                  DC_Filter_Add_12Ux12U_12U_4_13_in1 = 12'd0242;
               end
               
               9'd243:                begin
                  DC_Filter_Add_12Ux12U_12U_4_13_in1 = 12'd0243;
               end
               
               9'd244:                begin
                  DC_Filter_Add_12Ux12U_12U_4_13_in1 = 12'd0244;
               end
               
               9'd245:                begin
                  DC_Filter_Add_12Ux12U_12U_4_13_in1 = 12'd0245;
               end
               
               9'd246:                begin
                  DC_Filter_Add_12Ux12U_12U_4_13_in1 = 12'd0246;
               end
               
               9'd247:                begin
                  DC_Filter_Add_12Ux12U_12U_4_13_in1 = 12'd0247;
               end
               
               9'd248:                begin
                  DC_Filter_Add_12Ux12U_12U_4_13_in1 = 12'd0248;
               end
               
               9'd249:                begin
                  DC_Filter_Add_12Ux12U_12U_4_13_in1 = 12'd0249;
               end
               
               9'd250:                begin
                  DC_Filter_Add_12Ux12U_12U_4_13_in1 = 12'd0250;
               end
               
               9'd251:                begin
                  DC_Filter_Add_12Ux12U_12U_4_13_in1 = 12'd0251;
               end
               
               9'd252:                begin
                  DC_Filter_Add_12Ux12U_12U_4_13_in1 = 12'd0252;
               end
               
               9'd253:                begin
                  DC_Filter_Add_12Ux12U_12U_4_13_in1 = 12'd0253;
               end
               
               9'd254:                begin
                  DC_Filter_Add_12Ux12U_12U_4_13_in1 = 12'd0254;
               end
               
               9'd255:                begin
                  DC_Filter_Add_12Ux12U_12U_4_13_in1 = 12'd0255;
               end
               
               9'd256:                begin
                  DC_Filter_Add_12Ux12U_12U_4_13_in1 = 12'd0256;
               end
               
               9'd257:                begin
                  case (DC_Filter_Add_2Ux1U_2U_4_2340_out1) 

                     2'd3:                      begin
                        DC_Filter_Add_12Ux12U_12U_4_13_in1 = {3'b000, s_reg_1602[8:0]};
                     end
                     
                     default:                      begin
                        DC_Filter_Add_12Ux12U_12U_4_13_in1 = {3'b000, s_reg_1600};
                     end
                     
                  endcase

               end
               
               9'd258:                begin
                  DC_Filter_Add_12Ux12U_12U_4_13_in1 = DC_Filter_Mul_9Ux4U_12U_4_12_out1;
               end
               
               default:                begin
                  DC_Filter_Add_12Ux12U_12U_4_13_in1 = {3'b000, s_reg_1600};
               end
               
            endcase

         end

         // resource: DC_Filter_Add_12Ux12U_12U_4  instance: DC_Filter_Add_12Ux12U_12U_4_13
         assign DC_Filter_Add_12Ux12U_12U_4_13_out1 = DC_Filter_Add_12Ux12U_12U_4_13_in2 + DC_Filter_Add_12Ux12U_12U_4_13_in1;

         // resource: mux_12bx3i0c
         always @(s_reg_1602[8:0] or DC_Filter_Add_12Ux12U_12U_4_13_out1 or DC_Filter_LessThan_12Ux9U_1U_4_2333_out1 or DC_Filter_Add_2Ux1U_2U_4_2340_out1 or DC_Filter_Add_12Ux9U_12U_4_2359_out1 or gs_ctrl32)
          begin :drive_f1_array_rgb_in1
            case (gs_ctrl32) 

               3'd1:                begin
                  if (DC_Filter_LessThan_12Ux9U_1U_4_2333_out1) begin
                     f1_array_rgb_in1 = DC_Filter_Add_12Ux12U_12U_4_13_out1;
                  end
                  else begin
                     f1_array_rgb_in1 = DC_Filter_Add_12Ux9U_12U_4_2359_out1;
                  end
               end
               
               3'd2:                begin
                  case (DC_Filter_Add_2Ux1U_2U_4_2340_out1) 

                     2'd3:                      begin
                        /* state533 */
                        case (s_reg_1602[8:0]) 

                           9'd257:                            begin
                              f1_array_rgb_in1 = DC_Filter_Add_12Ux9U_12U_4_2359_out1;
                           end
                           
                           default:                            begin
                              f1_array_rgb_in1 = DC_Filter_Add_12Ux12U_12U_4_13_out1;
                           end
                           
                        endcase

                     end
                     
                     default:                      begin
                        f1_array_rgb_in1 = DC_Filter_Add_12Ux12U_12U_4_13_out1;
                     end
                     
                  endcase

               end
               
               3'd3:                begin
                  f1_array_rgb_in1 = {1'b0, DC_Filter_Add_12Ux12U_12U_4_13_out1[10:0]};
               end
               
               3'd4:                begin
                  f1_array_rgb_in1 = DC_Filter_Add_12Ux9U_12U_4_2359_out1;
               end
               
               default:                begin
                  f1_array_rgb_in1 = DC_Filter_Add_12Ux12U_12U_4_13_out1;
               end
               
            endcase

         end

         // resource: mux_8bx5i1c
         always @(o_rgb_inside_data[23:8] or i_rgb_data[7:0] or f1_array_rgb_out1 or gs_ctrl33)
          begin :drive_f1_array_rgb_DIN
            case (gs_ctrl33) 

               3'd1:                begin
                  f1_array_rgb_DIN = f1_array_rgb_out1;
               end
               
               3'd2:                begin
                  f1_array_rgb_DIN = i_rgb_data[7:0];
               end
               
               3'd3:                begin
                  f1_array_rgb_DIN = o_rgb_inside_data[15:8];
               end
               
               3'd4:                begin
                  f1_array_rgb_DIN = o_rgb_inside_data[23:16];
               end
               
               default:                begin
                  f1_array_rgb_DIN = 8'd000;
               end
               
            endcase

         end

         // resource: mux_1bx2i2c
         always @(stall1 or s_reg_1600 or s_reg_1602[8:0] or DC_Filter_Add_9Ux1U_9U_4_10_out1 or DC_Filter_Add_1Ux1U_2U_4_2120_out1 or DC_Filter_Add_2Ux1U_2U_4_72_out1 or DC_Filter_LessThan_12Ux9U_1U_4_2331_out1 or DC_Filter_Add_2Ux1U_2U_4_2332_out1 or DC_Filter_LessThan_12Ux9U_1U_4_2333_out1 or DC_Filter_Add_2Ux1U_2U_4_2340_out1 or DC_Filter_Add_2Ux1U_2U_4_2346_out1 or DC_Filter_Add_2Ux1U_2U_4_2360_out1 or DC_Filter_Add_2Ux1U_2U_4_2370_out1 or DC_Filter_Add_2Ux1U_2U_4_2371_out1 or gs_ctrl34)
          begin :drive_f1_array_rgb_CE
            if (stall1) begin
               f1_array_rgb_CE = 1'b0;
            end
            else begin
               case (gs_ctrl34) 

                  4'd01:                   begin
                     f1_array_rgb_CE = 1'b1;
                  end
                  
                  4'd02:                   begin
                     if (2'd2 == DC_Filter_Add_1Ux1U_2U_4_2120_out1 && (2'd3 == DC_Filter_Add_2Ux1U_2U_4_2332_out1 && !DC_Filter_LessThan_12Ux9U_1U_4_2331_out1)) begin
                        if (DC_Filter_LessThan_12Ux9U_1U_4_2333_out1) begin
                           f1_array_rgb_CE = 1'b1;
                        end
                        else begin
                           if (2'd3 == DC_Filter_Add_2Ux1U_2U_4_2346_out1) begin
                              f1_array_rgb_CE = 1'b1;
                           end
                           else begin
                              f1_array_rgb_CE = 1'b0;
                           end
                        end
                     end
                     else begin
                        f1_array_rgb_CE = 1'b0;
                     end
                  end
                  
                  4'd03:                   begin
                     case (DC_Filter_Add_2Ux1U_2U_4_2340_out1) 

                        2'd3:                         begin
                           /* state533 */
                           case (s_reg_1602[8:0]) 

                              9'd257:                               begin
                                 if (2'd3 == DC_Filter_Add_2Ux1U_2U_4_2346_out1) begin
                                    f1_array_rgb_CE = 1'b1;
                                 end
                                 else begin
                                    f1_array_rgb_CE = 1'b0;
                                 end
                              end
                              
                              default:                               begin
                                 f1_array_rgb_CE = 1'b1;
                              end
                              
                           endcase

                        end
                        
                        default:                         begin
                           f1_array_rgb_CE = 1'b1;
                        end
                        
                     endcase

                  end
                  
                  4'd04:                   begin
                     if (9'd257 == s_reg_1600 && 2'd3 == DC_Filter_Add_2Ux1U_2U_4_2346_out1) begin
                        f1_array_rgb_CE = 1'b1;
                     end
                     else begin
                        f1_array_rgb_CE = 1'b0;
                     end
                  end
                  
                  4'd05:                   begin
                     if (9'd257 == s_reg_1600 && (2'd3 == DC_Filter_Add_2Ux1U_2U_4_72_out1 && 2'd3 == DC_Filter_Add_2Ux1U_2U_4_2346_out1)) begin
                        f1_array_rgb_CE = 1'b1;
                     end
                     else begin
                        f1_array_rgb_CE = 1'b0;
                     end
                  end
                  
                  4'd06:                   begin
                     if (2'd3 == DC_Filter_Add_2Ux1U_2U_4_2346_out1) begin
                        f1_array_rgb_CE = 1'b1;
                     end
                     else begin
                        f1_array_rgb_CE = 1'b0;
                     end
                  end
                  
                  4'd07:                   begin
                     case (DC_Filter_Add_2Ux1U_2U_4_2360_out1) 

                        2'd3:                         begin
                           case (DC_Filter_Add_2Ux1U_2U_4_2370_out1) 

                              2'd3:                               begin
                                 if (2'd3 != DC_Filter_Add_2Ux1U_2U_4_2371_out1) begin
                                    f1_array_rgb_CE = 1'b1;
                                 end
                                 else begin
                                    f1_array_rgb_CE = 1'b0;
                                 end
                              end
                              
                              default:                               begin
                                 f1_array_rgb_CE = 1'b1;
                              end
                              
                           endcase

                        end
                        
                        default:                         begin
                           f1_array_rgb_CE = 1'b1;
                        end
                        
                     endcase

                  end
                  
                  4'd08:                   begin
                     if (9'd256 != DC_Filter_Add_9Ux1U_9U_4_10_out1 && 2'd3 == DC_Filter_Add_2Ux1U_2U_4_2346_out1) begin
                        f1_array_rgb_CE = 1'b1;
                     end
                     else begin
                        f1_array_rgb_CE = 1'b0;
                     end
                  end
                  
                  default:                   begin
                     f1_array_rgb_CE = 1'b0;
                  end
                  
               endcase

            end
         end

         // resource: mux_1bx2i2c
         always @(stall1 or s_reg_1602[8:0] or DC_Filter_Add_1Ux1U_2U_4_2120_out1 or DC_Filter_LessThan_12Ux9U_1U_4_2331_out1 or DC_Filter_Add_2Ux1U_2U_4_2332_out1 or DC_Filter_LessThan_12Ux9U_1U_4_2333_out1 or DC_Filter_Add_2Ux1U_2U_4_2340_out1 or gs_ctrl35)
          begin :drive_f1_array_rgb_RW
            if (stall1) begin
               f1_array_rgb_RW = 1'b0;
            end
            else begin
               case (gs_ctrl35) 

                  2'd1:                   begin
                     f1_array_rgb_RW = 1'b1;
                  end
                  
                  2'd2:                   begin
                     if (2'd2 == DC_Filter_Add_1Ux1U_2U_4_2120_out1 && (2'd3 == DC_Filter_Add_2Ux1U_2U_4_2332_out1 && !DC_Filter_LessThan_12Ux9U_1U_4_2331_out1)) begin
                        if (DC_Filter_LessThan_12Ux9U_1U_4_2333_out1) begin
                           f1_array_rgb_RW = 1'b1;
                        end
                        else begin
                           f1_array_rgb_RW = 1'b0;
                        end
                     end
                     else begin
                        f1_array_rgb_RW = 1'b0;
                     end
                  end
                  
                  2'd3:                   begin
                     case (DC_Filter_Add_2Ux1U_2U_4_2340_out1) 

                        2'd3:                         begin
                           /* state533 */
                           case (s_reg_1602[8:0]) 

                              9'd257:                               begin
                                 f1_array_rgb_RW = 1'b0;
                              end
                              
                              default:                               begin
                                 f1_array_rgb_RW = 1'b1;
                              end
                              
                           endcase

                        end
                        
                        default:                         begin
                           f1_array_rgb_RW = 1'b1;
                        end
                        
                     endcase

                  end
                  
                  default:                   begin
                     f1_array_rgb_RW = 1'b0;
                  end
                  
               endcase

            end
         end

         // resource: DC_Filter_Add_2Ux1U_2U_4  instance: DC_Filter_Add_2Ux1U_2U_4_14
         assign DC_Filter_Add_2Ux1U_2U_4_14_out1 = s_reg_1598 + 2'd1;

         // resource: DC_Filter_Add_2Ux1U_2U_4  instance: DC_Filter_Add_2Ux1U_2U_4_15
         assign DC_Filter_Add_2Ux1U_2U_4_15_out1 = s_reg_1599 + 2'd1;

         // resource: mux_2bx2i1c
         always @(DC_Filter_Add_2Ux1U_2U_4_2332_out1 or gs_ctrl36)
          begin :drive_DC_Filter_Mul_2Ux2U_4U_4_16_in2
            if (gs_ctrl36) begin
               DC_Filter_Mul_2Ux2U_4U_4_16_in2 = 2'd0;
            end
            else begin
               DC_Filter_Mul_2Ux2U_4U_4_16_in2 = DC_Filter_Add_2Ux1U_2U_4_2332_out1;
            end
         end

         // resource: DC_Filter_Mul_2Ux2U_4U_4  instance: DC_Filter_Mul_2Ux2U_4U_4_16
         assign DC_Filter_Mul_2Ux2U_4U_4_16_out1 = {2'b00, DC_Filter_Mul_2Ux2U_4U_4_16_in2}*4'd03;

         // resource: mux_1bx2i1c
         always @(DC_Filter_Add_1Ux1U_2U_4_2120_out1 or gs_ctrl36)
          begin :drive_DC_Filter_Add_1Ux1U_2U_4_19_in2
            if (gs_ctrl36) begin
               DC_Filter_Add_1Ux1U_2U_4_19_in2 = 1'b0;
            end
            else begin
               case (DC_Filter_Add_1Ux1U_2U_4_2120_out1) 

                  2'd2:                   begin
                     DC_Filter_Add_1Ux1U_2U_4_19_in2 = 1'b0;
                  end
                  
                  default:                   begin
                     DC_Filter_Add_1Ux1U_2U_4_19_in2 = DC_Filter_Add_1Ux1U_2U_4_2120_out1[0];
                  end
                  
               endcase

            end
         end

         // resource: DC_Filter_Add_1Ux1U_2U_4  instance: DC_Filter_Add_1Ux1U_2U_4_19
         assign DC_Filter_Add_1Ux1U_2U_4_19_out1 = {1'b0, DC_Filter_Add_1Ux1U_2U_4_19_in2} + 2'd1;

         // resource: DC_Filter_Mul_2Ux2U_4U_4  instance: DC_Filter_Mul_2Ux2U_4U_4_2149
         assign DC_Filter_Mul_2Ux2U_4U_4_2149_out1 = {2'b00, s_reg_1598}*4'd03;

         // resource: DC_Filter_Add_1Ux1U_2U_4  instance: DC_Filter_Add_1Ux1U_2U_4_2120
         assign DC_Filter_Add_1Ux1U_2U_4_2120_out1 = {1'b0, s_reg_1599[0]} + 2'd1;

         // resource: DC_Filter_Add_2Ux1U_2U_4  instance: DC_Filter_Add_2Ux1U_2U_4_72
         assign DC_Filter_Add_2Ux1U_2U_4_72_out1 = s_reg_1599 + 2'd1;

         // resource: DC_Filter_LessThan_12Ux9U_1U_4  instance: DC_Filter_LessThan_12Ux9U_1U_4_2331
         assign DC_Filter_LessThan_12Ux9U_1U_4_2331_out1 = s_reg_1601 < 12'd0257;

         // resource: DC_Filter_Add_2Ux1U_2U_4  instance: DC_Filter_Add_2Ux1U_2U_4_2332
         assign DC_Filter_Add_2Ux1U_2U_4_2332_out1 = s_reg_1598 + 2'd1;

         // resource: DC_Filter_LessThan_12Ux9U_1U_4  instance: DC_Filter_LessThan_12Ux9U_1U_4_2333
         assign DC_Filter_LessThan_12Ux9U_1U_4_2333_out1 = s_reg_1601 < 12'd0258;

         // resource: DC_Filter_Add_12Ux1U_12U_4  instance: DC_Filter_Add_12Ux1U_12U_4_2334
         assign DC_Filter_Add_12Ux1U_12U_4_2334_out1 = s_reg_1601 + 12'd0001;

         // resource: DC_Filter_Add_2Ux1U_2U_4  instance: DC_Filter_Add_2Ux1U_2U_4_2340
         assign DC_Filter_Add_2Ux1U_2U_4_2340_out1 = s_reg_1599 + 2'd1;

         // resource: mux_2bx2i1c
         always @(s_reg_1604 or gs_ctrl38)
          begin :drive_DC_Filter_Add_2Ux1U_2U_4_2346_in2
            if (gs_ctrl38) begin
               DC_Filter_Add_2Ux1U_2U_4_2346_in2 = s_reg_1604;
            end
            else begin
               DC_Filter_Add_2Ux1U_2U_4_2346_in2 = 2'd0;
            end
         end

         // resource: DC_Filter_Add_2Ux1U_2U_4  instance: DC_Filter_Add_2Ux1U_2U_4_2346
         assign DC_Filter_Add_2Ux1U_2U_4_2346_out1 = DC_Filter_Add_2Ux1U_2U_4_2346_in2 + 2'd1;

         // resource: mux_2bx2i1c
         always @(s_reg_1604 or gs_ctrl39)
          begin :drive_DC_Filter_Equal_2Ux2U_1U_4_2347_in2
            if (gs_ctrl39) begin
               DC_Filter_Equal_2Ux2U_1U_4_2347_in2 = s_reg_1604;
            end
            else begin
               DC_Filter_Equal_2Ux2U_1U_4_2347_in2 = 2'd0;
            end
         end

         // resource: DC_Filter_Equal_2Ux2U_1U_4  instance: DC_Filter_Equal_2Ux2U_1U_4_2347
         assign DC_Filter_Equal_2Ux2U_1U_4_2347_out1 = DC_Filter_Equal_2Ux2U_1U_4_2347_in2 == 2'd2;

         // resource: DC_Filter_Equal_2Ux1U_1U_4  instance: DC_Filter_Equal_2Ux1U_1U_4_2348
         assign DC_Filter_Equal_2Ux1U_1U_4_2348_out1 = DC_Filter_Add_2Ux1U_2U_4_2346_in2 == 2'd1;

         // resource: DC_Filter_OrReduction_2U_1U_4  instance: DC_Filter_OrReduction_2U_1U_4_2349
         assign DC_Filter_OrReduction_2U_1U_4_2349_out1 = (|DC_Filter_Add_2Ux1U_2U_4_2346_in2);

         // resource: DC_Filter_N_Mux_12_2_0_4
         always @(s_reg_1595 or DC_Filter_Equal_2Ux2U_1U_4_2347_out1)
          begin :DC_Filter_N_Mux_12_2_0_4_2350
            if (DC_Filter_Equal_2Ux2U_1U_4_2347_out1) begin
               DC_Filter_N_Mux_12_2_0_4_2350_out1 = 12'd0000;
            end
            else begin
               DC_Filter_N_Mux_12_2_0_4_2350_out1 = s_reg_1595;
            end
         end

         // resource: DC_Filter_N_Mux_12_2_0_4
         always @(s_reg_1596 or DC_Filter_Equal_2Ux1U_1U_4_2348_out1)
          begin :DC_Filter_N_Mux_12_2_0_4_2351
            if (DC_Filter_Equal_2Ux1U_1U_4_2348_out1) begin
               DC_Filter_N_Mux_12_2_0_4_2351_out1 = 12'd0000;
            end
            else begin
               DC_Filter_N_Mux_12_2_0_4_2351_out1 = s_reg_1596;
            end
         end

         // resource: DC_Filter_N_Mux_12_2_1_4
         always @(s_reg_1597 or DC_Filter_OrReduction_2U_1U_4_2349_out1)
          begin :DC_Filter_N_Mux_12_2_1_4_2352
            if (DC_Filter_OrReduction_2U_1U_4_2349_out1) begin
               DC_Filter_N_Mux_12_2_1_4_2352_out1 = s_reg_1597;
            end
            else begin
               DC_Filter_N_Mux_12_2_1_4_2352_out1 = 12'd0000;
            end
         end

         // resource: mux_2bx2i1c
         always @(DC_Filter_Add_2Ux1U_2U_4_2360_out1 or gs_ctrl28)
          begin :drive_DC_Filter_Mul_2Ux2U_4U_4_2353_in2
            if (gs_ctrl28) begin
               case (DC_Filter_Add_2Ux1U_2U_4_2360_out1) 

                  2'd3:                   begin
                     DC_Filter_Mul_2Ux2U_4U_4_2353_in2 = 2'd0;
                  end
                  
                  default:                   begin
                     DC_Filter_Mul_2Ux2U_4U_4_2353_in2 = DC_Filter_Add_2Ux1U_2U_4_2360_out1;
                  end
                  
               endcase

            end
            else begin
               DC_Filter_Mul_2Ux2U_4U_4_2353_in2 = 2'd0;
            end
         end

         // resource: DC_Filter_Mul_2Ux2U_4U_4  instance: DC_Filter_Mul_2Ux2U_4U_4_2353
         assign DC_Filter_Mul_2Ux2U_4U_4_2353_out1 = {2'b00, DC_Filter_Mul_2Ux2U_4U_4_2353_in2}*4'd03;

         // resource: mux_2bx3i1c
         always @(s_reg_1598 or DC_Filter_Add_2Ux1U_2U_4_2360_out1 or DC_Filter_Add_2Ux1U_2U_4_2370_out1 or gs_ctrl28)
          begin :drive_DC_Filter_Add_4Ux2U_4U_4_2354_in1
            if (gs_ctrl28) begin
               case (DC_Filter_Add_2Ux1U_2U_4_2360_out1) 

                  2'd3:                   begin
                     case (DC_Filter_Add_2Ux1U_2U_4_2370_out1) 

                        2'd3:                         begin
                           DC_Filter_Add_4Ux2U_4U_4_2354_in1 = 2'd0;
                        end
                        
                        default:                         begin
                           DC_Filter_Add_4Ux2U_4U_4_2354_in1 = DC_Filter_Add_2Ux1U_2U_4_2370_out1;
                        end
                        
                     endcase

                  end
                  
                  default:                   begin
                     DC_Filter_Add_4Ux2U_4U_4_2354_in1 = s_reg_1598;
                  end
                  
               endcase

            end
            else begin
               DC_Filter_Add_4Ux2U_4U_4_2354_in1 = 2'd0;
            end
         end

         // resource: DC_Filter_Add_4Ux2U_4U_4  instance: DC_Filter_Add_4Ux2U_4U_4_2354
         assign DC_Filter_Add_4Ux2U_4U_4_2354_out1 = DC_Filter_Mul_2Ux2U_4U_4_2353_out1 + {2'b00, DC_Filter_Add_4Ux2U_4U_4_2354_in1};

         // resource: DC_Filter_Mul_2Ux2U_4U_4  instance: DC_Filter_Mul_2Ux2U_4U_4_2355
         assign DC_Filter_Mul_2Ux2U_4U_4_2355_out1 = {2'b00, DC_Filter_Add_4Ux2U_4U_4_2354_in1}*4'd03;

         // resource: mux_8bx3i1c
         always @(s_reg_1600[7:0] or DC_Filter_Add_9Ux1U_9U_4_10_out1[7:0] or gs_ctrl45)
          begin :drive_DC_Filter_Add_8Ux2U_9U_4_2356_in2
            case (gs_ctrl45) 

               2'd1:                begin
                  DC_Filter_Add_8Ux2U_9U_4_2356_in2 = s_reg_1600[7:0];
               end
               
               2'd2:                begin
                  DC_Filter_Add_8Ux2U_9U_4_2356_in2 = DC_Filter_Add_9Ux1U_9U_4_10_out1[7:0];
               end
               
               default:                begin
                  DC_Filter_Add_8Ux2U_9U_4_2356_in2 = 8'd000;
               end
               
            endcase

         end

         // resource: mux_2bx3i1c
         always @(s_reg_1599 or DC_Filter_Add_2Ux1U_2U_4_2360_out1 or DC_Filter_Add_2Ux1U_2U_4_2370_out1 or DC_Filter_Add_2Ux1U_2U_4_2371_out1 or gs_ctrl46)
          begin :drive_DC_Filter_Add_8Ux2U_9U_4_2356_in1
            case (gs_ctrl46) 

               2'd1:                begin
                  DC_Filter_Add_8Ux2U_9U_4_2356_in1 = s_reg_1599;
               end
               
               2'd2:                begin
                  case (DC_Filter_Add_2Ux1U_2U_4_2360_out1) 

                     2'd3:                      begin
                        case (DC_Filter_Add_2Ux1U_2U_4_2370_out1) 

                           2'd3:                            begin
                              DC_Filter_Add_8Ux2U_9U_4_2356_in1 = DC_Filter_Add_2Ux1U_2U_4_2371_out1;
                           end
                           
                           default:                            begin
                              DC_Filter_Add_8Ux2U_9U_4_2356_in1 = s_reg_1599;
                           end
                           
                        endcase

                     end
                     
                     default:                      begin
                        DC_Filter_Add_8Ux2U_9U_4_2356_in1 = s_reg_1599;
                     end
                     
                  endcase

               end
               
               default:                begin
                  DC_Filter_Add_8Ux2U_9U_4_2356_in1 = 2'd0;
               end
               
            endcase

         end

         // resource: DC_Filter_Add_8Ux2U_9U_4  instance: DC_Filter_Add_8Ux2U_9U_4_2356
         assign DC_Filter_Add_8Ux2U_9U_4_2356_out1 = {1'b0, DC_Filter_Add_8Ux2U_9U_4_2356_in2} + {7'b0000000, DC_Filter_Add_8Ux2U_9U_4_2356_in1};

         // resource: DC_Filter_Mul_9Ux4U_12U_4  instance: DC_Filter_Mul_9Ux4U_12U_4_2357
         assign DC_Filter_Mul_9Ux4U_12U_4_2357_out1 = {8'b00000000, DC_Filter_Add_4Ux2U_4U_4_2354_out1}*12'd0258;

         // resource: DC_Filter_Add_4Ux2U_4U_4  instance: DC_Filter_Add_4Ux2U_4U_4_2358
         assign DC_Filter_Add_4Ux2U_4U_4_2358_out1 = DC_Filter_Mul_2Ux2U_4U_4_2355_out1 + {2'b00, DC_Filter_Add_8Ux2U_9U_4_2356_in1};

         // resource: DC_Filter_Add_12Ux9U_12U_4  instance: DC_Filter_Add_12Ux9U_12U_4_2359
         assign DC_Filter_Add_12Ux9U_12U_4_2359_out1 = DC_Filter_Mul_9Ux4U_12U_4_2357_out1 + {3'b000, DC_Filter_Add_8Ux2U_9U_4_2356_out1};

         // resource: DC_Filter_Add_2Ux1U_2U_4  instance: DC_Filter_Add_2Ux1U_2U_4_2360
         assign DC_Filter_Add_2Ux1U_2U_4_2360_out1 = s_reg_1604 + 2'd1;

         // resource: DC_Filter_OrReduction_2U_1U_4  instance: DC_Filter_OrReduction_2U_1U_4_2361
         assign DC_Filter_OrReduction_2U_1U_4_2361_out1 = (|s_reg_1604);

         // resource: DC_Filter_N_Mux_12_3_2_4
         always @(s_reg_1595 or s_reg_1596 or s_reg_1597 or s_reg_1604)
          begin :DC_Filter_N_Mux_12_3_2_4_2362
            case (s_reg_1604) 

               2'd0:                begin
                  DC_Filter_N_Mux_12_3_2_4_2362_out1 = s_reg_1597;
               end
               
               2'd1:                begin
                  DC_Filter_N_Mux_12_3_2_4_2362_out1 = s_reg_1596;
               end
               
               default:                begin
                  DC_Filter_N_Mux_12_3_2_4_2362_out1 = s_reg_1595;
               end
               
            endcase

         end

         // resource: DC_Filter_Equal_2Ux1U_1U_4  instance: DC_Filter_Equal_2Ux1U_1U_4_2364
         assign DC_Filter_Equal_2Ux1U_1U_4_2364_out1 = s_reg_1604 == 2'd1;

         // instance: drive_mask1_in1
         assign mask1_in1 = DC_Filter_Add_4Ux2U_4U_4_2358_out1;

         // resource: DC_Filter_N_Mux_12_2_3_4
         always @(s_reg_1595 or DC_Filter_Add_12Ux12U_12U_4_13_out1 or DC_Filter_Equal_2Ux2U_1U_4_2347_out1)
          begin :DC_Filter_N_Mux_12_2_3_4_2367
            if (DC_Filter_Equal_2Ux2U_1U_4_2347_out1) begin
               DC_Filter_N_Mux_12_2_3_4_2367_out1 = DC_Filter_Add_12Ux12U_12U_4_13_out1;
            end
            else begin
               DC_Filter_N_Mux_12_2_3_4_2367_out1 = s_reg_1595;
            end
         end

         // resource: DC_Filter_N_Mux_12_2_3_4
         always @(s_reg_1596 or DC_Filter_Add_12Ux12U_12U_4_13_out1 or DC_Filter_Equal_2Ux1U_1U_4_2364_out1)
          begin :DC_Filter_N_Mux_12_2_3_4_2368
            if (DC_Filter_Equal_2Ux1U_1U_4_2364_out1) begin
               DC_Filter_N_Mux_12_2_3_4_2368_out1 = DC_Filter_Add_12Ux12U_12U_4_13_out1;
            end
            else begin
               DC_Filter_N_Mux_12_2_3_4_2368_out1 = s_reg_1596;
            end
         end

         // resource: DC_Filter_N_Mux_12_2_3_4
         always @(s_reg_1597 or DC_Filter_Add_12Ux12U_12U_4_13_out1 or DC_Filter_OrReduction_2U_1U_4_2361_out1)
          begin :DC_Filter_N_Mux_12_2_3_4_2369
            if (DC_Filter_OrReduction_2U_1U_4_2361_out1) begin
               DC_Filter_N_Mux_12_2_3_4_2369_out1 = s_reg_1597;
            end
            else begin
               DC_Filter_N_Mux_12_2_3_4_2369_out1 = DC_Filter_Add_12Ux12U_12U_4_13_out1;
            end
         end

         // resource: DC_Filter_Add_2Ux1U_2U_4  instance: DC_Filter_Add_2Ux1U_2U_4_2370
         assign DC_Filter_Add_2Ux1U_2U_4_2370_out1 = s_reg_1598 + 2'd1;

         // resource: DC_Filter_Add_2Ux1U_2U_4  instance: DC_Filter_Add_2Ux1U_2U_4_2371
         assign DC_Filter_Add_2Ux1U_2U_4_2371_out1 = s_reg_1599 + 2'd1;

         // resource: regr_en_sc_10
         always @(posedge i_clk)
          begin :drive_global_state1
            if (i_rst == 1'b0) begin
               global_state1 <= 10'd0000;
            end
            else begin
               case (stall1) 

                  1'b1:                   begin
                  end
                  
                  1'b0:                   begin
                     global_state1 <= global_state1_next;
                  end
                  
               endcase

            end
         end

         // resource: mux_10bx8i7c
         always @(s_reg_1600 or s_reg_1601 or s_reg_1602[8:0] or DC_Filter_Add_9Ux1U_9U_4_10_out1 or DC_Filter_Add_2Ux1U_2U_4_14_out1 or DC_Filter_Add_2Ux1U_2U_4_15_out1 or DC_Filter_Add_1Ux1U_2U_4_2120_out1 or DC_Filter_Add_2Ux1U_2U_4_72_out1 or DC_Filter_LessThan_12Ux9U_1U_4_2331_out1 or DC_Filter_Add_2Ux1U_2U_4_2332_out1 or DC_Filter_LessThan_12Ux9U_1U_4_2333_out1 or DC_Filter_Add_2Ux1U_2U_4_2340_out1 or DC_Filter_Add_2Ux1U_2U_4_2346_out1 or DC_Filter_Add_2Ux1U_2U_4_2360_out1 or 
DC_Filter_Add_2Ux1U_2U_4_2370_out1
          or DC_Filter_Add_2Ux1U_2U_4_2371_out1 or global_state1)
          begin :drive_global_state1_next
            case (global_state1) 

               10'd0001:                begin
                  case (s_reg_1600) 

                     9'd258:                      begin
                        case (DC_Filter_Add_2Ux1U_2U_4_15_out1) 

                           2'd3:                            begin
                              /* state6 */
                              case (DC_Filter_Add_2Ux1U_2U_4_14_out1) 

                                 2'd3:                                  begin
                                    global_state1_next = 10'd0520;
                                 end
                                 
                                 default:                                  begin
                                    global_state1_next = 10'd0000;
                                 end
                                 
                              endcase

                           end
                           
                           default:                            begin
                              global_state1_next = 10'd0000;
                           end
                           
                        endcase

                     end
                     
                     default:                      begin
                        global_state1_next = 10'd0000;
                     end
                     
                  endcase

               end
               
               10'd0514:                begin
                  case (DC_Filter_Add_1Ux1U_2U_4_2120_out1) 

                     2'd2:                      begin
                        case (DC_Filter_Add_2Ux1U_2U_4_2332_out1) 

                           2'd3:                            begin
                              if (DC_Filter_LessThan_12Ux9U_1U_4_2331_out1) begin
                                 global_state1_next = 10'd0516;
                              end
                              else begin
                                 if (DC_Filter_LessThan_12Ux9U_1U_4_2333_out1) begin
                                    global_state1_next = global_state1 + 10'd0001;
                                 end
                                 else begin
                                    case (DC_Filter_Add_2Ux1U_2U_4_2346_out1) 

                                       2'd3:                                        begin
                                          global_state1_next = 10'd0525;
                                       end
                                       
                                       default:                                        begin
                                          global_state1_next = 10'd0524;
                                       end
                                       
                                    endcase

                                 end
                              end
                           end
                           
                           default:                            begin
                              global_state1_next = 10'd0002;
                           end
                           
                        endcase

                     end
                     
                     default:                      begin
                        global_state1_next = 10'd0002;
                     end
                     
                  endcase

               end
               
               10'd0515:                begin
                  case (DC_Filter_Add_2Ux1U_2U_4_2340_out1) 

                     2'd3:                      begin
                        /* state533 */
                        case (s_reg_1602[8:0]) 

                           9'd257:                            begin
                              case (DC_Filter_Add_2Ux1U_2U_4_2346_out1) 

                                 2'd3:                                  begin
                                    global_state1_next = 10'd0525;
                                 end
                                 
                                 default:                                  begin
                                    global_state1_next = 10'd0524;
                                 end
                                 
                              endcase

                           end
                           
                           default:                            begin
                              global_state1_next = 10'd0515;
                           end
                           
                        endcase

                     end
                     
                     default:                      begin
                        global_state1_next = 10'd0515;
                     end
                     
                  endcase

               end
               
               10'd0519:                begin
                  case (s_reg_1600) 

                     9'd257:                      begin
                        case (DC_Filter_Add_2Ux1U_2U_4_2346_out1) 

                           2'd3:                            begin
                              global_state1_next = 10'd0525;
                           end
                           
                           default:                            begin
                              global_state1_next = 10'd0524;
                           end
                           
                        endcase

                     end
                     
                     default:                      begin
                        global_state1_next = 10'd0516;
                     end
                     
                  endcase

               end
               
               10'd0523:                begin
                  case (s_reg_1600) 

                     9'd257:                      begin
                        case (DC_Filter_Add_2Ux1U_2U_4_72_out1) 

                           2'd3:                            begin
                              case (DC_Filter_Add_2Ux1U_2U_4_2346_out1) 

                                 2'd3:                                  begin
                                    global_state1_next = 10'd0525;
                                 end
                                 
                                 default:                                  begin
                                    global_state1_next = global_state1 + 10'd0001;
                                 end
                                 
                              endcase

                           end
                           
                           default:                            begin
                              global_state1_next = 10'd0520;
                           end
                           
                        endcase

                     end
                     
                     default:                      begin
                        global_state1_next = 10'd0520;
                     end
                     
                  endcase

               end
               
               10'd0524:                begin
                  case (DC_Filter_Add_2Ux1U_2U_4_2346_out1) 

                     2'd3:                      begin
                        global_state1_next = global_state1 + 10'd0001;
                     end
                     
                     default:                      begin
                        global_state1_next = 10'd0524;
                     end
                     
                  endcase

               end
               
               10'd0525:                begin
                  case (DC_Filter_Add_2Ux1U_2U_4_2360_out1) 

                     2'd3:                      begin
                        case (DC_Filter_Add_2Ux1U_2U_4_2370_out1) 

                           2'd3:                            begin
                              case (DC_Filter_Add_2Ux1U_2U_4_2371_out1) 

                                 2'd3:                                  begin
                                    global_state1_next = global_state1 + 10'd0001;
                                 end
                                 
                                 default:                                  begin
                                    global_state1_next = 10'd0525;
                                 end
                                 
                              endcase

                           end
                           
                           default:                            begin
                              global_state1_next = 10'd0525;
                           end
                           
                        endcase

                     end
                     
                     default:                      begin
                        global_state1_next = 10'd0525;
                     end
                     
                  endcase

               end
               
               10'd0526:                begin
                  /* state578 */
                  case (DC_Filter_Add_9Ux1U_9U_4_10_out1) 

                     9'd256:                      begin
                        case (s_reg_1601) 

                           12'd0000:                            begin
                              global_state1_next = 10'd0520;
                           end
                           
                           default:                            begin
                              global_state1_next = 10'd0002;
                           end
                           
                        endcase

                     end
                     
                     default:                      begin
                        case (DC_Filter_Add_2Ux1U_2U_4_2346_out1) 

                           2'd3:                            begin
                              global_state1_next = 10'd0525;
                           end
                           
                           default:                            begin
                              global_state1_next = 10'd0524;
                           end
                           
                        endcase

                     end
                     
                  endcase

               end
               
               default:                begin
                  global_state1_next = global_state1 + 10'd0001;
               end
               
            endcase

         end

         // resource: mux_2bx3i3c
         // resource: regr_en_sc_2
         always @(posedge i_clk)
          begin :drive_gs_ctrl24
            if (i_rst == 1'b0) begin
               gs_ctrl24 <= 2'd0;
            end
            else begin
               case (stall1) 

                  1'b1:                   begin
                  end
                  
                  1'b0:                   begin
                     case (global_state1_next) 

                        10'd0514:                         begin
                           gs_ctrl24 <= 2'd1;
                        end
                        
                        10'd0515:                         begin
                           gs_ctrl24 <= 2'd2;
                        end
                        
                        default:                         begin
                           gs_ctrl24 <= 2'd0;
                        end
                        
                     endcase

                  end
                  
               endcase

            end
         end

         // resource: mux_2bx4i4c
         // resource: regr_en_sc_2
         always @(posedge i_clk)
          begin :drive_gs_ctrl25
            if (i_rst == 1'b0) begin
               gs_ctrl25 <= 2'd0;
            end
            else begin
               case (stall1) 

                  1'b1:                   begin
                  end
                  
                  1'b0:                   begin
                     case (global_state1_next) 

                        10'd0514:                         begin
                           gs_ctrl25 <= 2'd1;
                        end
                        
                        10'd0515:                         begin
                           gs_ctrl25 <= 2'd2;
                        end
                        
                        10'd0526:                         begin
                           gs_ctrl25 <= 2'd3;
                        end
                        
                        default:                         begin
                           gs_ctrl25 <= 2'd0;
                        end
                        
                     endcase

                  end
                  
               endcase

            end
         end

         // resource: mux_3bx5i5c
         // resource: regr_en_sc_3
         always @(posedge i_clk)
          begin :drive_gs_ctrl26
            if (i_rst == 1'b0) begin
               gs_ctrl26 <= 3'd0;
            end
            else begin
               case (stall1) 

                  1'b1:                   begin
                  end
                  
                  1'b0:                   begin
                     case (global_state1_next) 

                        10'd0002, 10'd0004:                         begin
                           gs_ctrl26 <= 3'd1;
                        end
                        
                        10'd0003, 10'd0005, 10'd0006, 10'd0007, 10'd0008, 10'd0009, 10'd0010, 10'd0011, 10'd0012, 10'd0013, 10'd0014, 10'd0015, 10'd0016, 10'd0017, 10'd0018, 10'd0019, 10'd0020, 10'd0021, 10'd0022, 10'd0023, 10'd0024, 10'd0025, 10'd0026, 10'd0027, 10'd0028, 10'd0029, 10'd0030, 10'd0031, 10'd0032, 10'd0033, 10'd0034, 10'd0035, 10'd0036, 10'd0037, 10'd0038, 10'd0039, 10'd0040, 10'd0041, 10'd0042, 10'd0043, 10'd0044, 10'd0045, 10'd0046, 10'd0047, 10'd0048, 10'd0049, 10'd0050, 
10'd0051
                        , 10'd0052, 10'd0053, 10'd0054, 10'd0055, 10'd0056, 10'd0057, 10'd0058, 10'd0059, 10'd0060, 10'd0061, 10'd0062, 10'd0063, 10'd0064, 10'd0065, 10'd0066, 10'd0067, 10'd0068, 10'd0069, 10'd0070, 10'd0071, 10'd0072, 10'd0073, 10'd0074, 10'd0075, 10'd0076, 10'd0077, 10'd0078, 10'd0079, 10'd0080, 10'd0081, 10'd0082, 10'd0083, 10'd0084, 10'd0085, 10'd0086, 10'd0087, 10'd0088, 10'd0089, 10'd0090, 10'd0091, 10'd0092, 10'd0093, 10'd0094, 10'd0095, 10'd0096, 10'd0097, 10'd0098, 
10'd0099
                        , 10'd0100, 10'd0101, 10'd0102, 10'd0103, 10'd0104, 10'd0105, 10'd0106, 10'd0107, 10'd0108, 10'd0109, 10'd0110, 10'd0111, 10'd0112, 10'd0113, 10'd0114, 10'd0115, 10'd0116, 10'd0117, 10'd0118, 10'd0119, 10'd0120, 10'd0121, 10'd0122, 10'd0123, 10'd0124, 10'd0125, 10'd0126, 10'd0127, 10'd0128, 10'd0129, 10'd0130, 10'd0131, 10'd0132, 10'd0133, 10'd0134, 10'd0135, 10'd0136, 10'd0137, 10'd0138, 10'd0139, 10'd0140, 10'd0141, 10'd0142, 10'd0143, 10'd0144, 10'd0145, 10'd0146, 
10'd0147
                        , 10'd0148, 10'd0149, 10'd0150, 10'd0151, 10'd0152, 10'd0153, 10'd0154, 10'd0155, 10'd0156, 10'd0157, 10'd0158, 10'd0159, 10'd0160, 10'd0161, 10'd0162, 10'd0163, 10'd0164, 10'd0165, 10'd0166, 10'd0167, 10'd0168, 10'd0169, 10'd0170, 10'd0171, 10'd0172, 10'd0173, 10'd0174, 10'd0175, 10'd0176, 10'd0177, 10'd0178, 10'd0179, 10'd0180, 10'd0181, 10'd0182, 10'd0183, 10'd0184, 10'd0185, 10'd0186, 10'd0187, 10'd0188, 10'd0189, 10'd0190, 10'd0191, 10'd0192, 10'd0193, 10'd0194, 
10'd0195
                        , 10'd0196, 10'd0197, 10'd0198, 10'd0199, 10'd0200, 10'd0201, 10'd0202, 10'd0203, 10'd0204, 10'd0205, 10'd0206, 10'd0207, 10'd0208, 10'd0209, 10'd0210, 10'd0211, 10'd0212, 10'd0213, 10'd0214, 10'd0215, 10'd0216, 10'd0217, 10'd0218, 10'd0219, 10'd0220, 10'd0221, 10'd0222, 10'd0223, 10'd0224, 10'd0225, 10'd0226, 10'd0227, 10'd0228, 10'd0229, 10'd0230, 10'd0231, 10'd0232, 10'd0233, 10'd0234, 10'd0235, 10'd0236, 10'd0237, 10'd0238, 10'd0239, 10'd0240, 10'd0241, 10'd0242, 
10'd0243
                        , 10'd0244, 10'd0245, 10'd0246, 10'd0247, 10'd0248, 10'd0249, 10'd0250, 10'd0251, 10'd0252, 10'd0253, 10'd0254, 10'd0255, 10'd0256, 10'd0257, 10'd0258, 10'd0259, 10'd0260, 10'd0261, 10'd0262, 10'd0263, 10'd0264, 10'd0265, 10'd0266, 10'd0267, 10'd0268, 10'd0269, 10'd0270, 10'd0271, 10'd0272, 10'd0273, 10'd0274, 10'd0275, 10'd0276, 10'd0277, 10'd0278, 10'd0279, 10'd0280, 10'd0281, 10'd0282, 10'd0283, 10'd0284, 10'd0285, 10'd0286, 10'd0287, 10'd0288, 10'd0289, 10'd0290, 
10'd0291
                        , 10'd0292, 10'd0293, 10'd0294, 10'd0295, 10'd0296, 10'd0297, 10'd0298, 10'd0299, 10'd0300, 10'd0301, 10'd0302, 10'd0303, 10'd0304, 10'd0305, 10'd0306, 10'd0307, 10'd0308, 10'd0309, 10'd0310, 10'd0311, 10'd0312, 10'd0313, 10'd0314, 10'd0315, 10'd0316, 10'd0317, 10'd0318, 10'd0319, 10'd0320, 10'd0321, 10'd0322, 10'd0323, 10'd0324, 10'd0325, 10'd0326, 10'd0327, 10'd0328, 10'd0329, 10'd0330, 10'd0331, 10'd0332, 10'd0333, 10'd0334, 10'd0335, 10'd0336, 10'd0337, 10'd0338, 
10'd0339
                        , 10'd0340, 10'd0341, 10'd0342, 10'd0343, 10'd0344, 10'd0345, 10'd0346, 10'd0347, 10'd0348, 10'd0349, 10'd0350, 10'd0351, 10'd0352, 10'd0353, 10'd0354, 10'd0355, 10'd0356, 10'd0357, 10'd0358, 10'd0359, 10'd0360, 10'd0361, 10'd0362, 10'd0363, 10'd0364, 10'd0365, 10'd0366, 10'd0367, 10'd0368, 10'd0369, 10'd0370, 10'd0371, 10'd0372, 10'd0373, 10'd0374, 10'd0375, 10'd0376, 10'd0377, 10'd0378, 10'd0379, 10'd0380, 10'd0381, 10'd0382, 10'd0383, 10'd0384, 10'd0385, 10'd0386, 
10'd0387
                        , 10'd0388, 10'd0389, 10'd0390, 10'd0391, 10'd0392, 10'd0393, 10'd0394, 10'd0395, 10'd0396, 10'd0397, 10'd0398, 10'd0399, 10'd0400, 10'd0401, 10'd0402, 10'd0403, 10'd0404, 10'd0405, 10'd0406, 10'd0407, 10'd0408, 10'd0409, 10'd0410, 10'd0411, 10'd0412, 10'd0413, 10'd0414, 10'd0415, 10'd0416, 10'd0417, 10'd0418, 10'd0419, 10'd0420, 10'd0421, 10'd0422, 10'd0423, 10'd0424, 10'd0425, 10'd0426, 10'd0427, 10'd0428, 10'd0429, 10'd0430, 10'd0431, 10'd0432, 10'd0433, 10'd0434, 
10'd0435
                        , 10'd0436, 10'd0437, 10'd0438, 10'd0439, 10'd0440, 10'd0441, 10'd0442, 10'd0443, 10'd0444, 10'd0445, 10'd0446, 10'd0447, 10'd0448, 10'd0449, 10'd0450, 10'd0451, 10'd0452, 10'd0453, 10'd0454, 10'd0455, 10'd0456, 10'd0457, 10'd0458, 10'd0459, 10'd0460, 10'd0461, 10'd0462, 10'd0463, 10'd0464, 10'd0465, 10'd0466, 10'd0467, 10'd0468, 10'd0469, 10'd0470, 10'd0471, 10'd0472, 10'd0473, 10'd0474, 10'd0475, 10'd0476, 10'd0477, 10'd0478, 10'd0479, 10'd0480, 10'd0481, 10'd0482, 
10'd0483
                        , 10'd0484, 10'd0485, 10'd0486, 10'd0487, 10'd0488, 10'd0489, 10'd0490, 10'd0491, 10'd0492, 10'd0493, 10'd0494, 10'd0495, 10'd0496, 10'd0497, 10'd0498, 10'd0499, 10'd0500, 10'd0501, 10'd0502, 10'd0503, 10'd0504, 10'd0505, 10'd0506, 10'd0507, 10'd0508, 10'd0509, 10'd0510, 10'd0511, 10'd0512, 10'd0513:                         begin
                           gs_ctrl26 <= 3'd2;
                        end
                        
                        10'd0520:                         begin
                           gs_ctrl26 <= 3'd3;
                        end
                        
                        10'd0521:                         begin
                           gs_ctrl26 <= 3'd4;
                        end
                        
                        default:                         begin
                           gs_ctrl26 <= 3'd0;
                        end
                        
                     endcase

                  end
                  
               endcase

            end
         end

         // resource: mux_3bx5i5c
         // resource: regr_en_sc_3
         always @(posedge i_clk)
          begin :drive_gs_ctrl27
            if (i_rst == 1'b0) begin
               gs_ctrl27 <= 3'd0;
            end
            else begin
               case (stall1) 

                  1'b1:                   begin
                  end
                  
                  1'b0:                   begin
                     case (global_state1_next) 

                        10'd0002, 10'd0004, 10'd0006, 10'd0008, 10'd0010, 10'd0012, 10'd0014, 10'd0016, 10'd0018, 10'd0020, 10'd0022, 10'd0024, 10'd0026, 10'd0028, 10'd0030, 10'd0032, 10'd0034, 10'd0036, 10'd0038, 10'd0040, 10'd0042, 10'd0044, 10'd0046, 10'd0048, 10'd0050, 10'd0052, 10'd0054, 10'd0056, 10'd0058, 10'd0060, 10'd0062, 10'd0064, 10'd0066, 10'd0068, 10'd0070, 10'd0072, 10'd0074, 10'd0076, 10'd0078, 10'd0080, 10'd0082, 10'd0084, 10'd0086, 10'd0088, 10'd0090, 10'd0092, 10'd0094, 
10'd0096
                        , 10'd0098, 10'd0100, 10'd0102, 10'd0104, 10'd0106, 10'd0108, 10'd0110, 10'd0112, 10'd0114, 10'd0116, 10'd0118, 10'd0120, 10'd0122, 10'd0124, 10'd0126, 10'd0128, 10'd0130, 10'd0132, 10'd0134, 10'd0136, 10'd0138, 10'd0140, 10'd0142, 10'd0144, 10'd0146, 10'd0148, 10'd0150, 10'd0152, 10'd0154, 10'd0156, 10'd0158, 10'd0160, 10'd0162, 10'd0164, 10'd0166, 10'd0168, 10'd0170, 10'd0172, 10'd0174, 10'd0176, 10'd0178, 10'd0180, 10'd0182, 10'd0184, 10'd0186, 10'd0188, 10'd0190, 
10'd0192
                        , 10'd0194, 10'd0196, 10'd0198, 10'd0200, 10'd0202, 10'd0204, 10'd0206, 10'd0208, 10'd0210, 10'd0212, 10'd0214, 10'd0216, 10'd0218, 10'd0220, 10'd0222, 10'd0224, 10'd0226, 10'd0228, 10'd0230, 10'd0232, 10'd0234, 10'd0236, 10'd0238, 10'd0240, 10'd0242, 10'd0244, 10'd0246, 10'd0248, 10'd0250, 10'd0252, 10'd0254, 10'd0256, 10'd0258, 10'd0260, 10'd0262, 10'd0264, 10'd0266, 10'd0268, 10'd0270, 10'd0272, 10'd0274, 10'd0276, 10'd0278, 10'd0280, 10'd0282, 10'd0284, 10'd0286, 
10'd0288
                        , 10'd0290, 10'd0292, 10'd0294, 10'd0296, 10'd0298, 10'd0300, 10'd0302, 10'd0304, 10'd0306, 10'd0308, 10'd0310, 10'd0312, 10'd0314, 10'd0316, 10'd0318, 10'd0320, 10'd0322, 10'd0324, 10'd0326, 10'd0328, 10'd0330, 10'd0332, 10'd0334, 10'd0336, 10'd0338, 10'd0340, 10'd0342, 10'd0344, 10'd0346, 10'd0348, 10'd0350, 10'd0352, 10'd0354, 10'd0356, 10'd0358, 10'd0360, 10'd0362, 10'd0364, 10'd0366, 10'd0368, 10'd0370, 10'd0372, 10'd0374, 10'd0376, 10'd0378, 10'd0380, 10'd0382, 
10'd0384
                        , 10'd0386, 10'd0388, 10'd0390, 10'd0392, 10'd0394, 10'd0396, 10'd0398, 10'd0400, 10'd0402, 10'd0404, 10'd0406, 10'd0408, 10'd0410, 10'd0412, 10'd0414, 10'd0416, 10'd0418, 10'd0420, 10'd0422, 10'd0424, 10'd0426, 10'd0428, 10'd0430, 10'd0432, 10'd0434, 10'd0436, 10'd0438, 10'd0440, 10'd0442, 10'd0444, 10'd0446, 10'd0448, 10'd0450, 10'd0452, 10'd0454, 10'd0456, 10'd0458, 10'd0460, 10'd0462, 10'd0464, 10'd0466, 10'd0468, 10'd0470, 10'd0472, 10'd0474, 10'd0476, 10'd0478, 
10'd0480
                        , 10'd0482, 10'd0484, 10'd0486, 10'd0488, 10'd0490, 10'd0492, 10'd0494, 10'd0496, 10'd0498, 10'd0500, 10'd0502, 10'd0504, 10'd0506, 10'd0508, 10'd0510, 10'd0512:                         begin
                           gs_ctrl27 <= 3'd1;
                        end
                        
                        10'd0003, 10'd0005, 10'd0007, 10'd0009, 10'd0011, 10'd0013, 10'd0015, 10'd0017, 10'd0019, 10'd0021, 10'd0023, 10'd0025, 10'd0027, 10'd0029, 10'd0031, 10'd0033, 10'd0035, 10'd0037, 10'd0039, 10'd0041, 10'd0043, 10'd0045, 10'd0047, 10'd0049, 10'd0051, 10'd0053, 10'd0055, 10'd0057, 10'd0059, 10'd0061, 10'd0063, 10'd0065, 10'd0067, 10'd0069, 10'd0071, 10'd0073, 10'd0075, 10'd0077, 10'd0079, 10'd0081, 10'd0083, 10'd0085, 10'd0087, 10'd0089, 10'd0091, 10'd0093, 10'd0095, 
10'd0097
                        , 10'd0099, 10'd0101, 10'd0103, 10'd0105, 10'd0107, 10'd0109, 10'd0111, 10'd0113, 10'd0115, 10'd0117, 10'd0119, 10'd0121, 10'd0123, 10'd0125, 10'd0127, 10'd0129, 10'd0131, 10'd0133, 10'd0135, 10'd0137, 10'd0139, 10'd0141, 10'd0143, 10'd0145, 10'd0147, 10'd0149, 10'd0151, 10'd0153, 10'd0155, 10'd0157, 10'd0159, 10'd0161, 10'd0163, 10'd0165, 10'd0167, 10'd0169, 10'd0171, 10'd0173, 10'd0175, 10'd0177, 10'd0179, 10'd0181, 10'd0183, 10'd0185, 10'd0187, 10'd0189, 10'd0191, 
10'd0193
                        , 10'd0195, 10'd0197, 10'd0199, 10'd0201, 10'd0203, 10'd0205, 10'd0207, 10'd0209, 10'd0211, 10'd0213, 10'd0215, 10'd0217, 10'd0219, 10'd0221, 10'd0223, 10'd0225, 10'd0227, 10'd0229, 10'd0231, 10'd0233, 10'd0235, 10'd0237, 10'd0239, 10'd0241, 10'd0243, 10'd0245, 10'd0247, 10'd0249, 10'd0251, 10'd0253, 10'd0255, 10'd0257, 10'd0259, 10'd0261, 10'd0263, 10'd0265, 10'd0267, 10'd0269, 10'd0271, 10'd0273, 10'd0275, 10'd0277, 10'd0279, 10'd0281, 10'd0283, 10'd0285, 10'd0287, 
10'd0289
                        , 10'd0291, 10'd0293, 10'd0295, 10'd0297, 10'd0299, 10'd0301, 10'd0303, 10'd0305, 10'd0307, 10'd0309, 10'd0311, 10'd0313, 10'd0315, 10'd0317, 10'd0319, 10'd0321, 10'd0323, 10'd0325, 10'd0327, 10'd0329, 10'd0331, 10'd0333, 10'd0335, 10'd0337, 10'd0339, 10'd0341, 10'd0343, 10'd0345, 10'd0347, 10'd0349, 10'd0351, 10'd0353, 10'd0355, 10'd0357, 10'd0359, 10'd0361, 10'd0363, 10'd0365, 10'd0367, 10'd0369, 10'd0371, 10'd0373, 10'd0375, 10'd0377, 10'd0379, 10'd0381, 10'd0383, 
10'd0385
                        , 10'd0387, 10'd0389, 10'd0391, 10'd0393, 10'd0395, 10'd0397, 10'd0399, 10'd0401, 10'd0403, 10'd0405, 10'd0407, 10'd0409, 10'd0411, 10'd0413, 10'd0415, 10'd0417, 10'd0419, 10'd0421, 10'd0423, 10'd0425, 10'd0427, 10'd0429, 10'd0431, 10'd0433, 10'd0435, 10'd0437, 10'd0439, 10'd0441, 10'd0443, 10'd0445, 10'd0447, 10'd0449, 10'd0451, 10'd0453, 10'd0455, 10'd0457, 10'd0459, 10'd0461, 10'd0463, 10'd0465, 10'd0467, 10'd0469, 10'd0471, 10'd0473, 10'd0475, 10'd0477, 10'd0479, 
10'd0481
                        , 10'd0483, 10'd0485, 10'd0487, 10'd0489, 10'd0491, 10'd0493, 10'd0495, 10'd0497, 10'd0499, 10'd0501, 10'd0503, 10'd0505, 10'd0507, 10'd0509, 10'd0511, 10'd0513:                         begin
                           gs_ctrl27 <= 3'd2;
                        end
                        
                        10'd0514, 10'd0515:                         begin
                           gs_ctrl27 <= 3'd3;
                        end
                        
                        10'd0520:                         begin
                           gs_ctrl27 <= 3'd4;
                        end
                        
                        default:                         begin
                           gs_ctrl27 <= 3'd0;
                        end
                        
                     endcase

                  end
                  
               endcase

            end
         end

         // resource: mux_1bx2i2c
         // resource: regr_en_sc_1
         always @(posedge i_clk)
          begin :drive_gs_ctrl28
            if (i_rst == 1'b0) begin
               gs_ctrl28 <= 1'b0;
            end
            else begin
               case (stall1) 

                  1'b1:                   begin
                  end
                  
                  1'b0:                   begin
                     case (global_state1_next) 

                        10'd0525:                         begin
                           gs_ctrl28 <= 1'b1;
                        end
                        
                        default:                         begin
                           gs_ctrl28 <= 1'b0;
                        end
                        
                     endcase

                  end
                  
               endcase

            end
         end

         // resource: mux_3bx5i5c
         // resource: regr_en_sc_3
         always @(posedge i_clk)
          begin :drive_gs_ctrl29
            if (i_rst == 1'b0) begin
               gs_ctrl29 <= 3'd0;
            end
            else begin
               case (stall1) 

                  1'b1:                   begin
                  end
                  
                  1'b0:                   begin
                     case (global_state1_next) 

                        10'd0001, 10'd0526:                         begin
                           gs_ctrl29 <= 3'd1;
                        end
                        
                        10'd0520:                         begin
                           gs_ctrl29 <= 3'd2;
                        end
                        
                        10'd0523:                         begin
                           gs_ctrl29 <= 3'd3;
                        end
                        
                        10'd0525:                         begin
                           gs_ctrl29 <= 3'd4;
                        end
                        
                        default:                         begin
                           gs_ctrl29 <= 3'd0;
                        end
                        
                     endcase

                  end
                  
               endcase

            end
         end

         // resource: mux_3bx7i7c
         // resource: regr_en_sc_3
         always @(posedge i_clk)
          begin :drive_gs_ctrl30
            if (i_rst == 1'b0) begin
               gs_ctrl30 <= 3'd0;
            end
            else begin
               case (stall1) 

                  1'b1:                   begin
                  end
                  
                  1'b0:                   begin
                     case (global_state1_next) 

                        10'd0516:                         begin
                           gs_ctrl30 <= 3'd1;
                        end
                        
                        10'd0517:                         begin
                           gs_ctrl30 <= 3'd2;
                        end
                        
                        10'd0518:                         begin
                           gs_ctrl30 <= 3'd3;
                        end
                        
                        10'd0520:                         begin
                           gs_ctrl30 <= 3'd4;
                        end
                        
                        10'd0521, 10'd0522:                         begin
                           gs_ctrl30 <= 3'd5;
                        end
                        
                        10'd0525:                         begin
                           gs_ctrl30 <= 3'd6;
                        end
                        
                        default:                         begin
                           gs_ctrl30 <= 3'd0;
                        end
                        
                     endcase

                  end
                  
               endcase

            end
         end

         // resource: mux_9bx259i259c
         // resource: regr_en_sc_9
         always @(posedge i_clk)
          begin :drive_gs_ctrl31
            if (i_rst == 1'b0) begin
               gs_ctrl31 <= 9'd000;
            end
            else begin
               case (stall1) 

                  1'b1:                   begin
                  end
                  
                  1'b0:                   begin
                     case (global_state1_next) 

                        10'd0002, 10'd0003, 10'd0514:                         begin
                           gs_ctrl31 <= 9'd001;
                        end
                        
                        10'd0004, 10'd0005:                         begin
                           gs_ctrl31 <= 9'd002;
                        end
                        
                        10'd0006, 10'd0007:                         begin
                           gs_ctrl31 <= 9'd003;
                        end
                        
                        10'd0008, 10'd0009:                         begin
                           gs_ctrl31 <= 9'd004;
                        end
                        
                        10'd0010, 10'd0011:                         begin
                           gs_ctrl31 <= 9'd005;
                        end
                        
                        10'd0012, 10'd0013:                         begin
                           gs_ctrl31 <= 9'd006;
                        end
                        
                        10'd0014, 10'd0015:                         begin
                           gs_ctrl31 <= 9'd007;
                        end
                        
                        10'd0016, 10'd0017:                         begin
                           gs_ctrl31 <= 9'd008;
                        end
                        
                        10'd0018, 10'd0019:                         begin
                           gs_ctrl31 <= 9'd009;
                        end
                        
                        10'd0020, 10'd0021:                         begin
                           gs_ctrl31 <= 9'd010;
                        end
                        
                        10'd0022, 10'd0023:                         begin
                           gs_ctrl31 <= 9'd011;
                        end
                        
                        10'd0024, 10'd0025:                         begin
                           gs_ctrl31 <= 9'd012;
                        end
                        
                        10'd0026, 10'd0027:                         begin
                           gs_ctrl31 <= 9'd013;
                        end
                        
                        10'd0028, 10'd0029:                         begin
                           gs_ctrl31 <= 9'd014;
                        end
                        
                        10'd0030, 10'd0031:                         begin
                           gs_ctrl31 <= 9'd015;
                        end
                        
                        10'd0032, 10'd0033:                         begin
                           gs_ctrl31 <= 9'd016;
                        end
                        
                        10'd0034, 10'd0035:                         begin
                           gs_ctrl31 <= 9'd017;
                        end
                        
                        10'd0036, 10'd0037:                         begin
                           gs_ctrl31 <= 9'd018;
                        end
                        
                        10'd0038, 10'd0039:                         begin
                           gs_ctrl31 <= 9'd019;
                        end
                        
                        10'd0040, 10'd0041:                         begin
                           gs_ctrl31 <= 9'd020;
                        end
                        
                        10'd0042, 10'd0043:                         begin
                           gs_ctrl31 <= 9'd021;
                        end
                        
                        10'd0044, 10'd0045:                         begin
                           gs_ctrl31 <= 9'd022;
                        end
                        
                        10'd0046, 10'd0047:                         begin
                           gs_ctrl31 <= 9'd023;
                        end
                        
                        10'd0048, 10'd0049:                         begin
                           gs_ctrl31 <= 9'd024;
                        end
                        
                        10'd0050, 10'd0051:                         begin
                           gs_ctrl31 <= 9'd025;
                        end
                        
                        10'd0052, 10'd0053:                         begin
                           gs_ctrl31 <= 9'd026;
                        end
                        
                        10'd0054, 10'd0055:                         begin
                           gs_ctrl31 <= 9'd027;
                        end
                        
                        10'd0056, 10'd0057:                         begin
                           gs_ctrl31 <= 9'd028;
                        end
                        
                        10'd0058, 10'd0059:                         begin
                           gs_ctrl31 <= 9'd029;
                        end
                        
                        10'd0060, 10'd0061:                         begin
                           gs_ctrl31 <= 9'd030;
                        end
                        
                        10'd0062, 10'd0063:                         begin
                           gs_ctrl31 <= 9'd031;
                        end
                        
                        10'd0064, 10'd0065:                         begin
                           gs_ctrl31 <= 9'd032;
                        end
                        
                        10'd0066, 10'd0067:                         begin
                           gs_ctrl31 <= 9'd033;
                        end
                        
                        10'd0068, 10'd0069:                         begin
                           gs_ctrl31 <= 9'd034;
                        end
                        
                        10'd0070, 10'd0071:                         begin
                           gs_ctrl31 <= 9'd035;
                        end
                        
                        10'd0072, 10'd0073:                         begin
                           gs_ctrl31 <= 9'd036;
                        end
                        
                        10'd0074, 10'd0075:                         begin
                           gs_ctrl31 <= 9'd037;
                        end
                        
                        10'd0076, 10'd0077:                         begin
                           gs_ctrl31 <= 9'd038;
                        end
                        
                        10'd0078, 10'd0079:                         begin
                           gs_ctrl31 <= 9'd039;
                        end
                        
                        10'd0080, 10'd0081:                         begin
                           gs_ctrl31 <= 9'd040;
                        end
                        
                        10'd0082, 10'd0083:                         begin
                           gs_ctrl31 <= 9'd041;
                        end
                        
                        10'd0084, 10'd0085:                         begin
                           gs_ctrl31 <= 9'd042;
                        end
                        
                        10'd0086, 10'd0087:                         begin
                           gs_ctrl31 <= 9'd043;
                        end
                        
                        10'd0088, 10'd0089:                         begin
                           gs_ctrl31 <= 9'd044;
                        end
                        
                        10'd0090, 10'd0091:                         begin
                           gs_ctrl31 <= 9'd045;
                        end
                        
                        10'd0092, 10'd0093:                         begin
                           gs_ctrl31 <= 9'd046;
                        end
                        
                        10'd0094, 10'd0095:                         begin
                           gs_ctrl31 <= 9'd047;
                        end
                        
                        10'd0096, 10'd0097:                         begin
                           gs_ctrl31 <= 9'd048;
                        end
                        
                        10'd0098, 10'd0099:                         begin
                           gs_ctrl31 <= 9'd049;
                        end
                        
                        10'd0100, 10'd0101:                         begin
                           gs_ctrl31 <= 9'd050;
                        end
                        
                        10'd0102, 10'd0103:                         begin
                           gs_ctrl31 <= 9'd051;
                        end
                        
                        10'd0104, 10'd0105:                         begin
                           gs_ctrl31 <= 9'd052;
                        end
                        
                        10'd0106, 10'd0107:                         begin
                           gs_ctrl31 <= 9'd053;
                        end
                        
                        10'd0108, 10'd0109:                         begin
                           gs_ctrl31 <= 9'd054;
                        end
                        
                        10'd0110, 10'd0111:                         begin
                           gs_ctrl31 <= 9'd055;
                        end
                        
                        10'd0112, 10'd0113:                         begin
                           gs_ctrl31 <= 9'd056;
                        end
                        
                        10'd0114, 10'd0115:                         begin
                           gs_ctrl31 <= 9'd057;
                        end
                        
                        10'd0116, 10'd0117:                         begin
                           gs_ctrl31 <= 9'd058;
                        end
                        
                        10'd0118, 10'd0119:                         begin
                           gs_ctrl31 <= 9'd059;
                        end
                        
                        10'd0120, 10'd0121:                         begin
                           gs_ctrl31 <= 9'd060;
                        end
                        
                        10'd0122, 10'd0123:                         begin
                           gs_ctrl31 <= 9'd061;
                        end
                        
                        10'd0124, 10'd0125:                         begin
                           gs_ctrl31 <= 9'd062;
                        end
                        
                        10'd0126, 10'd0127:                         begin
                           gs_ctrl31 <= 9'd063;
                        end
                        
                        10'd0128, 10'd0129:                         begin
                           gs_ctrl31 <= 9'd064;
                        end
                        
                        10'd0130, 10'd0131:                         begin
                           gs_ctrl31 <= 9'd065;
                        end
                        
                        10'd0132, 10'd0133:                         begin
                           gs_ctrl31 <= 9'd066;
                        end
                        
                        10'd0134, 10'd0135:                         begin
                           gs_ctrl31 <= 9'd067;
                        end
                        
                        10'd0136, 10'd0137:                         begin
                           gs_ctrl31 <= 9'd068;
                        end
                        
                        10'd0138, 10'd0139:                         begin
                           gs_ctrl31 <= 9'd069;
                        end
                        
                        10'd0140, 10'd0141:                         begin
                           gs_ctrl31 <= 9'd070;
                        end
                        
                        10'd0142, 10'd0143:                         begin
                           gs_ctrl31 <= 9'd071;
                        end
                        
                        10'd0144, 10'd0145:                         begin
                           gs_ctrl31 <= 9'd072;
                        end
                        
                        10'd0146, 10'd0147:                         begin
                           gs_ctrl31 <= 9'd073;
                        end
                        
                        10'd0148, 10'd0149:                         begin
                           gs_ctrl31 <= 9'd074;
                        end
                        
                        10'd0150, 10'd0151:                         begin
                           gs_ctrl31 <= 9'd075;
                        end
                        
                        10'd0152, 10'd0153:                         begin
                           gs_ctrl31 <= 9'd076;
                        end
                        
                        10'd0154, 10'd0155:                         begin
                           gs_ctrl31 <= 9'd077;
                        end
                        
                        10'd0156, 10'd0157:                         begin
                           gs_ctrl31 <= 9'd078;
                        end
                        
                        10'd0158, 10'd0159:                         begin
                           gs_ctrl31 <= 9'd079;
                        end
                        
                        10'd0160, 10'd0161:                         begin
                           gs_ctrl31 <= 9'd080;
                        end
                        
                        10'd0162, 10'd0163:                         begin
                           gs_ctrl31 <= 9'd081;
                        end
                        
                        10'd0164, 10'd0165:                         begin
                           gs_ctrl31 <= 9'd082;
                        end
                        
                        10'd0166, 10'd0167:                         begin
                           gs_ctrl31 <= 9'd083;
                        end
                        
                        10'd0168, 10'd0169:                         begin
                           gs_ctrl31 <= 9'd084;
                        end
                        
                        10'd0170, 10'd0171:                         begin
                           gs_ctrl31 <= 9'd085;
                        end
                        
                        10'd0172, 10'd0173:                         begin
                           gs_ctrl31 <= 9'd086;
                        end
                        
                        10'd0174, 10'd0175:                         begin
                           gs_ctrl31 <= 9'd087;
                        end
                        
                        10'd0176, 10'd0177:                         begin
                           gs_ctrl31 <= 9'd088;
                        end
                        
                        10'd0178, 10'd0179:                         begin
                           gs_ctrl31 <= 9'd089;
                        end
                        
                        10'd0180, 10'd0181:                         begin
                           gs_ctrl31 <= 9'd090;
                        end
                        
                        10'd0182, 10'd0183:                         begin
                           gs_ctrl31 <= 9'd091;
                        end
                        
                        10'd0184, 10'd0185:                         begin
                           gs_ctrl31 <= 9'd092;
                        end
                        
                        10'd0186, 10'd0187:                         begin
                           gs_ctrl31 <= 9'd093;
                        end
                        
                        10'd0188, 10'd0189:                         begin
                           gs_ctrl31 <= 9'd094;
                        end
                        
                        10'd0190, 10'd0191:                         begin
                           gs_ctrl31 <= 9'd095;
                        end
                        
                        10'd0192, 10'd0193:                         begin
                           gs_ctrl31 <= 9'd096;
                        end
                        
                        10'd0194, 10'd0195:                         begin
                           gs_ctrl31 <= 9'd097;
                        end
                        
                        10'd0196, 10'd0197:                         begin
                           gs_ctrl31 <= 9'd098;
                        end
                        
                        10'd0198, 10'd0199:                         begin
                           gs_ctrl31 <= 9'd099;
                        end
                        
                        10'd0200, 10'd0201:                         begin
                           gs_ctrl31 <= 9'd100;
                        end
                        
                        10'd0202, 10'd0203:                         begin
                           gs_ctrl31 <= 9'd101;
                        end
                        
                        10'd0204, 10'd0205:                         begin
                           gs_ctrl31 <= 9'd102;
                        end
                        
                        10'd0206, 10'd0207:                         begin
                           gs_ctrl31 <= 9'd103;
                        end
                        
                        10'd0208, 10'd0209:                         begin
                           gs_ctrl31 <= 9'd104;
                        end
                        
                        10'd0210, 10'd0211:                         begin
                           gs_ctrl31 <= 9'd105;
                        end
                        
                        10'd0212, 10'd0213:                         begin
                           gs_ctrl31 <= 9'd106;
                        end
                        
                        10'd0214, 10'd0215:                         begin
                           gs_ctrl31 <= 9'd107;
                        end
                        
                        10'd0216, 10'd0217:                         begin
                           gs_ctrl31 <= 9'd108;
                        end
                        
                        10'd0218, 10'd0219:                         begin
                           gs_ctrl31 <= 9'd109;
                        end
                        
                        10'd0220, 10'd0221:                         begin
                           gs_ctrl31 <= 9'd110;
                        end
                        
                        10'd0222, 10'd0223:                         begin
                           gs_ctrl31 <= 9'd111;
                        end
                        
                        10'd0224, 10'd0225:                         begin
                           gs_ctrl31 <= 9'd112;
                        end
                        
                        10'd0226, 10'd0227:                         begin
                           gs_ctrl31 <= 9'd113;
                        end
                        
                        10'd0228, 10'd0229:                         begin
                           gs_ctrl31 <= 9'd114;
                        end
                        
                        10'd0230, 10'd0231:                         begin
                           gs_ctrl31 <= 9'd115;
                        end
                        
                        10'd0232, 10'd0233:                         begin
                           gs_ctrl31 <= 9'd116;
                        end
                        
                        10'd0234, 10'd0235:                         begin
                           gs_ctrl31 <= 9'd117;
                        end
                        
                        10'd0236, 10'd0237:                         begin
                           gs_ctrl31 <= 9'd118;
                        end
                        
                        10'd0238, 10'd0239:                         begin
                           gs_ctrl31 <= 9'd119;
                        end
                        
                        10'd0240, 10'd0241:                         begin
                           gs_ctrl31 <= 9'd120;
                        end
                        
                        10'd0242, 10'd0243:                         begin
                           gs_ctrl31 <= 9'd121;
                        end
                        
                        10'd0244, 10'd0245:                         begin
                           gs_ctrl31 <= 9'd122;
                        end
                        
                        10'd0246, 10'd0247:                         begin
                           gs_ctrl31 <= 9'd123;
                        end
                        
                        10'd0248, 10'd0249:                         begin
                           gs_ctrl31 <= 9'd124;
                        end
                        
                        10'd0250, 10'd0251:                         begin
                           gs_ctrl31 <= 9'd125;
                        end
                        
                        10'd0252, 10'd0253:                         begin
                           gs_ctrl31 <= 9'd126;
                        end
                        
                        10'd0254, 10'd0255:                         begin
                           gs_ctrl31 <= 9'd127;
                        end
                        
                        10'd0256, 10'd0257:                         begin
                           gs_ctrl31 <= 9'd128;
                        end
                        
                        10'd0258, 10'd0259:                         begin
                           gs_ctrl31 <= 9'd129;
                        end
                        
                        10'd0260, 10'd0261:                         begin
                           gs_ctrl31 <= 9'd130;
                        end
                        
                        10'd0262, 10'd0263:                         begin
                           gs_ctrl31 <= 9'd131;
                        end
                        
                        10'd0264, 10'd0265:                         begin
                           gs_ctrl31 <= 9'd132;
                        end
                        
                        10'd0266, 10'd0267:                         begin
                           gs_ctrl31 <= 9'd133;
                        end
                        
                        10'd0268, 10'd0269:                         begin
                           gs_ctrl31 <= 9'd134;
                        end
                        
                        10'd0270, 10'd0271:                         begin
                           gs_ctrl31 <= 9'd135;
                        end
                        
                        10'd0272, 10'd0273:                         begin
                           gs_ctrl31 <= 9'd136;
                        end
                        
                        10'd0274, 10'd0275:                         begin
                           gs_ctrl31 <= 9'd137;
                        end
                        
                        10'd0276, 10'd0277:                         begin
                           gs_ctrl31 <= 9'd138;
                        end
                        
                        10'd0278, 10'd0279:                         begin
                           gs_ctrl31 <= 9'd139;
                        end
                        
                        10'd0280, 10'd0281:                         begin
                           gs_ctrl31 <= 9'd140;
                        end
                        
                        10'd0282, 10'd0283:                         begin
                           gs_ctrl31 <= 9'd141;
                        end
                        
                        10'd0284, 10'd0285:                         begin
                           gs_ctrl31 <= 9'd142;
                        end
                        
                        10'd0286, 10'd0287:                         begin
                           gs_ctrl31 <= 9'd143;
                        end
                        
                        10'd0288, 10'd0289:                         begin
                           gs_ctrl31 <= 9'd144;
                        end
                        
                        10'd0290, 10'd0291:                         begin
                           gs_ctrl31 <= 9'd145;
                        end
                        
                        10'd0292, 10'd0293:                         begin
                           gs_ctrl31 <= 9'd146;
                        end
                        
                        10'd0294, 10'd0295:                         begin
                           gs_ctrl31 <= 9'd147;
                        end
                        
                        10'd0296, 10'd0297:                         begin
                           gs_ctrl31 <= 9'd148;
                        end
                        
                        10'd0298, 10'd0299:                         begin
                           gs_ctrl31 <= 9'd149;
                        end
                        
                        10'd0300, 10'd0301:                         begin
                           gs_ctrl31 <= 9'd150;
                        end
                        
                        10'd0302, 10'd0303:                         begin
                           gs_ctrl31 <= 9'd151;
                        end
                        
                        10'd0304, 10'd0305:                         begin
                           gs_ctrl31 <= 9'd152;
                        end
                        
                        10'd0306, 10'd0307:                         begin
                           gs_ctrl31 <= 9'd153;
                        end
                        
                        10'd0308, 10'd0309:                         begin
                           gs_ctrl31 <= 9'd154;
                        end
                        
                        10'd0310, 10'd0311:                         begin
                           gs_ctrl31 <= 9'd155;
                        end
                        
                        10'd0312, 10'd0313:                         begin
                           gs_ctrl31 <= 9'd156;
                        end
                        
                        10'd0314, 10'd0315:                         begin
                           gs_ctrl31 <= 9'd157;
                        end
                        
                        10'd0316, 10'd0317:                         begin
                           gs_ctrl31 <= 9'd158;
                        end
                        
                        10'd0318, 10'd0319:                         begin
                           gs_ctrl31 <= 9'd159;
                        end
                        
                        10'd0320, 10'd0321:                         begin
                           gs_ctrl31 <= 9'd160;
                        end
                        
                        10'd0322, 10'd0323:                         begin
                           gs_ctrl31 <= 9'd161;
                        end
                        
                        10'd0324, 10'd0325:                         begin
                           gs_ctrl31 <= 9'd162;
                        end
                        
                        10'd0326, 10'd0327:                         begin
                           gs_ctrl31 <= 9'd163;
                        end
                        
                        10'd0328, 10'd0329:                         begin
                           gs_ctrl31 <= 9'd164;
                        end
                        
                        10'd0330, 10'd0331:                         begin
                           gs_ctrl31 <= 9'd165;
                        end
                        
                        10'd0332, 10'd0333:                         begin
                           gs_ctrl31 <= 9'd166;
                        end
                        
                        10'd0334, 10'd0335:                         begin
                           gs_ctrl31 <= 9'd167;
                        end
                        
                        10'd0336, 10'd0337:                         begin
                           gs_ctrl31 <= 9'd168;
                        end
                        
                        10'd0338, 10'd0339:                         begin
                           gs_ctrl31 <= 9'd169;
                        end
                        
                        10'd0340, 10'd0341:                         begin
                           gs_ctrl31 <= 9'd170;
                        end
                        
                        10'd0342, 10'd0343:                         begin
                           gs_ctrl31 <= 9'd171;
                        end
                        
                        10'd0344, 10'd0345:                         begin
                           gs_ctrl31 <= 9'd172;
                        end
                        
                        10'd0346, 10'd0347:                         begin
                           gs_ctrl31 <= 9'd173;
                        end
                        
                        10'd0348, 10'd0349:                         begin
                           gs_ctrl31 <= 9'd174;
                        end
                        
                        10'd0350, 10'd0351:                         begin
                           gs_ctrl31 <= 9'd175;
                        end
                        
                        10'd0352, 10'd0353:                         begin
                           gs_ctrl31 <= 9'd176;
                        end
                        
                        10'd0354, 10'd0355:                         begin
                           gs_ctrl31 <= 9'd177;
                        end
                        
                        10'd0356, 10'd0357:                         begin
                           gs_ctrl31 <= 9'd178;
                        end
                        
                        10'd0358, 10'd0359:                         begin
                           gs_ctrl31 <= 9'd179;
                        end
                        
                        10'd0360, 10'd0361:                         begin
                           gs_ctrl31 <= 9'd180;
                        end
                        
                        10'd0362, 10'd0363:                         begin
                           gs_ctrl31 <= 9'd181;
                        end
                        
                        10'd0364, 10'd0365:                         begin
                           gs_ctrl31 <= 9'd182;
                        end
                        
                        10'd0366, 10'd0367:                         begin
                           gs_ctrl31 <= 9'd183;
                        end
                        
                        10'd0368, 10'd0369:                         begin
                           gs_ctrl31 <= 9'd184;
                        end
                        
                        10'd0370, 10'd0371:                         begin
                           gs_ctrl31 <= 9'd185;
                        end
                        
                        10'd0372, 10'd0373:                         begin
                           gs_ctrl31 <= 9'd186;
                        end
                        
                        10'd0374, 10'd0375:                         begin
                           gs_ctrl31 <= 9'd187;
                        end
                        
                        10'd0376, 10'd0377:                         begin
                           gs_ctrl31 <= 9'd188;
                        end
                        
                        10'd0378, 10'd0379:                         begin
                           gs_ctrl31 <= 9'd189;
                        end
                        
                        10'd0380, 10'd0381:                         begin
                           gs_ctrl31 <= 9'd190;
                        end
                        
                        10'd0382, 10'd0383:                         begin
                           gs_ctrl31 <= 9'd191;
                        end
                        
                        10'd0384, 10'd0385:                         begin
                           gs_ctrl31 <= 9'd192;
                        end
                        
                        10'd0386, 10'd0387:                         begin
                           gs_ctrl31 <= 9'd193;
                        end
                        
                        10'd0388, 10'd0389:                         begin
                           gs_ctrl31 <= 9'd194;
                        end
                        
                        10'd0390, 10'd0391:                         begin
                           gs_ctrl31 <= 9'd195;
                        end
                        
                        10'd0392, 10'd0393:                         begin
                           gs_ctrl31 <= 9'd196;
                        end
                        
                        10'd0394, 10'd0395:                         begin
                           gs_ctrl31 <= 9'd197;
                        end
                        
                        10'd0396, 10'd0397:                         begin
                           gs_ctrl31 <= 9'd198;
                        end
                        
                        10'd0398, 10'd0399:                         begin
                           gs_ctrl31 <= 9'd199;
                        end
                        
                        10'd0400, 10'd0401:                         begin
                           gs_ctrl31 <= 9'd200;
                        end
                        
                        10'd0402, 10'd0403:                         begin
                           gs_ctrl31 <= 9'd201;
                        end
                        
                        10'd0404, 10'd0405:                         begin
                           gs_ctrl31 <= 9'd202;
                        end
                        
                        10'd0406, 10'd0407:                         begin
                           gs_ctrl31 <= 9'd203;
                        end
                        
                        10'd0408, 10'd0409:                         begin
                           gs_ctrl31 <= 9'd204;
                        end
                        
                        10'd0410, 10'd0411:                         begin
                           gs_ctrl31 <= 9'd205;
                        end
                        
                        10'd0412, 10'd0413:                         begin
                           gs_ctrl31 <= 9'd206;
                        end
                        
                        10'd0414, 10'd0415:                         begin
                           gs_ctrl31 <= 9'd207;
                        end
                        
                        10'd0416, 10'd0417:                         begin
                           gs_ctrl31 <= 9'd208;
                        end
                        
                        10'd0418, 10'd0419:                         begin
                           gs_ctrl31 <= 9'd209;
                        end
                        
                        10'd0420, 10'd0421:                         begin
                           gs_ctrl31 <= 9'd210;
                        end
                        
                        10'd0422, 10'd0423:                         begin
                           gs_ctrl31 <= 9'd211;
                        end
                        
                        10'd0424, 10'd0425:                         begin
                           gs_ctrl31 <= 9'd212;
                        end
                        
                        10'd0426, 10'd0427:                         begin
                           gs_ctrl31 <= 9'd213;
                        end
                        
                        10'd0428, 10'd0429:                         begin
                           gs_ctrl31 <= 9'd214;
                        end
                        
                        10'd0430, 10'd0431:                         begin
                           gs_ctrl31 <= 9'd215;
                        end
                        
                        10'd0432, 10'd0433:                         begin
                           gs_ctrl31 <= 9'd216;
                        end
                        
                        10'd0434, 10'd0435:                         begin
                           gs_ctrl31 <= 9'd217;
                        end
                        
                        10'd0436, 10'd0437:                         begin
                           gs_ctrl31 <= 9'd218;
                        end
                        
                        10'd0438, 10'd0439:                         begin
                           gs_ctrl31 <= 9'd219;
                        end
                        
                        10'd0440, 10'd0441:                         begin
                           gs_ctrl31 <= 9'd220;
                        end
                        
                        10'd0442, 10'd0443:                         begin
                           gs_ctrl31 <= 9'd221;
                        end
                        
                        10'd0444, 10'd0445:                         begin
                           gs_ctrl31 <= 9'd222;
                        end
                        
                        10'd0446, 10'd0447:                         begin
                           gs_ctrl31 <= 9'd223;
                        end
                        
                        10'd0448, 10'd0449:                         begin
                           gs_ctrl31 <= 9'd224;
                        end
                        
                        10'd0450, 10'd0451:                         begin
                           gs_ctrl31 <= 9'd225;
                        end
                        
                        10'd0452, 10'd0453:                         begin
                           gs_ctrl31 <= 9'd226;
                        end
                        
                        10'd0454, 10'd0455:                         begin
                           gs_ctrl31 <= 9'd227;
                        end
                        
                        10'd0456, 10'd0457:                         begin
                           gs_ctrl31 <= 9'd228;
                        end
                        
                        10'd0458, 10'd0459:                         begin
                           gs_ctrl31 <= 9'd229;
                        end
                        
                        10'd0460, 10'd0461:                         begin
                           gs_ctrl31 <= 9'd230;
                        end
                        
                        10'd0462, 10'd0463:                         begin
                           gs_ctrl31 <= 9'd231;
                        end
                        
                        10'd0464, 10'd0465:                         begin
                           gs_ctrl31 <= 9'd232;
                        end
                        
                        10'd0466, 10'd0467:                         begin
                           gs_ctrl31 <= 9'd233;
                        end
                        
                        10'd0468, 10'd0469:                         begin
                           gs_ctrl31 <= 9'd234;
                        end
                        
                        10'd0470, 10'd0471:                         begin
                           gs_ctrl31 <= 9'd235;
                        end
                        
                        10'd0472, 10'd0473:                         begin
                           gs_ctrl31 <= 9'd236;
                        end
                        
                        10'd0474, 10'd0475:                         begin
                           gs_ctrl31 <= 9'd237;
                        end
                        
                        10'd0476, 10'd0477:                         begin
                           gs_ctrl31 <= 9'd238;
                        end
                        
                        10'd0478, 10'd0479:                         begin
                           gs_ctrl31 <= 9'd239;
                        end
                        
                        10'd0480, 10'd0481:                         begin
                           gs_ctrl31 <= 9'd240;
                        end
                        
                        10'd0482, 10'd0483:                         begin
                           gs_ctrl31 <= 9'd241;
                        end
                        
                        10'd0484, 10'd0485:                         begin
                           gs_ctrl31 <= 9'd242;
                        end
                        
                        10'd0486, 10'd0487:                         begin
                           gs_ctrl31 <= 9'd243;
                        end
                        
                        10'd0488, 10'd0489:                         begin
                           gs_ctrl31 <= 9'd244;
                        end
                        
                        10'd0490, 10'd0491:                         begin
                           gs_ctrl31 <= 9'd245;
                        end
                        
                        10'd0492, 10'd0493:                         begin
                           gs_ctrl31 <= 9'd246;
                        end
                        
                        10'd0494, 10'd0495:                         begin
                           gs_ctrl31 <= 9'd247;
                        end
                        
                        10'd0496, 10'd0497:                         begin
                           gs_ctrl31 <= 9'd248;
                        end
                        
                        10'd0498, 10'd0499:                         begin
                           gs_ctrl31 <= 9'd249;
                        end
                        
                        10'd0500, 10'd0501:                         begin
                           gs_ctrl31 <= 9'd250;
                        end
                        
                        10'd0502, 10'd0503:                         begin
                           gs_ctrl31 <= 9'd251;
                        end
                        
                        10'd0504, 10'd0505:                         begin
                           gs_ctrl31 <= 9'd252;
                        end
                        
                        10'd0506, 10'd0507:                         begin
                           gs_ctrl31 <= 9'd253;
                        end
                        
                        10'd0508, 10'd0509:                         begin
                           gs_ctrl31 <= 9'd254;
                        end
                        
                        10'd0510, 10'd0511:                         begin
                           gs_ctrl31 <= 9'd255;
                        end
                        
                        10'd0512, 10'd0513:                         begin
                           gs_ctrl31 <= 9'd256;
                        end
                        
                        10'd0515:                         begin
                           gs_ctrl31 <= 9'd257;
                        end
                        
                        10'd0525:                         begin
                           gs_ctrl31 <= 9'd258;
                        end
                        
                        default:                         begin
                           gs_ctrl31 <= 9'd000;
                        end
                        
                     endcase

                  end
                  
               endcase

            end
         end

         // resource: mux_3bx5i5c
         // resource: regr_en_sc_3
         always @(posedge i_clk)
          begin :drive_gs_ctrl32
            if (i_rst == 1'b0) begin
               gs_ctrl32 <= 3'd0;
            end
            else begin
               case (stall1) 

                  1'b1:                   begin
                  end
                  
                  1'b0:                   begin
                     case (global_state1_next) 

                        10'd0514:                         begin
                           gs_ctrl32 <= 3'd1;
                        end
                        
                        10'd0515:                         begin
                           gs_ctrl32 <= 3'd2;
                        end
                        
                        10'd0516:                         begin
                           gs_ctrl32 <= 3'd3;
                        end
                        
                        10'd0519, 10'd0523, 10'd0524, 10'd0525, 10'd0526:                         begin
                           gs_ctrl32 <= 3'd4;
                        end
                        
                        default:                         begin
                           gs_ctrl32 <= 3'd0;
                        end
                        
                     endcase

                  end
                  
               endcase

            end
         end

         // resource: mux_3bx5i5c
         // resource: regr_en_sc_3
         always @(posedge i_clk)
          begin :drive_gs_ctrl33
            if (i_rst == 1'b0) begin
               gs_ctrl33 <= 3'd0;
            end
            else begin
               case (stall1) 

                  1'b1:                   begin
                  end
                  
                  1'b0:                   begin
                     case (global_state1_next) 

                        10'd0003, 10'd0005, 10'd0007, 10'd0009, 10'd0011, 10'd0013, 10'd0015, 10'd0017, 10'd0019, 10'd0021, 10'd0023, 10'd0025, 10'd0027, 10'd0029, 10'd0031, 10'd0033, 10'd0035, 10'd0037, 10'd0039, 10'd0041, 10'd0043, 10'd0045, 10'd0047, 10'd0049, 10'd0051, 10'd0053, 10'd0055, 10'd0057, 10'd0059, 10'd0061, 10'd0063, 10'd0065, 10'd0067, 10'd0069, 10'd0071, 10'd0073, 10'd0075, 10'd0077, 10'd0079, 10'd0081, 10'd0083, 10'd0085, 10'd0087, 10'd0089, 10'd0091, 10'd0093, 10'd0095, 
10'd0097
                        , 10'd0099, 10'd0101, 10'd0103, 10'd0105, 10'd0107, 10'd0109, 10'd0111, 10'd0113, 10'd0115, 10'd0117, 10'd0119, 10'd0121, 10'd0123, 10'd0125, 10'd0127, 10'd0129, 10'd0131, 10'd0133, 10'd0135, 10'd0137, 10'd0139, 10'd0141, 10'd0143, 10'd0145, 10'd0147, 10'd0149, 10'd0151, 10'd0153, 10'd0155, 10'd0157, 10'd0159, 10'd0161, 10'd0163, 10'd0165, 10'd0167, 10'd0169, 10'd0171, 10'd0173, 10'd0175, 10'd0177, 10'd0179, 10'd0181, 10'd0183, 10'd0185, 10'd0187, 10'd0189, 10'd0191, 
10'd0193
                        , 10'd0195, 10'd0197, 10'd0199, 10'd0201, 10'd0203, 10'd0205, 10'd0207, 10'd0209, 10'd0211, 10'd0213, 10'd0215, 10'd0217, 10'd0219, 10'd0221, 10'd0223, 10'd0225, 10'd0227, 10'd0229, 10'd0231, 10'd0233, 10'd0235, 10'd0237, 10'd0239, 10'd0241, 10'd0243, 10'd0245, 10'd0247, 10'd0249, 10'd0251, 10'd0253, 10'd0255, 10'd0257, 10'd0259, 10'd0261, 10'd0263, 10'd0265, 10'd0267, 10'd0269, 10'd0271, 10'd0273, 10'd0275, 10'd0277, 10'd0279, 10'd0281, 10'd0283, 10'd0285, 10'd0287, 
10'd0289
                        , 10'd0291, 10'd0293, 10'd0295, 10'd0297, 10'd0299, 10'd0301, 10'd0303, 10'd0305, 10'd0307, 10'd0309, 10'd0311, 10'd0313, 10'd0315, 10'd0317, 10'd0319, 10'd0321, 10'd0323, 10'd0325, 10'd0327, 10'd0329, 10'd0331, 10'd0333, 10'd0335, 10'd0337, 10'd0339, 10'd0341, 10'd0343, 10'd0345, 10'd0347, 10'd0349, 10'd0351, 10'd0353, 10'd0355, 10'd0357, 10'd0359, 10'd0361, 10'd0363, 10'd0365, 10'd0367, 10'd0369, 10'd0371, 10'd0373, 10'd0375, 10'd0377, 10'd0379, 10'd0381, 10'd0383, 
10'd0385
                        , 10'd0387, 10'd0389, 10'd0391, 10'd0393, 10'd0395, 10'd0397, 10'd0399, 10'd0401, 10'd0403, 10'd0405, 10'd0407, 10'd0409, 10'd0411, 10'd0413, 10'd0415, 10'd0417, 10'd0419, 10'd0421, 10'd0423, 10'd0425, 10'd0427, 10'd0429, 10'd0431, 10'd0433, 10'd0435, 10'd0437, 10'd0439, 10'd0441, 10'd0443, 10'd0445, 10'd0447, 10'd0449, 10'd0451, 10'd0453, 10'd0455, 10'd0457, 10'd0459, 10'd0461, 10'd0463, 10'd0465, 10'd0467, 10'd0469, 10'd0471, 10'd0473, 10'd0475, 10'd0477, 10'd0479, 
10'd0481
                        , 10'd0483, 10'd0485, 10'd0487, 10'd0489, 10'd0491, 10'd0493, 10'd0495, 10'd0497, 10'd0499, 10'd0501, 10'd0503, 10'd0505, 10'd0507, 10'd0509, 10'd0511, 10'd0513:                         begin
                           gs_ctrl33 <= 3'd1;
                        end
                        
                        10'd0516, 10'd0520:                         begin
                           gs_ctrl33 <= 3'd2;
                        end
                        
                        10'd0517, 10'd0521:                         begin
                           gs_ctrl33 <= 3'd3;
                        end
                        
                        10'd0518, 10'd0522:                         begin
                           gs_ctrl33 <= 3'd4;
                        end
                        
                        default:                         begin
                           gs_ctrl33 <= 3'd0;
                        end
                        
                     endcase

                  end
                  
               endcase

            end
         end

         // resource: mux_4bx9i9c
         // resource: regr_en_ss_sc_4
         always @(posedge i_clk)
          begin :drive_gs_ctrl34
            if (i_rst == 1'b0) begin
               gs_ctrl34 <= 4'd01;
            end
            else begin
               case (stall1) 

                  1'b1:                   begin
                  end
                  
                  1'b0:                   begin
                     case (global_state1_next) 

                        10'd0000, 10'd0002, 10'd0003, 10'd0004, 10'd0005, 10'd0006, 10'd0007, 10'd0008, 10'd0009, 10'd0010, 10'd0011, 10'd0012, 10'd0013, 10'd0014, 10'd0015, 10'd0016, 10'd0017, 10'd0018, 10'd0019, 10'd0020, 10'd0021, 10'd0022, 10'd0023, 10'd0024, 10'd0025, 10'd0026, 10'd0027, 10'd0028, 10'd0029, 10'd0030, 10'd0031, 10'd0032, 10'd0033, 10'd0034, 10'd0035, 10'd0036, 10'd0037, 10'd0038, 10'd0039, 10'd0040, 10'd0041, 10'd0042, 10'd0043, 10'd0044, 10'd0045, 10'd0046, 10'd0047, 
10'd0048
                        , 10'd0049, 10'd0050, 10'd0051, 10'd0052, 10'd0053, 10'd0054, 10'd0055, 10'd0056, 10'd0057, 10'd0058, 10'd0059, 10'd0060, 10'd0061, 10'd0062, 10'd0063, 10'd0064, 10'd0065, 10'd0066, 10'd0067, 10'd0068, 10'd0069, 10'd0070, 10'd0071, 10'd0072, 10'd0073, 10'd0074, 10'd0075, 10'd0076, 10'd0077, 10'd0078, 10'd0079, 10'd0080, 10'd0081, 10'd0082, 10'd0083, 10'd0084, 10'd0085, 10'd0086, 10'd0087, 10'd0088, 10'd0089, 10'd0090, 10'd0091, 10'd0092, 10'd0093, 10'd0094, 10'd0095, 
10'd0096
                        , 10'd0097, 10'd0098, 10'd0099, 10'd0100, 10'd0101, 10'd0102, 10'd0103, 10'd0104, 10'd0105, 10'd0106, 10'd0107, 10'd0108, 10'd0109, 10'd0110, 10'd0111, 10'd0112, 10'd0113, 10'd0114, 10'd0115, 10'd0116, 10'd0117, 10'd0118, 10'd0119, 10'd0120, 10'd0121, 10'd0122, 10'd0123, 10'd0124, 10'd0125, 10'd0126, 10'd0127, 10'd0128, 10'd0129, 10'd0130, 10'd0131, 10'd0132, 10'd0133, 10'd0134, 10'd0135, 10'd0136, 10'd0137, 10'd0138, 10'd0139, 10'd0140, 10'd0141, 10'd0142, 10'd0143, 
10'd0144
                        , 10'd0145, 10'd0146, 10'd0147, 10'd0148, 10'd0149, 10'd0150, 10'd0151, 10'd0152, 10'd0153, 10'd0154, 10'd0155, 10'd0156, 10'd0157, 10'd0158, 10'd0159, 10'd0160, 10'd0161, 10'd0162, 10'd0163, 10'd0164, 10'd0165, 10'd0166, 10'd0167, 10'd0168, 10'd0169, 10'd0170, 10'd0171, 10'd0172, 10'd0173, 10'd0174, 10'd0175, 10'd0176, 10'd0177, 10'd0178, 10'd0179, 10'd0180, 10'd0181, 10'd0182, 10'd0183, 10'd0184, 10'd0185, 10'd0186, 10'd0187, 10'd0188, 10'd0189, 10'd0190, 10'd0191, 
10'd0192
                        , 10'd0193, 10'd0194, 10'd0195, 10'd0196, 10'd0197, 10'd0198, 10'd0199, 10'd0200, 10'd0201, 10'd0202, 10'd0203, 10'd0204, 10'd0205, 10'd0206, 10'd0207, 10'd0208, 10'd0209, 10'd0210, 10'd0211, 10'd0212, 10'd0213, 10'd0214, 10'd0215, 10'd0216, 10'd0217, 10'd0218, 10'd0219, 10'd0220, 10'd0221, 10'd0222, 10'd0223, 10'd0224, 10'd0225, 10'd0226, 10'd0227, 10'd0228, 10'd0229, 10'd0230, 10'd0231, 10'd0232, 10'd0233, 10'd0234, 10'd0235, 10'd0236, 10'd0237, 10'd0238, 10'd0239, 
10'd0240
                        , 10'd0241, 10'd0242, 10'd0243, 10'd0244, 10'd0245, 10'd0246, 10'd0247, 10'd0248, 10'd0249, 10'd0250, 10'd0251, 10'd0252, 10'd0253, 10'd0254, 10'd0255, 10'd0256, 10'd0257, 10'd0258, 10'd0259, 10'd0260, 10'd0261, 10'd0262, 10'd0263, 10'd0264, 10'd0265, 10'd0266, 10'd0267, 10'd0268, 10'd0269, 10'd0270, 10'd0271, 10'd0272, 10'd0273, 10'd0274, 10'd0275, 10'd0276, 10'd0277, 10'd0278, 10'd0279, 10'd0280, 10'd0281, 10'd0282, 10'd0283, 10'd0284, 10'd0285, 10'd0286, 10'd0287, 
10'd0288
                        , 10'd0289, 10'd0290, 10'd0291, 10'd0292, 10'd0293, 10'd0294, 10'd0295, 10'd0296, 10'd0297, 10'd0298, 10'd0299, 10'd0300, 10'd0301, 10'd0302, 10'd0303, 10'd0304, 10'd0305, 10'd0306, 10'd0307, 10'd0308, 10'd0309, 10'd0310, 10'd0311, 10'd0312, 10'd0313, 10'd0314, 10'd0315, 10'd0316, 10'd0317, 10'd0318, 10'd0319, 10'd0320, 10'd0321, 10'd0322, 10'd0323, 10'd0324, 10'd0325, 10'd0326, 10'd0327, 10'd0328, 10'd0329, 10'd0330, 10'd0331, 10'd0332, 10'd0333, 10'd0334, 10'd0335, 
10'd0336
                        , 10'd0337, 10'd0338, 10'd0339, 10'd0340, 10'd0341, 10'd0342, 10'd0343, 10'd0344, 10'd0345, 10'd0346, 10'd0347, 10'd0348, 10'd0349, 10'd0350, 10'd0351, 10'd0352, 10'd0353, 10'd0354, 10'd0355, 10'd0356, 10'd0357, 10'd0358, 10'd0359, 10'd0360, 10'd0361, 10'd0362, 10'd0363, 10'd0364, 10'd0365, 10'd0366, 10'd0367, 10'd0368, 10'd0369, 10'd0370, 10'd0371, 10'd0372, 10'd0373, 10'd0374, 10'd0375, 10'd0376, 10'd0377, 10'd0378, 10'd0379, 10'd0380, 10'd0381, 10'd0382, 10'd0383, 
10'd0384
                        , 10'd0385, 10'd0386, 10'd0387, 10'd0388, 10'd0389, 10'd0390, 10'd0391, 10'd0392, 10'd0393, 10'd0394, 10'd0395, 10'd0396, 10'd0397, 10'd0398, 10'd0399, 10'd0400, 10'd0401, 10'd0402, 10'd0403, 10'd0404, 10'd0405, 10'd0406, 10'd0407, 10'd0408, 10'd0409, 10'd0410, 10'd0411, 10'd0412, 10'd0413, 10'd0414, 10'd0415, 10'd0416, 10'd0417, 10'd0418, 10'd0419, 10'd0420, 10'd0421, 10'd0422, 10'd0423, 10'd0424, 10'd0425, 10'd0426, 10'd0427, 10'd0428, 10'd0429, 10'd0430, 10'd0431, 
10'd0432
                        , 10'd0433, 10'd0434, 10'd0435, 10'd0436, 10'd0437, 10'd0438, 10'd0439, 10'd0440, 10'd0441, 10'd0442, 10'd0443, 10'd0444, 10'd0445, 10'd0446, 10'd0447, 10'd0448, 10'd0449, 10'd0450, 10'd0451, 10'd0452, 10'd0453, 10'd0454, 10'd0455, 10'd0456, 10'd0457, 10'd0458, 10'd0459, 10'd0460, 10'd0461, 10'd0462, 10'd0463, 10'd0464, 10'd0465, 10'd0466, 10'd0467, 10'd0468, 10'd0469, 10'd0470, 10'd0471, 10'd0472, 10'd0473, 10'd0474, 10'd0475, 10'd0476, 10'd0477, 10'd0478, 10'd0479, 
10'd0480
                        , 10'd0481, 10'd0482, 10'd0483, 10'd0484, 10'd0485, 10'd0486, 10'd0487, 10'd0488, 10'd0489, 10'd0490, 10'd0491, 10'd0492, 10'd0493, 10'd0494, 10'd0495, 10'd0496, 10'd0497, 10'd0498, 10'd0499, 10'd0500, 10'd0501, 10'd0502, 10'd0503, 10'd0504, 10'd0505, 10'd0506, 10'd0507, 10'd0508, 10'd0509, 10'd0510, 10'd0511, 10'd0512, 10'd0513, 10'd0516, 10'd0517, 10'd0518, 10'd0520, 10'd0521, 10'd0522:                         begin
                           gs_ctrl34 <= 4'd01;
                        end
                        
                        10'd0514:                         begin
                           gs_ctrl34 <= 4'd02;
                        end
                        
                        10'd0515:                         begin
                           gs_ctrl34 <= 4'd03;
                        end
                        
                        10'd0519:                         begin
                           gs_ctrl34 <= 4'd04;
                        end
                        
                        10'd0523:                         begin
                           gs_ctrl34 <= 4'd05;
                        end
                        
                        10'd0524:                         begin
                           gs_ctrl34 <= 4'd06;
                        end
                        
                        10'd0525:                         begin
                           gs_ctrl34 <= 4'd07;
                        end
                        
                        10'd0526:                         begin
                           gs_ctrl34 <= 4'd08;
                        end
                        
                        default:                         begin
                           gs_ctrl34 <= 4'd00;
                        end
                        
                     endcase

                  end
                  
               endcase

            end
         end

         // resource: mux_2bx4i4c
         // resource: regr_en_ss_sc_2
         always @(posedge i_clk)
          begin :drive_gs_ctrl35
            if (i_rst == 1'b0) begin
               gs_ctrl35 <= 2'd1;
            end
            else begin
               case (stall1) 

                  1'b1:                   begin
                  end
                  
                  1'b0:                   begin
                     case (global_state1_next) 

                        10'd0000, 10'd0003, 10'd0005, 10'd0007, 10'd0009, 10'd0011, 10'd0013, 10'd0015, 10'd0017, 10'd0019, 10'd0021, 10'd0023, 10'd0025, 10'd0027, 10'd0029, 10'd0031, 10'd0033, 10'd0035, 10'd0037, 10'd0039, 10'd0041, 10'd0043, 10'd0045, 10'd0047, 10'd0049, 10'd0051, 10'd0053, 10'd0055, 10'd0057, 10'd0059, 10'd0061, 10'd0063, 10'd0065, 10'd0067, 10'd0069, 10'd0071, 10'd0073, 10'd0075, 10'd0077, 10'd0079, 10'd0081, 10'd0083, 10'd0085, 10'd0087, 10'd0089, 10'd0091, 10'd0093, 
10'd0095
                        , 10'd0097, 10'd0099, 10'd0101, 10'd0103, 10'd0105, 10'd0107, 10'd0109, 10'd0111, 10'd0113, 10'd0115, 10'd0117, 10'd0119, 10'd0121, 10'd0123, 10'd0125, 10'd0127, 10'd0129, 10'd0131, 10'd0133, 10'd0135, 10'd0137, 10'd0139, 10'd0141, 10'd0143, 10'd0145, 10'd0147, 10'd0149, 10'd0151, 10'd0153, 10'd0155, 10'd0157, 10'd0159, 10'd0161, 10'd0163, 10'd0165, 10'd0167, 10'd0169, 10'd0171, 10'd0173, 10'd0175, 10'd0177, 10'd0179, 10'd0181, 10'd0183, 10'd0185, 10'd0187, 10'd0189, 
10'd0191
                        , 10'd0193, 10'd0195, 10'd0197, 10'd0199, 10'd0201, 10'd0203, 10'd0205, 10'd0207, 10'd0209, 10'd0211, 10'd0213, 10'd0215, 10'd0217, 10'd0219, 10'd0221, 10'd0223, 10'd0225, 10'd0227, 10'd0229, 10'd0231, 10'd0233, 10'd0235, 10'd0237, 10'd0239, 10'd0241, 10'd0243, 10'd0245, 10'd0247, 10'd0249, 10'd0251, 10'd0253, 10'd0255, 10'd0257, 10'd0259, 10'd0261, 10'd0263, 10'd0265, 10'd0267, 10'd0269, 10'd0271, 10'd0273, 10'd0275, 10'd0277, 10'd0279, 10'd0281, 10'd0283, 10'd0285, 
10'd0287
                        , 10'd0289, 10'd0291, 10'd0293, 10'd0295, 10'd0297, 10'd0299, 10'd0301, 10'd0303, 10'd0305, 10'd0307, 10'd0309, 10'd0311, 10'd0313, 10'd0315, 10'd0317, 10'd0319, 10'd0321, 10'd0323, 10'd0325, 10'd0327, 10'd0329, 10'd0331, 10'd0333, 10'd0335, 10'd0337, 10'd0339, 10'd0341, 10'd0343, 10'd0345, 10'd0347, 10'd0349, 10'd0351, 10'd0353, 10'd0355, 10'd0357, 10'd0359, 10'd0361, 10'd0363, 10'd0365, 10'd0367, 10'd0369, 10'd0371, 10'd0373, 10'd0375, 10'd0377, 10'd0379, 10'd0381, 
10'd0383
                        , 10'd0385, 10'd0387, 10'd0389, 10'd0391, 10'd0393, 10'd0395, 10'd0397, 10'd0399, 10'd0401, 10'd0403, 10'd0405, 10'd0407, 10'd0409, 10'd0411, 10'd0413, 10'd0415, 10'd0417, 10'd0419, 10'd0421, 10'd0423, 10'd0425, 10'd0427, 10'd0429, 10'd0431, 10'd0433, 10'd0435, 10'd0437, 10'd0439, 10'd0441, 10'd0443, 10'd0445, 10'd0447, 10'd0449, 10'd0451, 10'd0453, 10'd0455, 10'd0457, 10'd0459, 10'd0461, 10'd0463, 10'd0465, 10'd0467, 10'd0469, 10'd0471, 10'd0473, 10'd0475, 10'd0477, 
10'd0479
                        , 10'd0481, 10'd0483, 10'd0485, 10'd0487, 10'd0489, 10'd0491, 10'd0493, 10'd0495, 10'd0497, 10'd0499, 10'd0501, 10'd0503, 10'd0505, 10'd0507, 10'd0509, 10'd0511, 10'd0513, 10'd0516, 10'd0517, 10'd0518, 10'd0520, 10'd0521, 10'd0522:                         begin
                           gs_ctrl35 <= 2'd1;
                        end
                        
                        10'd0514:                         begin
                           gs_ctrl35 <= 2'd2;
                        end
                        
                        10'd0515:                         begin
                           gs_ctrl35 <= 2'd3;
                        end
                        
                        default:                         begin
                           gs_ctrl35 <= 2'd0;
                        end
                        
                     endcase

                  end
                  
               endcase

            end
         end

         // resource: mux_1bx2i2c
         // resource: regr_en_sc_1
         always @(posedge i_clk)
          begin :drive_gs_ctrl36
            if (i_rst == 1'b0) begin
               gs_ctrl36 <= 1'b0;
            end
            else begin
               case (stall1) 

                  1'b1:                   begin
                  end
                  
                  1'b0:                   begin
                     case (global_state1_next) 

                        10'd0526:                         begin
                           gs_ctrl36 <= 1'b1;
                        end
                        
                        default:                         begin
                           gs_ctrl36 <= 1'b0;
                        end
                        
                     endcase

                  end
                  
               endcase

            end
         end

         // resource: mux_1bx2i2c
         // resource: regr_en_sc_1
         always @(posedge i_clk)
          begin :drive_gs_ctrl38
            if (i_rst == 1'b0) begin
               gs_ctrl38 <= 1'b0;
            end
            else begin
               case (stall1) 

                  1'b1:                   begin
                  end
                  
                  1'b0:                   begin
                     case (global_state1_next) 

                        10'd0524:                         begin
                           gs_ctrl38 <= 1'b1;
                        end
                        
                        default:                         begin
                           gs_ctrl38 <= 1'b0;
                        end
                        
                     endcase

                  end
                  
               endcase

            end
         end

         // resource: mux_1bx2i2c
         // resource: regr_en_sc_1
         always @(posedge i_clk)
          begin :drive_gs_ctrl39
            if (i_rst == 1'b0) begin
               gs_ctrl39 <= 1'b0;
            end
            else begin
               case (stall1) 

                  1'b1:                   begin
                  end
                  
                  1'b0:                   begin
                     case (global_state1_next) 

                        10'd0524, 10'd0525:                         begin
                           gs_ctrl39 <= 1'b1;
                        end
                        
                        default:                         begin
                           gs_ctrl39 <= 1'b0;
                        end
                        
                     endcase

                  end
                  
               endcase

            end
         end

         // resource: mux_2bx3i3c
         // resource: regr_en_sc_2
         always @(posedge i_clk)
          begin :drive_gs_ctrl45
            if (i_rst == 1'b0) begin
               gs_ctrl45 <= 2'd0;
            end
            else begin
               case (stall1) 

                  1'b1:                   begin
                  end
                  
                  1'b0:                   begin
                     case (global_state1_next) 

                        10'd0524, 10'd0525:                         begin
                           gs_ctrl45 <= 2'd1;
                        end
                        
                        10'd0526:                         begin
                           gs_ctrl45 <= 2'd2;
                        end
                        
                        default:                         begin
                           gs_ctrl45 <= 2'd0;
                        end
                        
                     endcase

                  end
                  
               endcase

            end
         end

         // resource: mux_2bx3i3c
         // resource: regr_en_sc_2
         always @(posedge i_clk)
          begin :drive_gs_ctrl46
            if (i_rst == 1'b0) begin
               gs_ctrl46 <= 2'd0;
            end
            else begin
               case (stall1) 

                  1'b1:                   begin
                  end
                  
                  1'b0:                   begin
                     case (global_state1_next) 

                        10'd0524:                         begin
                           gs_ctrl46 <= 2'd1;
                        end
                        
                        10'd0525:                         begin
                           gs_ctrl46 <= 2'd2;
                        end
                        
                        default:                         begin
                           gs_ctrl46 <= 2'd0;
                        end
                        
                     endcase

                  end
                  
               endcase

            end
         end

         // instance: drive_i_rgb_busy
         assign i_rgb_busy = DC_Filter_gen_busy_r_4_4743_out1[2];

         // resource: DC_Filter_gen_busy_r_4  instance: DC_Filter_gen_busy_r_4_4743
         assign DC_Filter_gen_busy_r_4_4743_out1 = {DC_Filter_gen_busy_r_4_4743_gnew_req_i0, {DC_Filter_gen_busy_r_4_4743_gdiv_i1, DC_Filter_gen_busy_r_4_4743_gen_busy_0_i_rgb_m_data_is_invalid_next}};

         // resource: DC_Filter_gen_busy_r_4  instance: DC_Filter_gen_busy_r_4_4743
         assign DC_Filter_gen_busy_r_4_4743_gen_busy_0_i_rgb_m_data_is_invalid_next = ~DC_Filter_gen_busy_r_4_4743_gdiv_i1;

         // resource: DC_Filter_gen_busy_r_4  instance: DC_Filter_gen_busy_r_4_4743
         assign DC_Filter_gen_busy_r_4_4743_gdiv_i1 = i_rgb_vld & !DC_Filter_gen_busy_r_4_4743_gnew_req_i0;

         // resource: DC_Filter_gen_busy_r_4  instance: DC_Filter_gen_busy_r_4_4743
         assign DC_Filter_gen_busy_r_4_4743_gnew_req_i0 = i_rgb_m_busy_req_0 & (i_rgb_m_unvalidated_req | i_rgb_vld);

         // resource: regr_ss_1
         always @(posedge i_clk)
          begin :drive_i_rgb_m_unvalidated_req
            if (i_rst == 1'b0) begin
               i_rgb_m_unvalidated_req <= 1'd1;
            end
            else begin
               i_rgb_m_unvalidated_req <= DC_Filter_N_Muxb_1_2_4_4_7_out1;
            end
         end

         // resource: DC_Filter_N_Muxb_1_2_4_4
         always @(i_rgb_vld or i_rgb_m_busy_req_0 or i_rgb_m_unvalidated_req)
          begin :DC_Filter_N_Muxb_1_2_4_4_7
            if (i_rgb_m_busy_req_0) begin
               DC_Filter_N_Muxb_1_2_4_4_7_out1 = i_rgb_m_unvalidated_req;
            end
            else begin
               DC_Filter_N_Muxb_1_2_4_4_7_out1 = i_rgb_vld;
            end
         end

         // instance: drive_o_result_vld
         assign o_result_vld = DC_Filter_Or_1Ux1U_1U_4_2_out1;

         // resource: DC_Filter_Or_1Ux1U_1U_4  instance: DC_Filter_Or_1Ux1U_1U_4_2
         assign DC_Filter_Or_1Ux1U_1U_4_2_out1 = o_result_m_unacked_req | DC_Filter_Xor_1Ux1U_1U_1_1_out1;

         // resource: regr_sc_1
         always @(posedge i_clk)
          begin :drive_o_result_m_unacked_req
            if (i_rst == 1'b0) begin
               o_result_m_unacked_req <= 1'd0;
            end
            else begin
               o_result_m_unacked_req <= DC_Filter_And_1Ux1U_1U_4_2375_out1;
            end
         end

         // resource: DC_Filter_And_1Ux1U_1U_4  instance: DC_Filter_And_1Ux1U_1U_4_2375
         assign DC_Filter_And_1Ux1U_1U_4_2375_out1 = o_result_busy & o_result_vld;

         // resource: DC_Filter_Xor_1Ux1U_1U_1  instance: DC_Filter_Xor_1Ux1U_1U_1_1
         assign DC_Filter_Xor_1Ux1U_1U_1_1_out1 = o_result_m_req_m_trig_req ^ o_result_m_req_m_prev_trig_req;

         // resource: regr_sc_1
         always @(posedge i_clk)
          begin :drive_o_result_m_req_m_prev_trig_req
            if (i_rst == 1'b0) begin
               o_result_m_req_m_prev_trig_req <= 1'd0;
            end
            else begin
               o_result_m_req_m_prev_trig_req <= o_result_m_req_m_trig_req;
            end
         end

         // resource: DC_Filter_Not_1U_1U_1  instance: DC_Filter_Not_1U_1U_1_3
         assign DC_Filter_Not_1U_1U_1_3_out1 = !o_result_m_req_m_trig_req;

         // instance: drive_i_rgb_inside_busy
         assign i_rgb_inside_busy = DC_Filter_gen_busy_r_4_4744_out1[2];

         // resource: DC_Filter_gen_busy_r_4  instance: DC_Filter_gen_busy_r_4_4744
         assign DC_Filter_gen_busy_r_4_4744_out1 = {DC_Filter_gen_busy_r_4_4744_gnew_req_i0, {DC_Filter_gen_busy_r_4_4744_gdiv_i1, DC_Filter_gen_busy_r_4_4744_gen_busy_0_i_rgb_m_data_is_invalid_next}};

         // resource: DC_Filter_gen_busy_r_4  instance: DC_Filter_gen_busy_r_4_4744
         assign DC_Filter_gen_busy_r_4_4744_gen_busy_0_i_rgb_m_data_is_invalid_next = ~DC_Filter_gen_busy_r_4_4744_gdiv_i1;

         // resource: DC_Filter_gen_busy_r_4  instance: DC_Filter_gen_busy_r_4_4744
         assign DC_Filter_gen_busy_r_4_4744_gdiv_i1 = i_rgb_inside_vld & !DC_Filter_gen_busy_r_4_4744_gnew_req_i0;

         // resource: DC_Filter_gen_busy_r_4  instance: DC_Filter_gen_busy_r_4_4744
         assign DC_Filter_gen_busy_r_4_4744_gnew_req_i0 = i_rgb_inside_m_busy_req_0 & (i_rgb_inside_m_unvalidated_req | i_rgb_inside_vld);

         // resource: regr_ss_1
         always @(posedge i_clk)
          begin :drive_i_rgb_inside_m_unvalidated_req
            if (i_rst == 1'b0) begin
               i_rgb_inside_m_unvalidated_req <= 1'd1;
            end
            else begin
               i_rgb_inside_m_unvalidated_req <= DC_Filter_N_Muxb_1_2_4_4_2376_out1;
            end
         end

         // resource: DC_Filter_N_Muxb_1_2_4_4
         always @(i_rgb_inside_vld or i_rgb_inside_m_busy_req_0 or i_rgb_inside_m_unvalidated_req)
          begin :DC_Filter_N_Muxb_1_2_4_4_2376
            if (i_rgb_inside_m_busy_req_0) begin
               DC_Filter_N_Muxb_1_2_4_4_2376_out1 = i_rgb_inside_m_unvalidated_req;
            end
            else begin
               DC_Filter_N_Muxb_1_2_4_4_2376_out1 = i_rgb_inside_vld;
            end
         end

         // instance: drive_o_rgb_inside_vld
         assign o_rgb_inside_vld = DC_Filter_Or_1Ux1U_1U_4_5_out1;

         // resource: DC_Filter_Or_1Ux1U_1U_4  instance: DC_Filter_Or_1Ux1U_1U_4_5
         assign DC_Filter_Or_1Ux1U_1U_4_5_out1 = o_rgb_inside_m_unacked_req | DC_Filter_Xor_1Ux1U_1U_1_4_out1;

         // resource: regr_sc_1
         always @(posedge i_clk)
          begin :drive_o_rgb_inside_m_unacked_req
            if (i_rst == 1'b0) begin
               o_rgb_inside_m_unacked_req <= 1'd0;
            end
            else begin
               o_rgb_inside_m_unacked_req <= DC_Filter_And_1Ux1U_1U_4_2373_out1;
            end
         end

         // resource: DC_Filter_And_1Ux1U_1U_4  instance: DC_Filter_And_1Ux1U_1U_4_2373
         assign DC_Filter_And_1Ux1U_1U_4_2373_out1 = o_rgb_inside_busy & o_rgb_inside_vld;

         // resource: DC_Filter_Xor_1Ux1U_1U_1  instance: DC_Filter_Xor_1Ux1U_1U_1_4
         assign DC_Filter_Xor_1Ux1U_1U_1_4_out1 = o_rgb_inside_m_req_m_trig_req ^ o_rgb_inside_m_req_m_prev_trig_req;

         // resource: regr_sc_1
         always @(posedge i_clk)
          begin :drive_o_rgb_inside_m_req_m_prev_trig_req
            if (i_rst == 1'b0) begin
               o_rgb_inside_m_req_m_prev_trig_req <= 1'd0;
            end
            else begin
               o_rgb_inside_m_req_m_prev_trig_req <= o_rgb_inside_m_req_m_trig_req;
            end
         end

         // resource: DC_Filter_Not_1U_1U_1  instance: DC_Filter_Not_1U_1U_1_6
         assign DC_Filter_Not_1U_1U_1_6_out1 = !o_rgb_inside_m_req_m_trig_req;


endmodule

